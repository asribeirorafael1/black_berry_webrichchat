/*!
 * Copyright (c) 2019 BlackBerry.  All Rights Reserved.
 * 
 * You must obtain a license from and pay any applicable license fees to
 * BlackBerry before you may reproduce, modify or distribute this software, or
 * any work that includes all or part of this software.
 * 
 * For third party licenses see: THIRDPARTY_LICENSES.txt.
 * 
 */
/*! v1.4.0-rc6 */
var BBMEnterprise=function(e){var t={};function n(l){if(t[l])return t[l].exports;var r=t[l]={i:l,l:!1,exports:{}};return e[l].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,l){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(n.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(l,r,function(t){return e[t]}.bind(null,r));return l},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=61)}([function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return s});var l=n(2),r=(n(1),n(19)),i=n.n(r);function s(e,t,...n){Object(l.default)(Number.isInteger(e)&&e>=0,"Log level={0} must be an integer >= 0",e),Object(l.default)("string"==typeof t,"Log message must be a string"),e>s.logThreshold||("web"===i.a&&(n=Array.from(n,function(e){return e&&"number"!=typeof e?e.toString():e})),t=(new Date).toISOString()+" ["+e+"]: "+t,e<=s.CRITICAL?console.trace(t,...n):e!==s.ERROR?e!==s.WARNING?e!==s.NOTICE?console.log(t,...n):console.info(t,...n):console.warn(t,...n):console.error(t,...n))}Object.defineProperty(s,"TRACE",{value:0}),Object.defineProperty(s,"CRITICAL",{value:1}),Object.defineProperty(s,"ERROR",{value:2}),Object.defineProperty(s,"WARNING",{value:3}),Object.defineProperty(s,"NOTICE",{value:4}),Object.defineProperty(s,"INFO",{value:5}),Object.defineProperty(s,"DEBUG1",{value:6}),Object.defineProperty(s,"DEBUG2",{value:7}),s.logThreshold=s.INFO,s.logErrorForDebugging=function(e){void 0},s.debug=function(...e){void 0}},function(e,t,n){"use strict";function l(e){this.name="BBMEnterprise.Error.Error",this.message=e||"An error has occurred",this.stack=(new Error).stack}function r(e){this.name="BBMEnterprise.Error.NotFoundError",this.message=e||"The requested data was not found",this.stack=(new Error).stack}function i(e){this.name="BBMEnterprise.Error.DuplicateError",this.message=e||"Duplicate error",this.stack=(new Error).stack}function s(e){this.name="BBMEnterprise.Error.PermanentFailure",this.message="PermanentFailure. The request must not be retried"+(e?": "+e:""),this.stack=(new Error).stack}function o(e){this.name="BBMEnterprise.Error.TemporaryFailure",this.message="TemporaryFailure. The request may be retried later"+(e?": "+e:""),this.stack=(new Error).stack}function a(e){this.name="BBMEnterprise.Error.Forbidden",this.message="Forbidden. The request must not be retried"+(e?": "+e:""),this.stack=(new Error).stack}function u(e){this.name="BBMEnterprise.Error.NotFound",this.message="NotFound. The request must not be retried"+(e?": "+e:""),this.stack=(new Error).stack}function c(e){this.name="BBMEnterprise.Error.BrowserNotSupportedError",this.message=e||"The browser is not supported",this.stack=(new Error).stack}function d(e){this.name="BBMEnterprise.AssertionError",this.message="AssertionError: "+e,this.stack=(new Error).stack}function p(e){this.name="BBMEnterprise.Error.InvalidEncodingError",this.message=e,this.stack=(new Error).stack}n.r(t),n.d(t,"Error",function(){return l}),n.d(t,"NotFoundError",function(){return r}),n.d(t,"DuplicateError",function(){return i}),n.d(t,"PermanentFailure",function(){return s}),n.d(t,"TemporaryFailure",function(){return o}),n.d(t,"Forbidden",function(){return a}),n.d(t,"NotFound",function(){return u}),n.d(t,"BrowserNotSupportedError",function(){return c}),n.d(t,"AssertionError",function(){return d}),n.d(t,"InvalidEncodingError",function(){return p}),l.prototype=Object.create(Error.prototype),l.prototype.constructor=l,r.prototype=Object.create(l.prototype),r.prototype.constructor=r,i.prototype=Object.create(l.prototype),i.prototype.constructor=i,s.prototype=Object.create(l.prototype),s.prototype.constructor=s,o.prototype=Object.create(l.prototype),o.prototype.constructor=o,a.prototype=Object.create(s.prototype),a.prototype.constructor=a,u.prototype=Object.create(s.prototype),u.prototype.constructor=u,c.prototype=Object.create(l.prototype),c.prototype.constructor=c,d.prototype=Object.create(l.prototype),d.prototype.constructor=d,p.prototype=Object.create(Error.prototype),p.prototype.constructor=p},function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return l});n(1);function l(e,t,...n){}},function(e,t,n){"use strict";n.r(t),n.d(t,"base64urlEncode",function(){return a}),n.d(t,"base64urlDecode",function(){return u}),n.d(t,"base64UrlEncodeByteArray",function(){return c}),n.d(t,"array2b",function(){return d}),n.d(t,"base64UrlDecodeByteArray",function(){return p}),n.d(t,"b2array",function(){return g}),n.d(t,"array2hex",function(){return h}),n.d(t,"hex2array",function(){return m}),n.d(t,"truncate",function(){return y}),n.d(t,"appendToArray",function(){return b}),n.d(t,"spliceArray",function(){return v});var l=n(1),r=n(20),i=n.n(r);function s(e){return e.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}function o(e){return e.replace(/-/g,"+").replace(/_/g,"/")}function a(e){return s(i.a.base64String(e))}function u(e){return i.a.unbase64String(o(e))}function c(e){return s(i.a.base64Uint8Array(e))}const d=c;function p(e){return i.a.unbase64Array(o(e))}const g=p;function h(e){if(!(e instanceof Uint8Array))throw new l.Error("array2hex argument must be a Uint8Array");let t="";for(const n of e)n<16&&(t+="0"),t+=n.toString(16);return t}const f=/^(?:[0-9a-f][0-9a-f])*$/i;function m(e){if("string"!=typeof e||!f.test(e))throw new l.Error("hex2array invalid argument");const t=new Uint8Array(e.length/2);for(let n=0;n<t.length;++n)t[n]=parseInt(e.substr(2*n,2),16);return t}function y(e,t){if("string"!=typeof e)return e;if(e.length<=t)return e;for(var n=0,l=0;l<t&&n<e.length;++l){var r=e.charCodeAt(n);55296<=r&&r<=57343&&++n,++n}return e.substr(0,Math.min(n,e.length))}function b(e,t){if(t.length<=32768)Array.prototype.push.apply(e,t);else for(var n=0,l=t.length;n<l;n+=32768)Array.prototype.push.apply(e,t.slice(n,Math.min(n+32768,l)))}function v(e,t,n,l,r,i){for(var s=0,o=r;o<i;o+=10240){var a=t+s,u=Math.min(o+10240,i),c=[a,n];Array.prototype.push.apply(c,l.slice(o,u)),e.splice.apply(e,c),s+=u-o}return s}},function(e,t,n){"use strict";n.r(t),n.d(t,"encryptDiversifier",function(){return g}),n.d(t,"metadataDiversifier",function(){return h}),n.d(t,"symmetricDiversifier",function(){return f}),n.d(t,"managementDiversifier",function(){return m}),n.d(t,"spekeDiversifier",function(){return y}),n.d(t,"proofDiversifier",function(){return b}),n.d(t,"ecSpekeDiversifier",function(){return v}),n.d(t,"generateSigningKeyPair",function(){return E}),n.d(t,"generateEncryptionKeyPair",function(){return I}),n.d(t,"generateBytes",function(){return S}),n.d(t,"generateSharedSecret",function(){return _}),n.d(t,"generateChatKey",function(){return T}),n.d(t,"keyExchangePrefix",function(){return w}),n.d(t,"userPrefix",function(){return R}),n.d(t,"chatPrefix",function(){return A}),n.d(t,"metadataPrefix",function(){return O}),n.d(t,"importPrivateSigningKey",function(){return M}),n.d(t,"importPrivateEncryptionKey",function(){return P}),n.d(t,"importPublicSigningKey",function(){return D}),n.d(t,"importPublicEncryptionKey",function(){return x}),n.d(t,"compressKey",function(){return N}),n.d(t,"uncompressKey",function(){return B}),n.d(t,"sign",function(){return L}),n.d(t,"verify",function(){return $}),n.d(t,"hmac",function(){return q}),n.d(t,"encrypt",function(){return H}),n.d(t,"encryptFile",function(){return W}),n.d(t,"decryptFile",function(){return X}),n.d(t,"decrypt",function(){return G}),n.d(t,"decryptMetadata",function(){return V}),n.d(t,"decodeAndDecryptMetadata",function(){return K}),n.d(t,"generateAuthCode",function(){return z}),n.d(t,"verifyAuthCode",function(){return Y}),n.d(t,"deriveKey",function(){return ee}),n.d(t,"deriveSpekeKeys",function(){return te}),n.d(t,"getIdpUserIdHash",function(){return se}),n.d(t,"generateManagementKey",function(){return oe}),n.d(t,"encryptMgmtKey",function(){return ae}),n.d(t,"decryptMgmtKey",function(){return ue}),n.d(t,"authEncrypt",function(){return ce}),n.d(t,"authDecrypt",function(){return de}),n.d(t,"deriveKeyArgon2",function(){return pe});var l=n(1),r=n(3),i=n(0),s=n(14),o=n(34),a=n(47),u=n(6),c=n(38),d=n.n(c);const p="Protect",g=[77,101,115,115,97,103,101,32,69,110,99,114,121,112,116,105,111,110],h=[77,101,116,97,100,97,116,97,32,69,110,99,114,121,112,116,105,111,110],f=[66,66,77,32,80,114,111,116,101,99,116,101,100,32,75,101,121,32,69,120,99,104,97,110,103,101],m="BBME SDK KMS DRK",y=[101,110,100,112,111,105,110,116,32,107,101,121],b=[75,95,112,114,111,111,102],v=[69,67,45,83,80,69,75,69,32,80,97,115,115,119,111,114,100];function E(){return u.generateEcKey(!0,["sign","verify"],!0).then(J)}function I(){return u.generateEcKey(!0,["deriveBits"],!1).then(J)}function S(e){const t=u.getRandomValues(new Uint8Array(e));return i.default.debug(i.default.DEBUG2,"%s: generatedBytes: %s",p,r.array2hex(t)),t}function _(e,t){return u.deriveBits(e,t)}function T(){return u.generateAesKey("AES-CTR",!0,["encrypt","decrypt"]).then(u.exportAesKey).then(e=>(i.default.debug(i.default.DEBUG2,"%s: generateChatKey: %s",p,r.array2hex(e)),e))}function w(e,t,n){let l=new Uint8Array(34),s=0;return l.set([1]),new DataView(l.buffer).setUint8(s+=1,n),l.set([1,0],s+=1),l.set(ie(e),s+=2),l.set(ie(t),s+=8),l[s+=8]=0,l[s+=13]=3,i.default.debug(i.default.DEBUG2,"%s: keyExchangePrefix(%s, %s, %s): %s",p,e,t,n,r.array2hex(l)),l}function R(e,t,n,l){let s=new Uint8Array(21+n.length+4+1);s.set([1,1,0,1]);let o=0;return s.set(ie(e),o+=4),s.set(ie(t),o+=8),s[o+=8]=0,s.set(n,o+=1),new DataView(s.buffer).setInt32(o+=n.length,l),s[o+=4]=3,i.default.debug(i.default.DEBUG2,"%s: userPrefix(%s, %s, %s, %s): %s",p,e,t,r.array2hex(n),l,r.array2hex(s)),s}function A(e,t,n,l){let s=new Uint8Array(21+t.length+n.length+4+1);s.set([1,1,0,1]);let o=0;return s.set(ie(e),o+=4),s[o+=16]=t.length,s.set(t,o+=1),s.set(n,o+=t.length),new DataView(s.buffer).setInt32(o+=n.length,l),s[o+=4]=3,i.default.debug(i.default.DEBUG2,"%s: chatPrefix(%s, %s, %s, %s): %s",p,e,r.array2hex(t),r.array2hex(n),l,r.array2hex(s)),s}function O(){let e=new Uint8Array(18);return e.set([1,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,2]),i.default.debug(i.default.DEBUG2,"%s: metadataPrefix(): %s",p,r.array2hex(e)),e}function C(e,t,n,l){return u.importPrivateEcKey(e,t,!1,l,n)}function M(e,t){return C(e,t,"ECDSA",["sign"])}function P(e,t){return C(e,t,"ECDH",["deriveBits"])}function j(e,t,n){return u.importPublicEcKey(e,!1,n,t)}function D(e){return j(e,"ECDSA",["verify"])}function x(e){return j(e,"ECDH",[])}function N(e){const t=new Uint8Array(67);return t[0]=2+(1&e[132]),t.set(e.slice(1,67),1),t}const U=new d.a("6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151"),F=new d.a("1093849038073734274511112390766805569936207598951683748994586394495953116150735016013708737573759623248592132296706313309438452531591012912142327488478985984"),k=new d.a("1716199415032652428745475199770348304317358825035826352348615864796385795849414013030639910165363638744324077847870214509280496999929160953143507072778764288");function B(e){const t=new Uint8Array(133);t.set([4]),t.set(e.slice(1,67),1);const n=new d.a(r.array2hex(e.slice(1,67)),16);let l=n.pow(3).subtract(n.multiply(3)).add(F).modPow(k,U);const i=e[0]-2;return l.mod(2)!==i&&(l=U.subtract(l)),t.set(l.toArray(256).value,68),t}function L(e,t,n){return u.sign(n,Z(e,t))}function $(e,t,n,l){return u.verify(l,e,Z(t,n))}function q(e,t){return u.hmac(e,t)}function H(e,t,n,l,r){return ee(t,r,l).then(t=>u.encrypt(ne(n),t,e))}function W(e){return u.generateAesKey("AES-CTR",!0,["encrypt","decrypt"]).then(t=>u.encrypt(new Uint8Array(16),t,e).then(e=>u.digest(u.DigestAlgorithm.SHA512,e).then(n=>u.exportAesKey(t).then(t=>({key:t,hash:n,data:e})))))}function X(e,t,n){return u.digest(u.DigestAlgorithm.SHA512,e).then(e=>{if(n.length!==e.length)throw new l.Error("Cannot decrypt file, hash mismatch: Expected "+r.array2hex(n)+" but found "+r.array2hex(e));for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])throw new l.Error("Cannot decrypt file, hash mismatch: Expected "+r.array2hex(n)+" but found "+r.array2hex(e))}).then(()=>u.importAesKey(t,"AES-CTR",!1,["encrypt","decrypt"])).then(t=>u.decrypt(new Uint8Array(16),t,e))}function G(e,t,n,l,r){return ee(t,r,l).then(t=>u.decrypt(ne(n),t,e))}function V(e,t){return G(e,O(),new Uint8Array([]),h,t)}function K(e,t){try{return V(r.b2array(e),t).then(e=>s.decode(e))}catch(e){return Promise.reject(e)}}function z(e){const t=u.getRandomValues(new Uint8Array(32));return Promise.all([u.digest(u.DigestAlgorithm.SHA512,t),H(t,O(),new Uint8Array([]),h,e)]).then(e=>({encryptedCode:e[1],hash:e[0]}))}function Y(e,t,n){return V(e,n).then(e=>u.digest(u.DigestAlgorithm.SHA512,e.buffer)).then(e=>{if(e.byteLength!==t.byteLength)return!1;for(let n=0;n<e.byteLength;++n)if(e[n]!==t[n])return!1;return!0})}function J(e){return Promise.all([u.exportEcPublicKey(e.publicKey),u.exportEcPrivateKey(e.privateKey)]).then(e=>({publicKey:e[0],privateKey:e[1]}))}function Z(e,t){const n=new Uint8Array(e.length+4+t.length);return n.set(e),new DataView(n.buffer).setInt32(e.length,t.length),n.set(t,e.length+4),n}let Q=0;function ee(e,t,n){const l=++Q,s=new Uint8Array(e.length+t.length+4+n.length);return s.set(e),s.set(t,e.length),s.set([0,0,0,1],e.length+t.length),s.set(n,e.length+t.length+4),i.default.debug(i.default.DEBUG2,"%s: deriveKey() %d data: %s",p,l,r.array2hex(s)),u.digest(u.DigestAlgorithm.SHA512,s).then(e=>(i.default.debug(i.default.DEBUG2,"%s: deriveKey() %d hash: %s",p,l,r.array2hex(e)),u.importAesKey(e.slice(0,32),"AES-CTR",!1,["encrypt","decrypt"])))}function te(e,t){const n=new Uint8Array(e.length+t.length+4+f.length);n.set(e),n.set(t,e.length),n.set([0,0,0,1],e.length+t.length),n.set(f,e.length+t.length+4);const l=new Uint8Array(e.length+t.length+4+f.length);return l.set(e),l.set(t,e.length),l.set([0,0,0,2],e.length+t.length),l.set(f,e.length+t.length+4),Promise.all([u.digest(u.DigestAlgorithm.SHA512,n),u.digest(u.DigestAlgorithm.SHA512,l)]).then(e=>Promise.all([u.importHmacKey(e[0].slice(32,64)),u.importAesKey(e[0].slice(0,32),"AES-CTR",!1,["encrypt","decrypt"]),e[1].slice(0,8)])).then(e=>{let t=new Uint8Array(16);return t.set(e[2]),{hmacKey:e[0],encryptionKey:e[1],nonce:t}})}function ne(e){let t=new Uint8Array(16);return t.set(e.slice(0,16)),t}function le(e,t){let n=[];const l=Math.max(e.length,t.length);let r=0,i=0;for(;i<l||r;){let l=0;i<e.length&&0!=e.length&&(l=e[i]);let s=0;i<t.length&&0!=t.length&&(s=t[i]);const o=r+l+s;n.push(o%16),r=Math.floor(o/16),i++}return n}function re(e,t){let n=[];for(let l=0;l<t;l++)n=le(n,e);return n}function ie(e){if(e.length<=11){const t=parseInt(e);if(t<=o.a.max&&t>=o.a.min){let e=new Uint8Array(8);return new DataView(e.buffer).setInt32(4,t),t<0&&e.set([255,255,255,255]),e}}let t=[],n=[1],l=!1;for(let r=e.length-1;r>=0;r--){const i=parseInt(e.charAt(r));if(isNaN(i)){"-"==e[r]&&0==r&&(l=!0);break}i&&(t=le(t,re(n,i))),n=re(n,10)}for(let e=16-t.length;e>0;e--)t.push(0);if(l){for(let e=0;e<t.length;e++)t[e]=15-t[e];t=le(t,[1])}let r=new Uint8Array(8);for(let e=t.length-1,n=0;e>=0;e-=2,n++)r[n]=t[e]<<4|t[e-1];return r}function se(e){return u.digest(u.DigestAlgorithm.SHA256,s.encode(e)).then(e=>r.array2b(e))}function oe(){return u.generateAesKey("AES-GCM",!0,["encrypt","decrypt"])}function ae(e,t,n,l,r,i,s){return pe(n,l,r,i,s).then(n=>u.exportAesKey(e).then(e=>ce(new Uint8Array(e),t,n)))}function ue(e,t,n,l,r,i,s){return pe(n,l,r,i,s).then(n=>de(e,t,n)).then(e=>u.importAesKey(e,"AES-GCM",!0,["encrypt","decrypt"]))}function ce(e,t,n){return u.authEncrypt(e,t,n)}function de(e,t,n){return u.authDecrypt(e,t,n)}function pe(e,t,n,l,r){return a.argon2kdf(e,s.encode(t),s.encode(m+n+l),r).then(e=>u.importAesKey(e,"AES-GCM",!0,["encrypt","decrypt"]))}},function(e,t,n){"use strict";n.d(t,"b",function(){return u}),n.d(t,"a",function(){return c}),n.d(t,"d",function(){return h}),n.d(t,"c",function(){return f}),n.d(t,"e",function(){return m});var l=n(2),r=n(14),i=n(3),s=n(17),o=n.n(s),a=n(15);function u(e){if(void 0===e)throw new TypeError("Missing mandatory data param");const t=h(e);Object.defineProperty(this,"data",{enumerable:!0,get:function(){return t}}),Object.defineProperty(this,"length",{enumerable:!0,get:function(){return this.data.length}})}function c(e,t){this.message="JSON8: "+e+" near "+t,this.stack=(new Error).stack}function d(e){Object(l.default)(e instanceof Uint8Array,"array must be a byte array");let t=this,n=0,i=e.length;function s(e){return 32==e||e>=9&&e<=13}this.get=function(){return e[n]},this.require=function(l){if(e[n]!=l)throw new c("expected '"+String.fromCharCode(l)+"'",t);return this},this.consume=function(){if(n==i)throw new c("premature end of input",t);return++n,t},this.throwIfNotEnd=function(){if(n!=i)throw new c("trailing non-whitespace",t)},this.skipWhitespace=function(){for(;n!=i&&s(e[n]);)++n;return this},this.extractString=function(){return r.decode(t.extractBinary())},this.extractBinary=function(){++n;let t=e.subarray(n);function l(e){let t=e.indexOf(92);if(t>=0){let n=e.subarray(0,t).indexOf(34);return n>=0?n:t}return e.indexOf(34)}let i=l(t);if(-1==i)throw new c("unterminated quoted string",this);if(34==t[i])return n+=i+1,t.subarray(0,i);let s=t.subarray(),o=i;for(t=t.subarray(i),n+=i;;){let e=t[1],a=2;switch(e){case 34:case 92:default:s[o++]=e;break;case 110:s[o++]=10;break;case 114:s[o++]=13;break;case 116:s[o++]=9;break;case 98:s[o++]=8;break;case 102:s[o++]=12;break;case 117:{if(a=6,92==t[6]&&117==t[7]){let e=32|t[3];100!=(32|t[2])||56!=e&&57!=e&&97!=e&&98!=e||(a=12)}let e=r.encode(JSON.parse('"'+r.decode(t.subarray(0,a))+'"'));s.set(e,o),o+=e.length;break}}if(t=t.subarray(a),n+=a,-1==(i=l(t)))throw new c("unterminated quoted string",this);if(34==t[i])return s.set(t.subarray(0,i),o),n+=i+1,s.subarray(0,o+i);0!=i&&(s.set(t.subarray(0,i),o),o+=i,t=t.subarray(i),n+=i)}},this.extractSimple=function(){let t=n;!function(){let t;for(;n!=i&&!s(t=e[n])&&34!=t&&123!=t&&125!=t&&91!=t&&93!=t&&44!=t&&58!=t;)++n}();let l=r.decode(e.subarray(t,n));try{return a.parse(l)}catch(e){throw new SyntaxError(e.message+" at pos="+e.at+" in text="+e.text)}},this.toString=function(){return"pos="+n}}function p(e){e.require(123).consume().skipWhitespace();let t={};if(125==e.get())return e.consume(),t;for(;;){let n=e.require(34).extractString();switch(e.skipWhitespace().require(58).consume().skipWhitespace(),e.get()){case 123:t[n]=p(e);break;case 91:t[n]=g(e);break;case 34:t[n]=e.extractBinary();break;default:t[n]=e.extractSimple()}switch(e.skipWhitespace(),e.get()){case 44:e.consume();break;case 125:return e.consume(),t;default:throw new c("object expected ',' or '}'",e)}e.skipWhitespace()}}function g(e){e.require(91).consume().skipWhitespace();let t=[];if(93==e.get())return e.consume(),t;for(;;){switch(e.get()){case 123:t.push(p(e));break;case 91:t.push(g(e));break;case 34:t.push(e.extractBinary());break;default:t.push(e.extractSimple())}switch(e.skipWhitespace(),e.get()){case 44:e.consume();break;case 93:return e.consume(),t;default:throw new c("object expected ',' or ']'",e)}e.skipWhitespace()}}function h(e){return new Uint8Array(function e(t){switch(typeof t){case"number":case"boolean":case"string":return r.encode(JSON.stringify(t));case"object":if(t instanceof u)return t.data;if(t instanceof Uint8Array){let e=[34],n=0;for(let l=0;l<t.length;l++)34!=t[l]&&92!=t[l]||(i.appendToArray(e,Uint8Array.prototype.subarray.call(t,n,l)),e.push(92),e.push(t[l]),n=l+1);return i.appendToArray(e,Uint8Array.prototype.subarray.call(t,n)),e.push(34),e}if(Array.isArray(t)){let n=[91],l=!0;for(let r in t)l?l=!1:n.push(44),i.appendToArray(n,e(t[r]));return n.push(93),n}if(null===t)return[110,117,108,108];if(t instanceof o.a)return r.encode(a.stringify(t));{let n=[123],l=!0;for(let r in t)l?l=!1:n.push(44),i.appendToArray(n,e(r)),n.push(58),i.appendToArray(n,e(t[r]));return n.push(125),n}default:throw TypeError("Unexpected type: cannot encode "+typeof t+" as json")}}(e))}function f(e){let t;try{let n;switch((t=new d(e)).skipWhitespace(),t.get()){case 91:n=g(t);break;case 123:n=p(t);break;case 34:n=t.extractBinary();break;default:n=t.extractSimple()}return t.skipWhitespace().throwIfNotEnd(),n}catch(e){if(e instanceof c)throw e;throw new c("parse error: "+e,t)}}function m(e){function t(e){return'"'+e+'"'}return function e(n){if("object"!=typeof n||n instanceof o.a||null===n)return a.stringify(n);if(n instanceof Uint8Array){if(void 0!==n.find(e=>e<=31&&9!=e&&10!=e&&19!=e||127==e||e>=245||192==e||193==e))return"x"+t(i.array2hex(n));try{return t(r.decode(n))}catch(e){return"x"+t(i.array2hex(n))}}if(Array.isArray(n)){let t="[",l=!0;for(const r of n)l||(t+=","),t+=e(r),l=!1;return t+"]"}let l="{",s=!0;for(const r in n)s||(l+=","),l+=t(r)+":"+e(n[r]),s=!1;return l+"}"}(e)}c.prototype=Object.create(Error.prototype)},function(e,t,n){"use strict";const l=n(60),r=n(66),i=n(4);let s;try{s=window.crypto}catch(e){s=self.crypto}const o=e=>btoa(String.fromCharCode.apply(null,e)).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""),a=e=>l.base64DecodeUint8Array(e.replace(/-/g,"+").replace(/_/g,"/"));e.exports={digest:(e,t)=>{let n;switch(e){case r.DigestAlgorithm.SHA256:n={name:"SHA-256"};break;case r.DigestAlgorithm.SHA512:n={name:"SHA-512"};break;default:return Promise.reject(new Error("Unsupported digest algorithm: "+e))}return s.subtle.digest(n,t).then(e=>new Uint8Array(e))},encrypt:(e,t,n)=>s.subtle.encrypt({name:"AES-CTR",counter:e,length:128},t,n).then(e=>new Uint8Array(e)),decrypt:(e,t,n)=>s.subtle.decrypt({name:"AES-CTR",counter:e,length:128},t,n).then(e=>new Uint8Array(e)),authEncrypt:(e,t,n)=>s.subtle.encrypt({name:"AES-GCM",iv:t,tagLength:128},n,e).then(e=>{const t=e.byteLength-16;return{content:new Uint8Array(e.slice(0,t)),tag:new Uint8Array(e.slice(t))}}),authDecrypt:(e,t,n)=>{const l=new Uint8Array(e.content.length+e.tag.length);return l.set(e.content),l.set(e.tag,e.content.length),s.subtle.decrypt({name:"AES-GCM",iv:t,tagLength:128},n,l).then(e=>new Uint8Array(e))},sign:(e,t)=>s.subtle.sign({name:"ECDSA",hash:{name:"SHA-512"}},e,t).then(e=>({r:new Uint8Array(e.slice(0,66)),s:new Uint8Array(e.slice(66))})),verify:(e,t,n)=>{let l=new Uint8Array(t.r.length+t.s.length);return l.set(t.r),l.set(t.s,t.r.length),s.subtle.verify({name:"ECDSA",hash:{name:"SHA-512"}},e,l,n)},hmac:(e,t)=>s.subtle.sign({name:"HMAC"},e,t).then(e=>Promise.resolve(new Uint8Array(e.slice(0,16)))),deriveBits:(e,t)=>s.subtle.deriveBits({name:"ECDH",namedCurve:"P-521",public:e},t,528).then(e=>new Uint8Array(e)),generateAesKey:(e,t,n)=>s.subtle.generateKey({name:e,length:256},t,n),generateEcKey:(e,t,n)=>s.subtle.generateKey({name:n?"ECDSA":"ECDH",namedCurve:"P-521"},e,t),exportAesKey:e=>s.subtle.exportKey("raw",e).then(e=>new Uint8Array(e)),exportEcPublicKey:e=>s.subtle.exportKey("jwk",e).then(e=>{const t=a(e.x),n=a(e.y);let l=new Uint8Array(1+t.length+n.length);return l[0]=4,l.set(t,1),l.set(n,1+t.length),l}),exportEcPrivateKey:e=>s.subtle.exportKey("jwk",e).then(e=>a(e.d)),importAesKey:(e,t,n,l)=>s.subtle.importKey("raw",e,{name:t},n,l),importHmacKey:e=>s.subtle.importKey("raw",e,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),importPublicEcKey:(e,t,n,l)=>{67===e.length&&(e=i.uncompressKey(e));const r=o(e.slice(1,67)),a=o(e.slice(67));return s.subtle.importKey("jwk",{kty:"EC",crv:"P-521",x:r,y:a},{name:l,namedCurve:"P-521"},t,n)},importPrivateEcKey:(e,t,n,l,r)=>{const i=o(t.slice(1,67)),a=o(t.slice(67)),u=o(e);return s.subtle.importKey("jwk",{kty:"EC",crv:"P-521",x:i,y:a,d:u},{name:r,namedCurve:"P-521"},n,l)},getRandomValues:e=>(s.getRandomValues(e),e),timingSafeEqual:(e,t)=>{if(e.length!=t.length)return!1;const n=e.length;let l=0,r=-1;for(;++r<n;)l|=e[r]^t[r];return 0===l},DigestAlgorithm:r.DigestAlgorithm,KeyType:r.KeyType}},function(e,t,n){"use strict";var l=n(45),r=n(3);class i extends l.a{constructor(e){super(e)}static fromString(e){return new i(Object(r.hex2array)(e))}}t.a=i},function(e,t,n){"use strict";var l=n(44),r=n(29),i=n(10),s=n(1),o=n(7),a=n(45),u=n(22),c=n(2),d=n(0),p=n(21),g=n(3);const h=new u.a,f="Data.Chat";class m{static get View(){return v}static get State(){return y}constructor(e,t,n,i){if("function"!=typeof e.allocate)throw new TypeError(`${f}: messageStorageFactory.allocate must be a function`);const s={viewDirty:!0,view:void 0,state:void 0,isOneToOne:void 0,creationTime:new Date(0),subject:"",invitePolicy:v.InvitePolicy.ParticipantsOnly,lastActivity:new Date(0),appData:{},appPrivateData:{},participants:new Map,stagedByRefs:new Map};if(h.privateData(this,s),Object.defineProperty(this,"viewDirty",{enumerable:!0,get:()=>s.viewDirty,set:()=>{throw new TypeError(`${f}: viewDirty is read-only`)}}),Object.defineProperty(this,"view",{enumerable:!0,get:()=>{if(!0===s.viewDirty)try{s.view=new v(h,this.mailboxId,this.creationTime,this.isOneToOne,this.getViewState(),this.subject,this.getParticipantViews(),this.invitePolicy,this.lastActivity,this.appData,this.appPrivateData),s.viewDirty=!1}catch(e){throw Object(d.default)(d.default.ERROR,"%s: Failed to generate view: %s",f,e),s.view=void 0,e}return s.view}}),"string"!=typeof t||0===t.length)throw new TypeError(`${f}: mailboxId must be a non-empty string`);Object.defineProperty(this,"mailboxId",{enumerable:!0,value:t}),Object.defineProperty(this,"state",{enumerable:!0,get:()=>s.state,set:e=>{if(!m.State.hasOwnProperty(e))throw new TypeError(`${f}: state must be defined in Chat.State`);h.privateAccess||s.state!==m.State.Defunct?s.state!==e&&(s.state=e,void 0!==s.view&&s.view.state===this.getViewState()||(s.viewDirty=!0)):Object(d.default)(d.default.NOTICE,"%s: Ignoring set for state when current state=%s is final",f,s.state)}}),this.state=n,Object.defineProperty(this,"isOneToOne",{enumerable:!0,get:()=>s.isOneToOne,set:e=>{if("boolean"!=typeof e)throw new TypeError(`${f}: isOneToOne must be a boolean`);s.isOneToOne!==e&&(s.isOneToOne=e,s.viewDirty=!0)}}),this.isOneToOne=i,Object.defineProperty(this,"creationTime",{enumerable:!0,get:()=>s.creationTime,set:e=>{if(!(e instanceof Date))throw new TypeError(`${f}: creationTime must be a Date`);s.creationTime.getTime()!==e.getTime()&&(s.creationTime=new Date(e),s.viewDirty=!0)}}),Object.defineProperty(this,"subject",{enumerable:!0,get:()=>s.subject,set:e=>{if("string"!=typeof e)throw new TypeError(`${f}: subject must be a string`);const t=Object(g.truncate)(e,128);s.subject!==t&&(s.subject=t,s.viewDirty=!0)}}),Object.defineProperty(this,"invitePolicy",{enumerable:!0,get:()=>s.invitePolicy,set:e=>{if("string"!=typeof e||!m.View.InvitePolicy.hasOwnProperty(e))throw new TypeError(`${f}: invitePolicy must be defined in `+"Chat.View.InvitePolicy");s.invitePolicy!==e&&(s.invitePolicy=e,s.viewDirty=!0)}}),Object.defineProperty(this,"lastActivity",{enumerable:!0,get:()=>s.lastActivity,set:e=>{if(!(e instanceof Date))throw new TypeError(`${f}: lastActivity must be a Date`);if(s.lastActivity.getTime()!==e.getTime()){if(!h.privateAccess&&e<=s.lastActivity)return void Object(d.default)(d.default.NOTICE,"%s: Ignoring set for lastActivity when given date=%s is older than current date=%s",f,e,s.lastActivity);s.lastActivity=new Date(e),s.viewDirty=!0}}}),Object.defineProperty(this,"appData",{enumerable:!0,get:()=>s.appData,set:e=>{if(null===e||"object"!=typeof e||Array.isArray(e))throw new TypeError(`${f}: appData must be an Object`);try{Object(p.a)(s.appData,e)||(s.appData=e,s.viewDirty=!0)}catch(e){throw new TypeError(`${f}: appData must be a JSON object: ${e}`)}}}),Object.defineProperty(this,"appPrivateData",{enumerable:!0,get:()=>s.appPrivateData,set:e=>{if(null===e&&"object"!=typeof e&&Array.isArray(e))throw new TypeError(`${f}: appPrivateData must be an Object`);try{Object(p.a)(s.appPrivateData,e)||(s.appPrivateData=e,s.viewDirty=!0)}catch(e){throw new TypeError(`${f}: appPrivateData must be a JSON object: ${e}`)}}}),this.messages=new r.a(e.allocate(this.mailboxId)),this.waitingForRetry=!1,this.refreshRequired=!1,this.nextPullPoint=void 0,this.synced=!1,this.fullDeliveredMsgId=new o.a,this.partialDeliveredMsgId=new o.a,this.fullReadMsgId=new o.a,this.partialReadMsgId=new o.a,this.inviteId=new a.a,this.restorePoint=new o.a,this.statusMessageId=new o.a,this.typingUsers=new Map,this.recalledMessages=new Map,this.shredMessages=new Map,this.deletedMessages=new Set,Object.defineProperty(this,"bookmarkData",{value:new l.a,enumerable:!0})}getViewState(){switch(this.state){case y.Joining:case y.WaitingForKey:case y.WaitingForRestore:return E.Waiting;case y.Restoring:return E.Restoring;case y.Restored:return E.Ready;case y.Leaving:case y.Defunct:default:return E.Defunct}}getPeerRegId(e){if(!1===this.isOneToOne)return;const t=h.get(this).participants;if(2===t.size)for(const n of t.values())if(n.regId!==e)return n.regId}setParticipant(e,t,n,l,r){Object(c.default)("string"==typeof e,"Bad argument: regId"),Object(c.default)(void 0===t||i.a.State.hasOwnProperty(t),"Bad argument: state"),Object(c.default)(void 0===n||"boolean"==typeof n,"Bad argument: isAdmin"),Object(c.default)(void 0===l||i.a.SignatureState.hasOwnProperty(l),"Bad argument: signatureState"),Object(c.default)(void 0===r||"string"==typeof r,"Bad argument: signature");const s=h.get(this),o=s.participants;let a=o.get(e);void 0!==a?(Object(c.default)(a.regId===e),void 0!==t&&(a.state=t),void 0!==n&&(a.isAdmin=n),a.viewDirty&&(s.viewDirty=!0)):(a=new i.a(e,void 0!==t?t:i.a.State.PendingInvite,void 0!==n&&n),o.set(e,a),a.viewDirty&&(s.viewDirty=!0)),Object(c.default)(a instanceof i.a),void 0!==r?(Object(c.default)(void 0!==l,"signatureState is required when setting the signature"),a.setSignature(r,l)):void 0!==l&&(a.signatureState=l)}getParticipantCount(){return h.get(this).participants.size}getParticipantState(e){const t=h.get(this).participants.get(e);return void 0===t?void 0:t.state}getParticipantSignatureData(e){const t=h.get(this).participants.get(e);return void 0===t?void 0:{state:t.signatureState,signature:t.signature}}getParticipantView(e){const t=h.get(this).participants.get(e);return void 0===t?void 0:t.view}getParticipantViews(){const e=[];for(const t of h.get(this).participants.values()){const n=t.view;void 0!==n&&e.push(n)}return e.sort((e,t)=>e.regId<t.regId?-1:e.regId>t.regId?1:0)}getParticipantMessageInfo(e){const t=h.get(this).participants.get(e);return void 0===t?void 0:t.msgInfo}getParticipantMessageInfos(e,t=!1,n){const l=[];for(const r of h.get(this).participants.values())r.state===i.a.State.Left||r.regId===e||t&&r.state!==i.a.State.Active||n&&void 0===n.find(e=>r.regId===e)||l.push({regId:r.regId,msgInfo:r.msgInfo});return l}processSingleReferences(e){return b.call(this,e,void 0)}processPulledReferences(e,t){return b.call(this,e,t)}toString(){return`${f}[m=${this.mailboxId} `+`${this.isOneToOne?"1:1":"MPC"} s=${this.state}]`}}const y={Joining:"Joining",WaitingForKey:"WaitingForKey",WaitingForRestore:"WaitingForRestore",Restoring:"Restoring",Restored:"Restored",Leaving:"Leaving",Defunct:"Defunct"};function b(e,t){const n=d.default.logThreshold>=d.default.DEBUG2?this.toString()+"::prv_processReferences()":void 0;if(e.chatId!==this.mailboxId)throw new s.Error(`${this.toString()}: Refusing to process references for messageId=`+`${e.messageId}; chatId=${e.chatId} mismatch`);const l=h.get(this);let r=[];function i(e,t,n){if(void 0===e){return[{tag:t,messageIds:[n]}]}let l=0;for(;l<e.length;++l){const r=e[l];if(r.tag===t){if(-1!==r.messageIds.findIndex(e=>e.isEqual(n)))return!1;break}}let r=Array.from(e);if(l!==e.length){let e=r[l],t=e.messageIds;Object.isFrozen(e)&&(t=Array.from(e.messageIds),e=Object.assign({},e,{messageIds:t}),r[l]=e),t.push(n),t.sort()}else r.push({tag:t,messageIds:[n]});return r}if(Object(d.default)(d.default.DEBUG2,"%s: Processing references for messageId=%s; %s uncached",n,e.messageId,t instanceof Array?t.length.toString():"no"),e.ref){Object(d.default)(d.default.DEBUG2,"%s: Processing outbound references for messageId=%s",n,e.messageId);for(const s of e.ref){Object(d.default)(d.default.DEBUG2,"%s: Looking for referenced messageId=%s in our cache",n,s.messageId);let o=this.messages.getMessage(s.messageId),a=void 0;if(void 0===o&&t&&(Object(d.default)(d.default.DEBUG2,"%s: Looking for referenced messageId=%s in uncached messages",n,s.messageId),-1===(a=t.findIndex(e=>e.messageId.isEqual(s.messageId)))&&(a=void 0),void 0!==a&&(o=t[a]).chatId!==this.mailboxId))Object(d.default)(d.default.DEBUG2,"%s: Ignoring reference to messageId=%s that isn't in our chat",n,s.messageId);else if(void 0!==o){Object(d.default)(d.default.DEBUG2,"%s: Found referenced messageId=%s in %s",n,s.messageId,void 0===a?"uncached messages":"our cache"),Object(c.default)(o.chatId==this.mailboxId);const l=i(o.refBy,s.tag,e.messageId);if(!1===l){Object(d.default)(d.default.DEBUG2,"%s: Ignoring duplicate tag=%s messageId=%d in refBy for messageId=%s",n,s.tag,e.messageId,s.messageId);continue}const u=o.withNewRefBy(l);if(void 0===a){this.messages.replace(u),-1===r.findIndex(e=>e.isEqual(u.messageId))&&r.push(u.messageId)}else t[a]=u}else{Object(d.default)(d.default.DEBUG2,"%s: Referenced messageId=%s is unknown; staging its refBy",n,s.messageId);const t=i(l.stagedByRefs.get(s.messageId.toString()),s.tag,e.messageId);l.stagedByRefs.set(s.messageId.toString(),t)}}}const o=l.stagedByRefs.get(e.messageId.toString());if(void 0!==o){Object(d.default)(d.default.DEBUG2,"%s: Found stagedRefBy for messageId=%s",n,e.messageId);const i=e.withNewRefBy(o);if(l.stagedByRefs.delete(e.messageId.toString()),void 0===t)this.messages.replace(i),r.push(i.messageId);else{const e=t.findIndex(e=>e.messageId.isEqual(i.messageId));-1!==e&&(t[e]=i)}}return r}Object.freeze(y);class v{constructor(e,t,n,l,r,i,o,a,u,c={},d={}){if(e!==h)throw new s.Error("Refusing to construct View without tag");if("string"!=typeof t||0==t.length)throw new s.Error("Chat requires the chatId parameter be a non-empty string: chatId="+t);if(!(n instanceof Date))throw new s.Error("Chat requires the creationTime parameter to be a Date");if("boolean"!=typeof l)throw new s.Error("Chat requires the isOneToOne parameter be a boolean: isOneToOne="+l);switch(r){case v.State.Waiting:case v.State.Restoring:case v.State.Defunct:case v.State.Ready:break;default:throw new s.Error("Chat requires the state parameter to be one of the Chat.State values; state="+r)}if("string"!=typeof i)throw new s.Error("Chat requires the subject parameter be a string: subject="+i);if("object"!=typeof o||!Array.isArray(o))throw new s.Error("Chat requires the participants parameter be a Participant[]: participants="+o);if("string"!=typeof a||!v.InvitePolicy.hasOwnProperty(a))throw new s.Error("invitePolicy must be a valid Chat.InvitePolicy. It is: "+a);if(void 0!==u&&!(u instanceof Date))throw new s.Error("Chat requires the lastActivity parameter to be a Date");if(void 0!==c&&(!(c instanceof Object)||Array.isArray(c)))throw new s.Error("Chat requires the data parameter to be an Object");Object.defineProperty(this,"chatId",{value:t,enumerable:!0}),Object.defineProperty(this,"creationTime",{value:Object.freeze(new Date(n)),enumerable:!0}),Object.defineProperty(this,"isOneToOne",{value:l,enumerable:!0}),Object.defineProperty(this,"state",{value:r,enumerable:!0}),Object.defineProperty(this,"subject",{value:i,enumerable:!0}),Object.defineProperty(this,"participants",{value:o,enumerable:!0}),Object.freeze(this.participants),Object.defineProperty(this,"invitePolicy",{value:l?void 0:a,enumerable:!0}),Object.defineProperty(this,"lastActivity",{value:Object.freeze(void 0!==u?new Date(u):new Date),enumerable:!0}),Object.defineProperty(this,"data",{value:c,enumerable:!0}),Object.defineProperty(this,"privateData",{value:d,enumerable:!0}),Object.freeze(this)}static get State(){return E}static get InvitePolicy(){return I}toString(){return`${f}.View[id=${this.chatId} `+`t=${this.isOneToOne?"OneToOne":"Conference"} `+`s=${this.state} p=${this.invitePolicy}]`}}const E={Waiting:"Waiting",Restoring:"Restoring",Defunct:"Defunct",Ready:"Ready"};Object.freeze(E);const I={AdminsOnly:"AdminsOnly",ParticipantsOnly:"ParticipantsOnly"};Object.freeze(I),t.a=m},function(e,t,n){"use strict";n.r(t),n.d(t,"RegistrationChanged",function(){return a}),n.d(t,"ChatAdded",function(){return u}),n.d(t,"ChatUpdated",function(){return c}),n.d(t,"ChatRemoved",function(){return d}),n.d(t,"ChatMessageListUpdated",function(){return p}),n.d(t,"ChatMessageAdded",function(){return g}),n.d(t,"ChatMessageUpdated",function(){return h}),n.d(t,"ChatTyping",function(){return f}),n.d(t,"ChatEvent",function(){return m}),n.d(t,"AppMessageReceived",function(){return y}),n.d(t,"SetupState",function(){return b}),n.d(t,"SetupError",function(){return v}),n.d(t,"UserKeysChanged",function(){return E});var l=n(8),r=n(7),i=n(35),s=n(11),o=n(2);function a(e){Object(o.default)(void 0===e||"object"==typeof e&&null!==e,"Bad argument: data"),void 0===e&&(e={reason:a.Failure.GeneralFailure}),this.state="Success",this.regId=e.regId,this.registrationToken=e.registrationToken,this.pin=e.pin,void 0===e.reason&&e.regId&&e.pin||(this.state="Failure",this.failureReason=a.Failure.hasOwnProperty(e.reason)?e.reason:a.Failure.GeneralFailure),Object.freeze(this)}function u(e){Object(o.default)(e instanceof l.a.View,"Bad argument: chat"),this.chat=e}function c(e){Object(o.default)(e instanceof l.a.View,"Bad argument: chat"),this.chat=e}function d(e){Object(o.default)(e instanceof l.a.View,"Bad argument: chat"),this.chat=e}function p(e,t){Object(o.default)(e instanceof l.a.View,"Bad argument: chat"),Object(o.default)(Array.isArray(t),"Bad argument: messages"),this.chat=e,this.messages=t}function g(e,t){Object(o.default)(e instanceof l.a.View,"Bad argument: chat"),Object(o.default)(t instanceof s.a,"Bad argument: message"),this.chat=e,this.message=t}function h(e,t){Object(o.default)(e instanceof l.a.View,"Bad argument: chat"),Object(o.default)(t instanceof s.a,"Bad argument: message"),this.chat=e,this.message=t}function f(e,t,n,l,i){Object(o.default)("string"==typeof e,"Bad argument: chatId"),Object(o.default)("string"==typeof t,"Bad argument: regId"),Object(o.default)("boolean"==typeof n,"Bad argument: isTyping"),Object(o.default)(void 0===l||"string"==typeof l,"Bad argument: tag"),Object(o.default)(void 0===i||i instanceof r.a,"Bad argument: messageId"),this.chatId=e,this.participant=t,this.isTyping=n,this.tag=l,this.messageId="string"==typeof l?i:void 0}a.Failure={GeneralFailure:"GeneralFailure",DeviceSwitchRequired:"DeviceSwitchRequired",RegistrationRevoked:"RegistrationRevoked",Forbidden:"Forbidden",FailedToImportProfileKeys:"FailedToImportProfileKeys",DomainConfigurationMismatch:"DomainConfigurationMismatch"},Object.freeze(a.Failure),a.prototype.toString=function(){return"RegistrationChanged: "+this.state+"; regId="+this.regId+" pin="+this.pin+("Failure"===this.state?"; reason="+this.failureReason:"")};class m{constructor(e,t,n,r){Object(o.default)(e instanceof l.a.View,"Bad argument: chat"),Object(o.default)("string"==typeof t,"Bad argument: sender"),Object(o.default)("string"==typeof n,"Bad argument: tag"),Object(o.default)(void 0===r||r instanceof Object,"Bad argument: data"),Object.defineProperty(this,"chat",{enumerable:!0,writable:!1,value:e}),Object.defineProperty(this,"sender",{enumerable:!0,writable:!1,value:t}),Object.defineProperty(this,"tag",{enumerable:!0,writable:!1,value:n}),Object.defineProperty(this,"data",{enumerable:!0,writable:!1,value:r})}}function y(e){Object(o.default)(e instanceof i.a,"Bad argument: appMessage"),this.appMessage=e}function b(e){this.value=e}function v(e){Object(o.default)(v.Value.hasOwnProperty(e),"Bad argument: value"),this.value=e}function E(e){Object(o.default)("string"==typeof e,"Bad argument: regId"),this.regId=e}v.Value={PermanentServerError:"PermanentServerError",Forbidden:"Forbidden",EndpointDeregistered:"EndpointDeregistered",DomainConfigurationMismatch:"DomainConfigurationMismatch"},Object.freeze(v.Value)},function(e,t,n){"use strict";var l=n(1),r=n(7),i=n(22),s=n(28);const o=new i.a,a="Data.Participant";class u{static get View(){return p}static get State(){return c}static get SignatureState(){return d}constructor(e,t,n){const l={viewDirty:!1,view:void 0,state:void 0,isAdmin:void 0,signatureState:u.SignatureState.Unknown,signature:""};if(o.privateData(this,l),Object.defineProperty(this,"viewDirty",{enumerable:!0,get:()=>l.viewDirty,set:()=>{throw new TypeError(`${a}: viewDirty is read-only`)}}),Object.defineProperty(this,"view",{enumerable:!0,get:()=>(!0===l.viewDirty&&(l.state===u.State.Left?l.view=void 0:l.view=new p(o,this.regId,l.state,l.isAdmin),l.viewDirty=!1),l.view)}),"string"!=typeof e||0===e.length)throw new TypeError("Data.Participant: regId must be a non-empty string");Object.defineProperty(this,"regId",{enumerable:!0,value:e}),Object.defineProperty(this,"state",{enumerable:!0,get:()=>l.state,set:e=>{if(!u.State.hasOwnProperty(e))throw new TypeError(`${a}: state must be defined in Participant.State`);if(l.state!==e&&(l.state===u.State.Active&&(l.signature="",l.signatureState=u.SignatureState.Unknown),l.state=e,!1===this.viewDirty)){const e=this.getViewState();void 0===l.view?void 0!==e&&(l.viewDirty=!0):void 0===e?l.viewDirty=!0:l.view.state!==e&&(l.viewDirty=!0)}}}),this.state=t,Object.defineProperty(this,"isAdmin",{enumerable:!0,get:()=>l.isAdmin,set:e=>{if("boolean"!=typeof e)throw new TypeError(`${a}: isAdmin must be a boolean`);l.isAdmin!==e&&(l.isAdmin=e,void 0!==this.getViewState()&&(l.viewDirty=!0))}}),this.isAdmin=n,Object.defineProperty(this,"signatureState",{enumerable:!0,get:()=>l.signatureState,set:e=>{if(!u.SignatureState.hasOwnProperty(e))throw new TypeError(a+": signatureState must be defined in Participant.SignatureState");l.signatureState=e}}),Object.defineProperty(this,"signature",{enumerable:!0,get:()=>l.signature}),this.msgInfo={deliveredMsgId:new r.a,deliveredTimestamp:0,readMsgId:new r.a,readTimestamp:0,shredMsgId:new r.a}}getViewState(){switch(this.state){case u.State.PendingGrant:case u.State.PendingInvite:case u.State.PendingJoin:return p.State.Pending;case u.State.Active:return p.State.Active;default:return}}setSignature(e,t){if(void 0!==e&&"string"!=typeof e)throw new TypeError(`${a}: signature must be a string`);this.signatureState=t,o.get(this).signature=void 0===e?"":e}toString(){const e=this.isAdmin?" admin":"";return`${a}[r=${this.regId} s=${this.state}${e}]`}}const c={PendingGrant:"PendingGrant",PendingInvite:"PendingInvite",PendingJoin:"PendingJoin",Active:"Active",Left:"Left"};Object.freeze(c);const d={Unknown:"Unknown",Unavailable:"Unavailable",Uncomputed:"Uncomputed",Verified:"Verified",Failed:"Failed"};Object.freeze(d);class p{constructor(e,t,n,r=!1){if(e!==o)throw new l.Error("Refusing to construct View without tag");let i;switch(n){case u.State.PendingGrant:case u.State.PendingInvite:case u.State.PendingJoin:i=p.State.Pending;break;case u.State.Active:i=p.State.Active;break;default:throw new l.Error(`Refusing to construct View for state=${n}`)}Object.defineProperty(this,"regId",{enumerable:!0,value:t}),Object.defineProperty(this,"state",{enumerable:!0,value:i}),Object.defineProperty(this,"isAdmin",{enumerable:!0,value:r}),Object(s.a)(this)}static get State(){return g}toString(){const e=this.isAdmin?" admin":"";return`${a}.View[r=${this.regId} s=${this.state}${e}]`}}const g={Active:"Active",Pending:"Pending"};Object.freeze(g),t.a=u},function(e,t,n){"use strict";n.d(t,"a",function(){return g});var l=n(1),r=n(7),i=n(4),s=n(0),o=n(28),a=n(23),u=n.n(a),c=n(36),d=n.n(c);const p="ChatMessage";function g(e,t,n,a,c,h,f,m,y,b,v,E,I,S,_,T,w){if("string"!=typeof e||0===e.length)throw new l.Error("ChatMessage requires the chatId parameter be a non-empty string, not "+typeof e);if(!(t instanceof r.a))throw new l.Error("ChatMessage requires the messageId parameter be a MessageId not "+typeof t);if("string"!=typeof n||0===n.length)throw new l.Error("ChatMessage requires the sender parameter be a non-empty string not "+typeof n);if(!(a instanceof Date))throw new l.Error("ChatMessage requires the timestamp parameter be a Date not "+typeof a);if("string"!=typeof c||0===c.length)throw new l.Error("ChatMessage requires the tag parameter be a non-empty string not "+typeof c);if("boolean"!=typeof h)throw new l.Error("ChatMessage requires the isIncoming parameter be a boolean not "+typeof h);if("boolean"!=typeof f&&void 0!==f)throw new l.Error("ChatMessage requires the isUnverified parameter be a boolean or undefined not "+typeof f);if("object"!=typeof m)throw new l.Error("ChatMessage requires the state parameter be a object not "+typeof m);switch(m.value){case g.StateValue.Read:case g.StateValue.Delivered:case g.StateValue.Sent:case g.StateValue.Failed:break;default:throw new l.Error("ChatMessage requires the state.value parameter to be a string matching one of the ChatMessage.StateValue values; state.value="+m.value)}if("boolean"!=typeof m.isPartial)throw new l.Error("ChatMessage requires the state.isPartial parameter be a boolean not "+typeof m.isPartial);if("boolean"!=typeof y)throw new l.Error("ChatMessage requires the isRecalled parameter be a boolean not "+typeof y);if("boolean"!=typeof b)throw new l.Error("ChatMessage requires the isDeleted parameter be a boolean not "+typeof b);if("string"!=typeof v&&void 0!==v)throw new l.Error("ChatMessage requires the content parameter be either a string or undefined not "+typeof v);if("object"!=typeof E&&void 0!==E)throw new l.Error("ChatMessage requires the data parameter be either a object or undefined not "+typeof E);if(!(I instanceof Uint8Array)&&void 0!==I)throw new l.Error("ChatMessage requires the thumbData parameter be either a Uint8Array or undefined not "+typeof I);if("string"!=typeof S&&void 0!==S)throw new l.Error("ChatMessage requires the thumbName parameter be either a string or undefined not "+typeof S);if(_){if("string"!=typeof _.url)throw new l.Error("ChatMessage requires the attachData.url parameter be a string not "+typeof _.url);if(!(_.key instanceof Uint8Array))throw new l.Error("ChatMessage requires the attachData.key parameter be a Uint8Array not "+typeof _.key);if(!(_.hash instanceof Uint8Array))throw new l.Error("ChatMessage requires the attachData.hash parameter be a Uint8Array not "+typeof _.hash);if("string"!=typeof _.name&&void 0!==_.name)throw new l.Error("ChatMessage requires the attachData.name parameter be a string not "+typeof _.name);if("number"!=typeof _.size&&void 0!==_.size)throw new l.Error("ChatMessage requires the attachData.size parameter be a number not "+typeof _.size)}else if(void 0!==_)throw new l.Error("ChatMessage requires the attachData parameter be either a object or undefined not "+typeof _);function R(e){return Array.isArray(e)&&e.length>0?Object(o.a)(e):void 0}this.messageId=t,this.chatId=e,this.sender=n,this.timestamp=a,this.tag=c,this.isIncoming=h,this.isUnverified=f,this.state=function(e){return"object"==typeof e?Object(o.a)(e):void 0}(m),this.isRecalled=y,this.isDeleted=b,this.hasFile=void 0!==_,this._attachData=_,this.hasFile&&(this.fileName=_.name,this.fileSize=_.size),this.hasFile&&(this.download=function(e){var t=new d.a(_.url);return u()({serverAddress:t.host,uri:t.pathname+(t.search?t.search:""),method:"GET",responseType:"arraybuffer",progress:e?e.progress:void 0}).catch(e=>{throw Object(s.default)(s.default.ERROR,"%s: Error while downloading file for messageId=%s: (%s) %s",p,this.messageId,e.status,e.responseText),e.status?e.status>=500?new l.TemporaryFailure("Failed attempting to download file from "+_.url):new l.PermanentFailure("Failed attempting to download file from "+_.url):new l.TemporaryFailure("Timed out while attempting to download file from "+_.url)}).then(function(e){return i.decryptFile(e.response,_.key,_.hash)})}),this.content=v,this.data=E,this.thumbData=I,this.ref=R(T),this.refBy=R(w),Object.freeze(this)}g.ReservedTag={Join:"Join",Leave:"Leave",Subject:"Subject",Shred:"Shred",Gap:"Gap",Admin:"Admin",Remove:"Remove"},g.StateValue={Sent:"Sent",Failed:"Failed",Delivered:"Delivered",Read:"Read"},g.prototype.withNewState=function(e){return new g(this.chatId,this.messageId,this.sender,this.timestamp,this.tag,this.isIncoming,this.isUnverified,e,this.isRecalled,this.isDeleted,this.content,this.data,this.thumbData,this.thumbName,this._attachData,this.ref,this.refBy)},g.prototype.withNewRefBy=function(e){return new g(this.chatId,this.messageId,this.sender,this.timestamp,this.tag,this.isIncoming,this.isUnverified,this.state,this.isRecalled,this.isDeleted,this.content,this.data,this.thumbData,this.thumbName,this._attachData,this.ref,e)},g.prototype.withFileSize=function(){if(this._attachData&&!this._attachData.size){var e=new d.a(this._attachData.url);return u()({serverAddress:e.host,uri:e.pathname+(e.search?e.search:""),method:"HEAD",headersOnly:["Content-Length"]}).then(e=>{if(e["Content-Length"]){var t=Object.assign({size:parseInt(e["Content-Length"])},this._attachData);return new g(this.chatId,this.messageId,this.sender,this.timestamp,this.tag,this.isIncoming,this.isUnverified,this.state,this.isRecalled,this.isDeleted,this.content,this.data,this.thumbData,this.thumbName,t,this.ref,this.refBy)}return Promise.resolve(this)}).catch(e=>(Object(s.default)(s.default.ERROR,"%s: Failed to get file size for messageId=%s: %s",p,this.messageId,e),this))}return Promise.resolve(this)},g.prototype.recalled=function(){return new g(this.chatId,this.messageId,this.sender,this.timestamp,this.tag,this.isIncoming,this.isUnverified,this.state,!0,this.isDeleted,void 0,void 0,void 0,void 0,void 0,this.ref,this.refBy)},g.prototype.deleted=function(){return new g(this.chatId,this.messageId,this.sender,this.timestamp,this.tag,this.isIncoming,this.isUnverified,this.state,this.isRecalled,!0,void 0,void 0,void 0,void 0,void 0,this.ref,this.refBy)},g.prototype.toString=function(){return"ChatMessage{id="+this.messageId+" s="+this.sender+" T="+this.tag+" t="+this.timestamp.getTime()+"}"}},function(e,t,n){var l=n(56).SipStatusCode;e.exports={Timeouts:{RECOVERY:5e3,ICE_CONNECTION:15e3,SESSION_BUSY_WAIT:5e3,STATS_INTERVAL:2e3,BUS_GET_USER_TIMEOUT:5e3,STATS_TIMEOUT:500},DataConnectionLimits:{WEBRTC_CHUNK_SIZE:16384,WEBRTC_BUFFER_SIZE:16777216,WEBRTC_HIGH_THRESHOLD:131072,WEBRTC_LOW_THRESHOLD:16384,DEFAULT_CHUNK_MODE_SIZE:32768,MAX_FILE_BUFFER:131072},Limits:{MAX_EVENT_LISTENERS:50,MAX_META_DATA_SIZE:4096},CallEndReason:{USER_HANGUP:0,REJECT_CALL:1,TIMEOUT:2,FAILURE_MEDIASETUP:3},CallEndCause:{CALL_SUCCESS:5001,CALL_FAILURE_FIREWALL:5002,CALL_FAILURE_MEDIASETUP:5003,CALL_FAILURE_NOMEDIA:5004,CALL_END_USER:5005,CALL_TIMEOUT:5006,CALL_CANCELLED_UNKNOWN:5007,CALL_END_NETWORKUNAVAILABLE:5017,CALL_END_PEER:5018,CALL_RECOVERY_CALL_TRANSFER:5023,CALL_SECURE_CALL_UNSUPPORTED:5024,CALL_SECURE_CALL_KEY_ERROR:5025,CALL_SECURE_CALL_KEY_TIMEOUT:5026,CALL_END_BUSY:6e3,CALL_REJECTED_ELSEWHERE:6001,CALL_ACCEPTED_ELSEWHERE:6002},SipStatusCode:l,CallState:{CALL_STATE_UNKNOWN:0,CALL_STATE_INITIATED:1,CALL_STATE_RINGING:2,CALL_STATE_CONNECTING:3,CALL_STATE_CONNECTED:4,CALL_STATE_DISCONNECTED:5},SIP:{HEADERS:{REG_ID:"x-bbm-regid",SUPPORTED_FEATURES:"X-rim-supported-features",SESSION_ID:"x-bbm-sessionid",PREV_CALL_ID:"x-bbm-prev-callid",CALL_ID:"call-id",REMOTE_PARTY_ID:"Remote-Party-ID",ADDRESS_TYPE:"addresstype=pin",TRANSPORT_TYPE:"transport=tls",ACCEPT_CONTACT:"Accept-Contact: +app.voice",REASON:"Reason",WARNING:"Warning",CONTACT:"Contact",META_DATA:"x-bbm-meta-data"},FEATURES:{CALL_RECOVERY:"callrecovery1",PROTECTED_VVOIP:"protected.vvoip",XPVIDEO:"xpvideo",EARLY_ICE:"earlyice",DATA_CONNECTION:"data"},FAILURES:{SRTP_UNSUPPORTED:"Failure_SRTP_Unsupported",SRTP_KEY_TIMEOUT:"Failure_SRTP_Key_Timeout",SRTP_KEY_ERROR:"Failure_SRTP_Key_Error",MPOP_CALL_ACCEPTED:"Call completed elsewhere",MPOP_CALL_REJECTED:"Declined elsewhere"}},Features:{MEDIA_CALL:1,DATA_CONNECTION:2}}},function(e,t,n){"use strict";n.d(t,"a",function(){return d});var l=n(1),r=n(5),i=n(0),s=n(3),o=n(17),a=n.n(o),u=n(15);const c="MailboxData";class d{constructor(e){class t extends l.PermanentFailure{constructor(t){super(`Invalid property=${t} in mailbox data: ${JSON.stringify(e)}`)}}let n;if("object"!=typeof e&&(n="argument")||("string"!=typeof e.id||0===e.id.length)&&(n="id")||"number"!=typeof e.createdTime&&(n="createdTime")||("string"!=typeof e.type||0===e.type.length)&&(n="type")||"boolean"!=typeof e.protected&&(n="protected")||!d.UpdatePolicy.hasOwnProperty(e.updatePolicy)&&(n="updatePolicy")||!d.InvitePolicy.hasOwnProperty(e.invitePolicy)&&(n="invitePolicy")||!Array.isArray(e.members)&&(n="members"))throw new t(n);if(Object.defineProperty(this,"id",{value:e.id,enumerable:!0}),Object.defineProperty(this,"createdTime",{value:e.createdTime,enumerable:!0}),Object.defineProperty(this,"type",{value:e.type,enumerable:!0}),Object.defineProperty(this,"protected",{value:e.protected,enumerable:!0}),Object.defineProperty(this,"updatePolicy",{value:e.updatePolicy,enumerable:!0}),Object.defineProperty(this,"invitePolicy",{value:e.invitePolicy,enumerable:!0}),Object.defineProperty(this,"members",{value:e.members.reduce((e,t)=>{try{e.push(new d.Member(t))}catch(e){Object(i.default)(i.default.ERROR,"%s: Ignoring member in m=%s; error=%s",c,this.id,e)}return e},[]),enumerable:!0}),void 0!==e.description){if("string"!=typeof e.description)throw new t("description");Object.defineProperty(this,"description",{value:e.description,enumerable:!0})}if(void 0!==e.subject){if("string"!=typeof e.subject)throw new t("subject");try{Object.defineProperty(this,"subject",{value:new d.AppData(JSON.parse(e.subject)),enumerable:!0})}catch(t){Object(i.default)(i.default.ERROR,"%s: Ignoring subject in m=%s; error=%s: %s",c,this.id,t,e.subject)}}else if(void 0!==e.name){if("string"!=typeof e.name)throw new t("name");Object.defineProperty(this,"name",{value:e.name,enumerable:!0})}if(void 0!==e.data){if("string"!=typeof e.data)throw new t("data");try{Object.defineProperty(this,"data",{value:new d.AppData(JSON.parse(e.data)),enumerable:!0})}catch(t){Object(i.default)(i.default.ERROR,"%s: Ignoring data in m=%s; error=%s: %s",c,this.id,t,e.data)}}if(void 0!==e.privateData){if("string"!=typeof e.privateData)throw new t("privateData");try{const t=s.b2array(e.privateData);if(0===t.length||123!==t[0])throw new Error("Value for privateData must be an object");const n=r.c(t);if(void 0===n.protected||"object"!=typeof n.protected||null===n.protected||Array.isArray(n.protected)||n.protected instanceof Uint8Array)throw new Error("Value for privateData must contain a protected message");Object.defineProperty(this,"privateData",{value:n.protected,enumerable:!0})}catch(t){Object(i.default)(i.default.ERROR,"%s: Ignoring privateData in m=%s; error=%s: %s",c,this.id,t,e.privateData)}}if(void 0!==e.protectedKey){if("string"!=typeof e.protectedKey)throw new t("protectedKey");try{const t=s.b2array(e.protectedKey);if(0===t.length||123!==t[0])throw new Error("Value for protectedKey must be an object");Object.defineProperty(this,"protectedKey",{value:r.c(t),enumerable:!0})}catch(t){Object(i.default)(i.default.ERROR,"%s: Ignoring protectedKey in m=%s; error=%s: %s",c,this.id,t,e.protectedKey)}}}}d.UpdatePolicy={AdminOnly:"AdminOnly",MembersOnly:"MembersOnly",Anyone:"Anyone"},Object.freeze(d.UpdatePolicy),d.InvitePolicy={AdminOnly:"AdminOnly",MembersOnly:"MembersOnly",Anyone:"Anyone"},Object.freeze(d.InvitePolicy),d.Description={OneToOne:"OneToOne",Conference:"Conference"},Object.freeze(d.Description),d.Member=class{constructor(e){let t;if("object"!=typeof e&&(t="argument")||"number"!=typeof e.regId&&!(e.regId instanceof a.a)&&(t="regId")||("string"!=typeof e.pin||0===e.pin.length)&&(t="pin")||"boolean"!=typeof e.admin&&(t="admin"))throw new Error(`Invalid ${t} in member data: ${u.stringify(e)}`);if(Object.defineProperty(this,"regId",{value:e.regId.toString(),enumerable:!0}),Object.defineProperty(this,"pin",{value:e.pin,enumerable:!0}),Object.defineProperty(this,"admin",{value:e.admin,enumerable:!0}),void 0!==e.membershipSignature){if("string"!=typeof e.membershipSignature)throw new Error("Invalid membershipSignature in member data: "+u.stringify(e));Object.defineProperty(this,"membershipSignature",{value:e.membershipSignature,enumerable:!0})}}toString(){return JSON.stringify(this)}},d.AppData=class{constructor(e){let t;if("object"!=typeof e&&(t="argument")||("string"!=typeof e.regId||0===e.regId.length)&&(t="regId")||("string"!=typeof e.data||0===e.data.length)&&(t="data"))throw new Error(`Invalid ${t} in application data`);Object.defineProperty(this,"regId",{value:e.regId,enumerable:!0}),Object.defineProperty(this,"data",{value:e.data,enumerable:!0})}toString(){return JSON.stringify(this)}}},function(e,t,n){"use strict";n.r(t),n.d(t,"encode",function(){return s}),n.d(t,"decode",function(){return o});var l=n(41),r=new l.TextEncoder("utf-8"),i=new l.TextDecoder("utf-8",{fatal:!0});function s(e){return r.encode(e)}function o(e){return i.decode(e)}},function(e,t,n){var l=n(70).stringify,r=n(71);e.exports=function(e){return{parse:r(e),stringify:l}},e.exports.parse=r(),e.exports.stringify=l},function(e,t,n){var l=n(131),r=l,i="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==i?i:Function("return this")();r.exportSymbol("proto.OnlineMessage",null,i),r.exportSymbol("proto.OnlineMessage.MailboxEntry",null,i),r.exportSymbol("proto.OnlineMessage.MailboxEntry.MetaData",null,i),r.exportSymbol("proto.PostRequest",null,i),r.exportSymbol("proto.PostRequest.MetaData",null,i),r.exportSymbol("proto.PostResponse",null,i),r.exportSymbol("proto.PullRequest",null,i),r.exportSymbol("proto.PullRequest.ReadDirection",null,i),r.exportSymbol("proto.PullResponse",null,i),r.exportSymbol("proto.PullResponse.MailboxEntry",null,i),r.exportSymbol("proto.PullResponse.MailboxEntry.MetaData",null,i),r.exportSymbol("proto.SyncRequest",null,i),r.exportSymbol("proto.SyncRequest.Mailbox",null,i),r.exportSymbol("proto.SyncResponse",null,i),r.exportSymbol("proto.SyncResponse.Mailbox",null,i),r.exportSymbol("proto.SyncResponse.MailboxError",null,i),r.exportSymbol("proto.SyncResponse.MailboxError.Error",null,i),proto.PostRequest=function(e){l.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.PostRequest,l.Message),r.DEBUG&&!COMPILED&&(proto.PostRequest.displayName="proto.PostRequest"),l.Message.GENERATE_TO_OBJECT&&(proto.PostRequest.prototype.toObject=function(e){return proto.PostRequest.toObject(e,this)},proto.PostRequest.toObject=function(e,t){var n,l={metaData:(n=t.getMetaData())&&proto.PostRequest.MetaData.toObject(e,n),messageData:t.getMessageData_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.PostRequest.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.PostRequest;return proto.PostRequest.deserializeBinaryFromReader(n,t)},proto.PostRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=new proto.PostRequest.MetaData;t.readMessage(n,proto.PostRequest.MetaData.deserializeBinaryFromReader),e.setMetaData(n);break;case 2:n=t.readBytes();e.setMessageData(n);break;default:t.skipField()}}return e},proto.PostRequest.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.PostRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.PostRequest.serializeBinaryToWriter=function(e,t){var n=void 0;null!=(n=e.getMetaData())&&t.writeMessage(1,n,proto.PostRequest.MetaData.serializeBinaryToWriter),null!=(n=l.Message.getField(e,2))&&t.writeBytes(2,n)},proto.PostRequest.MetaData=function(e){l.Message.initialize(this,e,0,-1,proto.PostRequest.MetaData.repeatedFields_,null)},r.inherits(proto.PostRequest.MetaData,l.Message),r.DEBUG&&!COMPILED&&(proto.PostRequest.MetaData.displayName="proto.PostRequest.MetaData"),proto.PostRequest.MetaData.repeatedFields_=[3],l.Message.GENERATE_TO_OBJECT&&(proto.PostRequest.MetaData.prototype.toObject=function(e){return proto.PostRequest.MetaData.toObject(e,this)},proto.PostRequest.MetaData.toObject=function(e,t){var n={replacesList:t.getReplacesList_asB64(),onlineOnly:l.Message.getFieldWithDefault(t,5,!1),replacesAll:t.getReplacesAll_asB64(),pushAsStatus:l.Message.getField(t,7)};return e&&(n.$jspbMessageInstance=t),n}),proto.PostRequest.MetaData.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.PostRequest.MetaData;return proto.PostRequest.MetaData.deserializeBinaryFromReader(n,t)},proto.PostRequest.MetaData.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 3:var n=t.readBytes();e.addReplaces(n);break;case 5:n=t.readBool();e.setOnlineOnly(n);break;case 6:n=t.readBytes();e.setReplacesAll(n);break;case 7:n=t.readBool();e.setPushAsStatus(n);break;default:t.skipField()}}return e},proto.PostRequest.MetaData.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.PostRequest.MetaData.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.PostRequest.MetaData.serializeBinaryToWriter=function(e,t){var n=void 0;(n=e.getReplacesList_asU8()).length>0&&t.writeRepeatedBytes(3,n),null!=(n=l.Message.getField(e,5))&&t.writeBool(5,n),null!=(n=l.Message.getField(e,6))&&t.writeBytes(6,n),null!=(n=l.Message.getField(e,7))&&t.writeBool(7,n)},proto.PostRequest.MetaData.prototype.getReplacesList=function(){return l.Message.getRepeatedField(this,3)},proto.PostRequest.MetaData.prototype.getReplacesList_asB64=function(){return l.Message.bytesListAsB64(this.getReplacesList())},proto.PostRequest.MetaData.prototype.getReplacesList_asU8=function(){return l.Message.bytesListAsU8(this.getReplacesList())},proto.PostRequest.MetaData.prototype.setReplacesList=function(e){l.Message.setField(this,3,e||[])},proto.PostRequest.MetaData.prototype.addReplaces=function(e,t){l.Message.addToRepeatedField(this,3,e,t)},proto.PostRequest.MetaData.prototype.clearReplacesList=function(){this.setReplacesList([])},proto.PostRequest.MetaData.prototype.getOnlineOnly=function(){return l.Message.getFieldWithDefault(this,5,!1)},proto.PostRequest.MetaData.prototype.setOnlineOnly=function(e){l.Message.setField(this,5,e)},proto.PostRequest.MetaData.prototype.clearOnlineOnly=function(){l.Message.setField(this,5,void 0)},proto.PostRequest.MetaData.prototype.hasOnlineOnly=function(){return null!=l.Message.getField(this,5)},proto.PostRequest.MetaData.prototype.getReplacesAll=function(){return l.Message.getFieldWithDefault(this,6,"")},proto.PostRequest.MetaData.prototype.getReplacesAll_asB64=function(){return l.Message.bytesAsB64(this.getReplacesAll())},proto.PostRequest.MetaData.prototype.getReplacesAll_asU8=function(){return l.Message.bytesAsU8(this.getReplacesAll())},proto.PostRequest.MetaData.prototype.setReplacesAll=function(e){l.Message.setField(this,6,e)},proto.PostRequest.MetaData.prototype.clearReplacesAll=function(){l.Message.setField(this,6,void 0)},proto.PostRequest.MetaData.prototype.hasReplacesAll=function(){return null!=l.Message.getField(this,6)},proto.PostRequest.MetaData.prototype.getPushAsStatus=function(){return l.Message.getFieldWithDefault(this,7,!1)},proto.PostRequest.MetaData.prototype.setPushAsStatus=function(e){l.Message.setField(this,7,e)},proto.PostRequest.MetaData.prototype.clearPushAsStatus=function(){l.Message.setField(this,7,void 0)},proto.PostRequest.MetaData.prototype.hasPushAsStatus=function(){return null!=l.Message.getField(this,7)},proto.PostRequest.prototype.getMetaData=function(){return l.Message.getWrapperField(this,proto.PostRequest.MetaData,1,1)},proto.PostRequest.prototype.setMetaData=function(e){l.Message.setWrapperField(this,1,e)},proto.PostRequest.prototype.clearMetaData=function(){l.Message.setField(this,1,void 0)},proto.PostRequest.prototype.hasMetaData=function(){return null!=l.Message.getField(this,1)},proto.PostRequest.prototype.getMessageData=function(){return l.Message.getFieldWithDefault(this,2,"")},proto.PostRequest.prototype.getMessageData_asB64=function(){return l.Message.bytesAsB64(this.getMessageData())},proto.PostRequest.prototype.getMessageData_asU8=function(){return l.Message.bytesAsU8(this.getMessageData())},proto.PostRequest.prototype.setMessageData=function(e){l.Message.setField(this,2,e)},proto.PostRequest.prototype.clearMessageData=function(){l.Message.setField(this,2,void 0)},proto.PostRequest.prototype.hasMessageData=function(){return null!=l.Message.getField(this,2)},proto.PostResponse=function(e){l.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.PostResponse,l.Message),r.DEBUG&&!COMPILED&&(proto.PostResponse.displayName="proto.PostResponse"),l.Message.GENERATE_TO_OBJECT&&(proto.PostResponse.prototype.toObject=function(e){return proto.PostResponse.toObject(e,this)},proto.PostResponse.toObject=function(e,t){var n={messageId:t.getMessageId_asB64(),bookmarkSyncDelay:l.Message.getField(t,2)};return e&&(n.$jspbMessageInstance=t),n}),proto.PostResponse.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.PostResponse;return proto.PostResponse.deserializeBinaryFromReader(n,t)},proto.PostResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=t.readBytes();e.setMessageId(n);break;case 2:n=t.readUint64();e.setBookmarkSyncDelay(n);break;default:t.skipField()}}return e},proto.PostResponse.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.PostResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.PostResponse.serializeBinaryToWriter=function(e,t){var n=void 0;null!=(n=l.Message.getField(e,1))&&t.writeBytes(1,n),null!=(n=l.Message.getField(e,2))&&t.writeUint64(2,n)},proto.PostResponse.prototype.getMessageId=function(){return l.Message.getFieldWithDefault(this,1,"")},proto.PostResponse.prototype.getMessageId_asB64=function(){return l.Message.bytesAsB64(this.getMessageId())},proto.PostResponse.prototype.getMessageId_asU8=function(){return l.Message.bytesAsU8(this.getMessageId())},proto.PostResponse.prototype.setMessageId=function(e){l.Message.setField(this,1,e)},proto.PostResponse.prototype.clearMessageId=function(){l.Message.setField(this,1,void 0)},proto.PostResponse.prototype.hasMessageId=function(){return null!=l.Message.getField(this,1)},proto.PostResponse.prototype.getBookmarkSyncDelay=function(){return l.Message.getFieldWithDefault(this,2,0)},proto.PostResponse.prototype.setBookmarkSyncDelay=function(e){l.Message.setField(this,2,e)},proto.PostResponse.prototype.clearBookmarkSyncDelay=function(){l.Message.setField(this,2,void 0)},proto.PostResponse.prototype.hasBookmarkSyncDelay=function(){return null!=l.Message.getField(this,2)},proto.PullRequest=function(e){l.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.PullRequest,l.Message),r.DEBUG&&!COMPILED&&(proto.PullRequest.displayName="proto.PullRequest"),l.Message.GENERATE_TO_OBJECT&&(proto.PullRequest.prototype.toObject=function(e){return proto.PullRequest.toObject(e,this)},proto.PullRequest.toObject=function(e,t){var n={messageId:t.getMessageId_asB64(),stopMessageId:t.getStopMessageId_asB64(),readDirection:l.Message.getFieldWithDefault(t,3,0)};return e&&(n.$jspbMessageInstance=t),n}),proto.PullRequest.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.PullRequest;return proto.PullRequest.deserializeBinaryFromReader(n,t)},proto.PullRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=t.readBytes();e.setMessageId(n);break;case 2:n=t.readBytes();e.setStopMessageId(n);break;case 3:n=t.readEnum();e.setReadDirection(n);break;default:t.skipField()}}return e},proto.PullRequest.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.PullRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.PullRequest.serializeBinaryToWriter=function(e,t){var n=void 0;null!=(n=l.Message.getField(e,1))&&t.writeBytes(1,n),null!=(n=l.Message.getField(e,2))&&t.writeBytes(2,n),null!=(n=l.Message.getField(e,3))&&t.writeEnum(3,n)},proto.PullRequest.ReadDirection={FORWARD:0,REVERSE:1},proto.PullRequest.prototype.getMessageId=function(){return l.Message.getFieldWithDefault(this,1,"")},proto.PullRequest.prototype.getMessageId_asB64=function(){return l.Message.bytesAsB64(this.getMessageId())},proto.PullRequest.prototype.getMessageId_asU8=function(){return l.Message.bytesAsU8(this.getMessageId())},proto.PullRequest.prototype.setMessageId=function(e){l.Message.setField(this,1,e)},proto.PullRequest.prototype.clearMessageId=function(){l.Message.setField(this,1,void 0)},proto.PullRequest.prototype.hasMessageId=function(){return null!=l.Message.getField(this,1)},proto.PullRequest.prototype.getStopMessageId=function(){return l.Message.getFieldWithDefault(this,2,"")},proto.PullRequest.prototype.getStopMessageId_asB64=function(){return l.Message.bytesAsB64(this.getStopMessageId())},proto.PullRequest.prototype.getStopMessageId_asU8=function(){return l.Message.bytesAsU8(this.getStopMessageId())},proto.PullRequest.prototype.setStopMessageId=function(e){l.Message.setField(this,2,e)},proto.PullRequest.prototype.clearStopMessageId=function(){l.Message.setField(this,2,void 0)},proto.PullRequest.prototype.hasStopMessageId=function(){return null!=l.Message.getField(this,2)},proto.PullRequest.prototype.getReadDirection=function(){return l.Message.getFieldWithDefault(this,3,0)},proto.PullRequest.prototype.setReadDirection=function(e){l.Message.setField(this,3,e)},proto.PullRequest.prototype.clearReadDirection=function(){l.Message.setField(this,3,void 0)},proto.PullRequest.prototype.hasReadDirection=function(){return null!=l.Message.getField(this,3)},proto.PullResponse=function(e){l.Message.initialize(this,e,0,-1,proto.PullResponse.repeatedFields_,null)},r.inherits(proto.PullResponse,l.Message),r.DEBUG&&!COMPILED&&(proto.PullResponse.displayName="proto.PullResponse"),proto.PullResponse.repeatedFields_=[1],l.Message.GENERATE_TO_OBJECT&&(proto.PullResponse.prototype.toObject=function(e){return proto.PullResponse.toObject(e,this)},proto.PullResponse.toObject=function(e,t){var n={entryList:l.Message.toObjectList(t.getEntryList(),proto.PullResponse.MailboxEntry.toObject,e),nextMessageId:t.getNextMessageId_asB64(),gap:l.Message.getFieldWithDefault(t,3,!1),serverBookmark:t.getServerBookmark_asB64(),bookmarkSyncDelay:l.Message.getField(t,5)};return e&&(n.$jspbMessageInstance=t),n}),proto.PullResponse.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.PullResponse;return proto.PullResponse.deserializeBinaryFromReader(n,t)},proto.PullResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=new proto.PullResponse.MailboxEntry;t.readMessage(n,proto.PullResponse.MailboxEntry.deserializeBinaryFromReader),e.addEntry(n);break;case 2:n=t.readBytes();e.setNextMessageId(n);break;case 3:n=t.readBool();e.setGap(n);break;case 4:n=t.readBytes();e.setServerBookmark(n);break;case 5:n=t.readUint64();e.setBookmarkSyncDelay(n);break;default:t.skipField()}}return e},proto.PullResponse.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.PullResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.PullResponse.serializeBinaryToWriter=function(e,t){var n=void 0;(n=e.getEntryList()).length>0&&t.writeRepeatedMessage(1,n,proto.PullResponse.MailboxEntry.serializeBinaryToWriter),null!=(n=l.Message.getField(e,2))&&t.writeBytes(2,n),null!=(n=l.Message.getField(e,3))&&t.writeBool(3,n),null!=(n=l.Message.getField(e,4))&&t.writeBytes(4,n),null!=(n=l.Message.getField(e,5))&&t.writeUint64(5,n)},proto.PullResponse.MailboxEntry=function(e){l.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.PullResponse.MailboxEntry,l.Message),r.DEBUG&&!COMPILED&&(proto.PullResponse.MailboxEntry.displayName="proto.PullResponse.MailboxEntry"),l.Message.GENERATE_TO_OBJECT&&(proto.PullResponse.MailboxEntry.prototype.toObject=function(e){return proto.PullResponse.MailboxEntry.toObject(e,this)},proto.PullResponse.MailboxEntry.toObject=function(e,t){var n,l={metaData:(n=t.getMetaData())&&proto.PullResponse.MailboxEntry.MetaData.toObject(e,n),messageData:t.getMessageData_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.PullResponse.MailboxEntry.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.PullResponse.MailboxEntry;return proto.PullResponse.MailboxEntry.deserializeBinaryFromReader(n,t)},proto.PullResponse.MailboxEntry.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=new proto.PullResponse.MailboxEntry.MetaData;t.readMessage(n,proto.PullResponse.MailboxEntry.MetaData.deserializeBinaryFromReader),e.setMetaData(n);break;case 2:n=t.readBytes();e.setMessageData(n);break;default:t.skipField()}}return e},proto.PullResponse.MailboxEntry.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.PullResponse.MailboxEntry.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.PullResponse.MailboxEntry.serializeBinaryToWriter=function(e,t){var n=void 0;null!=(n=e.getMetaData())&&t.writeMessage(1,n,proto.PullResponse.MailboxEntry.MetaData.serializeBinaryToWriter),null!=(n=l.Message.getField(e,2))&&t.writeBytes(2,n)},proto.PullResponse.MailboxEntry.MetaData=function(e){l.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.PullResponse.MailboxEntry.MetaData,l.Message),r.DEBUG&&!COMPILED&&(proto.PullResponse.MailboxEntry.MetaData.displayName="proto.PullResponse.MailboxEntry.MetaData"),l.Message.GENERATE_TO_OBJECT&&(proto.PullResponse.MailboxEntry.MetaData.prototype.toObject=function(e){return proto.PullResponse.MailboxEntry.MetaData.toObject(e,this)},proto.PullResponse.MailboxEntry.MetaData.toObject=function(e,t){var n={messageId:t.getMessageId_asB64(),userId:l.Message.getField(t,2),timestamp:l.Message.getField(t,3)};return e&&(n.$jspbMessageInstance=t),n}),proto.PullResponse.MailboxEntry.MetaData.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.PullResponse.MailboxEntry.MetaData;return proto.PullResponse.MailboxEntry.MetaData.deserializeBinaryFromReader(n,t)},proto.PullResponse.MailboxEntry.MetaData.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=t.readBytes();e.setMessageId(n);break;case 2:n=t.readString();e.setUserId(n);break;case 3:n=t.readUint64();e.setTimestamp(n);break;default:t.skipField()}}return e},proto.PullResponse.MailboxEntry.MetaData.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.PullResponse.MailboxEntry.MetaData.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.PullResponse.MailboxEntry.MetaData.serializeBinaryToWriter=function(e,t){var n=void 0;null!=(n=l.Message.getField(e,1))&&t.writeBytes(1,n),null!=(n=l.Message.getField(e,2))&&t.writeString(2,n),null!=(n=l.Message.getField(e,3))&&t.writeUint64(3,n)},proto.PullResponse.MailboxEntry.MetaData.prototype.getMessageId=function(){return l.Message.getFieldWithDefault(this,1,"")},proto.PullResponse.MailboxEntry.MetaData.prototype.getMessageId_asB64=function(){return l.Message.bytesAsB64(this.getMessageId())},proto.PullResponse.MailboxEntry.MetaData.prototype.getMessageId_asU8=function(){return l.Message.bytesAsU8(this.getMessageId())},proto.PullResponse.MailboxEntry.MetaData.prototype.setMessageId=function(e){l.Message.setField(this,1,e)},proto.PullResponse.MailboxEntry.MetaData.prototype.clearMessageId=function(){l.Message.setField(this,1,void 0)},proto.PullResponse.MailboxEntry.MetaData.prototype.hasMessageId=function(){return null!=l.Message.getField(this,1)},proto.PullResponse.MailboxEntry.MetaData.prototype.getUserId=function(){return l.Message.getFieldWithDefault(this,2,"")},proto.PullResponse.MailboxEntry.MetaData.prototype.setUserId=function(e){l.Message.setField(this,2,e)},proto.PullResponse.MailboxEntry.MetaData.prototype.clearUserId=function(){l.Message.setField(this,2,void 0)},proto.PullResponse.MailboxEntry.MetaData.prototype.hasUserId=function(){return null!=l.Message.getField(this,2)},proto.PullResponse.MailboxEntry.MetaData.prototype.getTimestamp=function(){return l.Message.getFieldWithDefault(this,3,0)},proto.PullResponse.MailboxEntry.MetaData.prototype.setTimestamp=function(e){l.Message.setField(this,3,e)},proto.PullResponse.MailboxEntry.MetaData.prototype.clearTimestamp=function(){l.Message.setField(this,3,void 0)},proto.PullResponse.MailboxEntry.MetaData.prototype.hasTimestamp=function(){return null!=l.Message.getField(this,3)},proto.PullResponse.MailboxEntry.prototype.getMetaData=function(){return l.Message.getWrapperField(this,proto.PullResponse.MailboxEntry.MetaData,1,1)},proto.PullResponse.MailboxEntry.prototype.setMetaData=function(e){l.Message.setWrapperField(this,1,e)},proto.PullResponse.MailboxEntry.prototype.clearMetaData=function(){l.Message.setField(this,1,void 0)},proto.PullResponse.MailboxEntry.prototype.hasMetaData=function(){return null!=l.Message.getField(this,1)},proto.PullResponse.MailboxEntry.prototype.getMessageData=function(){return l.Message.getFieldWithDefault(this,2,"")},proto.PullResponse.MailboxEntry.prototype.getMessageData_asB64=function(){return l.Message.bytesAsB64(this.getMessageData())},proto.PullResponse.MailboxEntry.prototype.getMessageData_asU8=function(){return l.Message.bytesAsU8(this.getMessageData())},proto.PullResponse.MailboxEntry.prototype.setMessageData=function(e){l.Message.setField(this,2,e)},proto.PullResponse.MailboxEntry.prototype.clearMessageData=function(){l.Message.setField(this,2,void 0)},proto.PullResponse.MailboxEntry.prototype.hasMessageData=function(){return null!=l.Message.getField(this,2)},proto.PullResponse.prototype.getEntryList=function(){return l.Message.getRepeatedWrapperField(this,proto.PullResponse.MailboxEntry,1)},proto.PullResponse.prototype.setEntryList=function(e){l.Message.setRepeatedWrapperField(this,1,e)},proto.PullResponse.prototype.addEntry=function(e,t){return l.Message.addToRepeatedWrapperField(this,1,e,proto.PullResponse.MailboxEntry,t)},proto.PullResponse.prototype.clearEntryList=function(){this.setEntryList([])},proto.PullResponse.prototype.getNextMessageId=function(){return l.Message.getFieldWithDefault(this,2,"")},proto.PullResponse.prototype.getNextMessageId_asB64=function(){return l.Message.bytesAsB64(this.getNextMessageId())},proto.PullResponse.prototype.getNextMessageId_asU8=function(){return l.Message.bytesAsU8(this.getNextMessageId())},proto.PullResponse.prototype.setNextMessageId=function(e){l.Message.setField(this,2,e)},proto.PullResponse.prototype.clearNextMessageId=function(){l.Message.setField(this,2,void 0)},proto.PullResponse.prototype.hasNextMessageId=function(){return null!=l.Message.getField(this,2)},proto.PullResponse.prototype.getGap=function(){return l.Message.getFieldWithDefault(this,3,!1)},proto.PullResponse.prototype.setGap=function(e){l.Message.setField(this,3,e)},proto.PullResponse.prototype.clearGap=function(){l.Message.setField(this,3,void 0)},proto.PullResponse.prototype.hasGap=function(){return null!=l.Message.getField(this,3)},proto.PullResponse.prototype.getServerBookmark=function(){return l.Message.getFieldWithDefault(this,4,"")},proto.PullResponse.prototype.getServerBookmark_asB64=function(){return l.Message.bytesAsB64(this.getServerBookmark())},proto.PullResponse.prototype.getServerBookmark_asU8=function(){return l.Message.bytesAsU8(this.getServerBookmark())},proto.PullResponse.prototype.setServerBookmark=function(e){l.Message.setField(this,4,e)},proto.PullResponse.prototype.clearServerBookmark=function(){l.Message.setField(this,4,void 0)},proto.PullResponse.prototype.hasServerBookmark=function(){return null!=l.Message.getField(this,4)},proto.PullResponse.prototype.getBookmarkSyncDelay=function(){return l.Message.getFieldWithDefault(this,5,0)},proto.PullResponse.prototype.setBookmarkSyncDelay=function(e){l.Message.setField(this,5,e)},proto.PullResponse.prototype.clearBookmarkSyncDelay=function(){l.Message.setField(this,5,void 0)},proto.PullResponse.prototype.hasBookmarkSyncDelay=function(){return null!=l.Message.getField(this,5)},proto.SyncRequest=function(e){l.Message.initialize(this,e,0,-1,proto.SyncRequest.repeatedFields_,null)},r.inherits(proto.SyncRequest,l.Message),r.DEBUG&&!COMPILED&&(proto.SyncRequest.displayName="proto.SyncRequest"),proto.SyncRequest.repeatedFields_=[1],l.Message.GENERATE_TO_OBJECT&&(proto.SyncRequest.prototype.toObject=function(e){return proto.SyncRequest.toObject(e,this)},proto.SyncRequest.toObject=function(e,t){var n={mailboxesList:l.Message.toObjectList(t.getMailboxesList(),proto.SyncRequest.Mailbox.toObject,e)};return e&&(n.$jspbMessageInstance=t),n}),proto.SyncRequest.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.SyncRequest;return proto.SyncRequest.deserializeBinaryFromReader(n,t)},proto.SyncRequest.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=new proto.SyncRequest.Mailbox;t.readMessage(n,proto.SyncRequest.Mailbox.deserializeBinaryFromReader),e.addMailboxes(n);break;default:t.skipField()}}return e},proto.SyncRequest.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.SyncRequest.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.SyncRequest.serializeBinaryToWriter=function(e,t){var n;(n=e.getMailboxesList()).length>0&&t.writeRepeatedMessage(1,n,proto.SyncRequest.Mailbox.serializeBinaryToWriter)},proto.SyncRequest.Mailbox=function(e){l.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.SyncRequest.Mailbox,l.Message),r.DEBUG&&!COMPILED&&(proto.SyncRequest.Mailbox.displayName="proto.SyncRequest.Mailbox"),l.Message.GENERATE_TO_OBJECT&&(proto.SyncRequest.Mailbox.prototype.toObject=function(e){return proto.SyncRequest.Mailbox.toObject(e,this)},proto.SyncRequest.Mailbox.toObject=function(e,t){var n={mailboxId:l.Message.getField(t,1),maxMessageId:t.getMaxMessageId_asB64(),clientBookmark:t.getClientBookmark_asB64()};return e&&(n.$jspbMessageInstance=t),n}),proto.SyncRequest.Mailbox.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.SyncRequest.Mailbox;return proto.SyncRequest.Mailbox.deserializeBinaryFromReader(n,t)},proto.SyncRequest.Mailbox.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=t.readString();e.setMailboxId(n);break;case 2:n=t.readBytes();e.setMaxMessageId(n);break;case 3:n=t.readBytes();e.setClientBookmark(n);break;default:t.skipField()}}return e},proto.SyncRequest.Mailbox.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.SyncRequest.Mailbox.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.SyncRequest.Mailbox.serializeBinaryToWriter=function(e,t){var n=void 0;null!=(n=l.Message.getField(e,1))&&t.writeString(1,n),null!=(n=l.Message.getField(e,2))&&t.writeBytes(2,n),null!=(n=l.Message.getField(e,3))&&t.writeBytes(3,n)},proto.SyncRequest.Mailbox.prototype.getMailboxId=function(){return l.Message.getFieldWithDefault(this,1,"")},proto.SyncRequest.Mailbox.prototype.setMailboxId=function(e){l.Message.setField(this,1,e)},proto.SyncRequest.Mailbox.prototype.clearMailboxId=function(){l.Message.setField(this,1,void 0)},proto.SyncRequest.Mailbox.prototype.hasMailboxId=function(){return null!=l.Message.getField(this,1)},proto.SyncRequest.Mailbox.prototype.getMaxMessageId=function(){return l.Message.getFieldWithDefault(this,2,"")},proto.SyncRequest.Mailbox.prototype.getMaxMessageId_asB64=function(){return l.Message.bytesAsB64(this.getMaxMessageId())},proto.SyncRequest.Mailbox.prototype.getMaxMessageId_asU8=function(){return l.Message.bytesAsU8(this.getMaxMessageId())},proto.SyncRequest.Mailbox.prototype.setMaxMessageId=function(e){l.Message.setField(this,2,e)},proto.SyncRequest.Mailbox.prototype.clearMaxMessageId=function(){l.Message.setField(this,2,void 0)},proto.SyncRequest.Mailbox.prototype.hasMaxMessageId=function(){return null!=l.Message.getField(this,2)},proto.SyncRequest.Mailbox.prototype.getClientBookmark=function(){return l.Message.getFieldWithDefault(this,3,"")},proto.SyncRequest.Mailbox.prototype.getClientBookmark_asB64=function(){return l.Message.bytesAsB64(this.getClientBookmark())},proto.SyncRequest.Mailbox.prototype.getClientBookmark_asU8=function(){return l.Message.bytesAsU8(this.getClientBookmark())},proto.SyncRequest.Mailbox.prototype.setClientBookmark=function(e){l.Message.setField(this,3,e)},proto.SyncRequest.Mailbox.prototype.clearClientBookmark=function(){l.Message.setField(this,3,void 0)},proto.SyncRequest.Mailbox.prototype.hasClientBookmark=function(){return null!=l.Message.getField(this,3)},proto.SyncRequest.prototype.getMailboxesList=function(){return l.Message.getRepeatedWrapperField(this,proto.SyncRequest.Mailbox,1)},proto.SyncRequest.prototype.setMailboxesList=function(e){l.Message.setRepeatedWrapperField(this,1,e)},proto.SyncRequest.prototype.addMailboxes=function(e,t){return l.Message.addToRepeatedWrapperField(this,1,e,proto.SyncRequest.Mailbox,t)},proto.SyncRequest.prototype.clearMailboxesList=function(){this.setMailboxesList([])},proto.SyncResponse=function(e){l.Message.initialize(this,e,0,-1,proto.SyncResponse.repeatedFields_,null)},r.inherits(proto.SyncResponse,l.Message),r.DEBUG&&!COMPILED&&(proto.SyncResponse.displayName="proto.SyncResponse"),proto.SyncResponse.repeatedFields_=[1,2],l.Message.GENERATE_TO_OBJECT&&(proto.SyncResponse.prototype.toObject=function(e){return proto.SyncResponse.toObject(e,this)},proto.SyncResponse.toObject=function(e,t){var n={mailboxesList:l.Message.toObjectList(t.getMailboxesList(),proto.SyncResponse.Mailbox.toObject,e),errorList:l.Message.toObjectList(t.getErrorList(),proto.SyncResponse.MailboxError.toObject,e),serverBookmark:t.getServerBookmark_asB64()};return e&&(n.$jspbMessageInstance=t),n}),proto.SyncResponse.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.SyncResponse;return proto.SyncResponse.deserializeBinaryFromReader(n,t)},proto.SyncResponse.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=new proto.SyncResponse.Mailbox;t.readMessage(n,proto.SyncResponse.Mailbox.deserializeBinaryFromReader),e.addMailboxes(n);break;case 2:n=new proto.SyncResponse.MailboxError;t.readMessage(n,proto.SyncResponse.MailboxError.deserializeBinaryFromReader),e.addError(n);break;case 3:n=t.readBytes();e.setServerBookmark(n);break;default:t.skipField()}}return e},proto.SyncResponse.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.SyncResponse.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.SyncResponse.serializeBinaryToWriter=function(e,t){var n=void 0;(n=e.getMailboxesList()).length>0&&t.writeRepeatedMessage(1,n,proto.SyncResponse.Mailbox.serializeBinaryToWriter),(n=e.getErrorList()).length>0&&t.writeRepeatedMessage(2,n,proto.SyncResponse.MailboxError.serializeBinaryToWriter),null!=(n=l.Message.getField(e,3))&&t.writeBytes(3,n)},proto.SyncResponse.MailboxError=function(e){l.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.SyncResponse.MailboxError,l.Message),r.DEBUG&&!COMPILED&&(proto.SyncResponse.MailboxError.displayName="proto.SyncResponse.MailboxError"),l.Message.GENERATE_TO_OBJECT&&(proto.SyncResponse.MailboxError.prototype.toObject=function(e){return proto.SyncResponse.MailboxError.toObject(e,this)},proto.SyncResponse.MailboxError.toObject=function(e,t){var n={mailboxId:l.Message.getField(t,1),error:l.Message.getField(t,2)};return e&&(n.$jspbMessageInstance=t),n}),proto.SyncResponse.MailboxError.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.SyncResponse.MailboxError;return proto.SyncResponse.MailboxError.deserializeBinaryFromReader(n,t)},proto.SyncResponse.MailboxError.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=t.readString();e.setMailboxId(n);break;case 2:n=t.readEnum();e.setError(n);break;default:t.skipField()}}return e},proto.SyncResponse.MailboxError.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.SyncResponse.MailboxError.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.SyncResponse.MailboxError.serializeBinaryToWriter=function(e,t){var n=void 0;null!=(n=l.Message.getField(e,1))&&t.writeString(1,n),null!=(n=l.Message.getField(e,2))&&t.writeEnum(2,n)},proto.SyncResponse.MailboxError.Error={NOTSUBSCRIBED:0,NOTFOUND:1},proto.SyncResponse.MailboxError.prototype.getMailboxId=function(){return l.Message.getFieldWithDefault(this,1,"")},proto.SyncResponse.MailboxError.prototype.setMailboxId=function(e){l.Message.setField(this,1,e)},proto.SyncResponse.MailboxError.prototype.clearMailboxId=function(){l.Message.setField(this,1,void 0)},proto.SyncResponse.MailboxError.prototype.hasMailboxId=function(){return null!=l.Message.getField(this,1)},proto.SyncResponse.MailboxError.prototype.getError=function(){return l.Message.getFieldWithDefault(this,2,0)},proto.SyncResponse.MailboxError.prototype.setError=function(e){l.Message.setField(this,2,e)},proto.SyncResponse.MailboxError.prototype.clearError=function(){l.Message.setField(this,2,void 0)},proto.SyncResponse.MailboxError.prototype.hasError=function(){return null!=l.Message.getField(this,2)},proto.SyncResponse.Mailbox=function(e){l.Message.initialize(this,e,0,-1,proto.SyncResponse.Mailbox.repeatedFields_,null)},r.inherits(proto.SyncResponse.Mailbox,l.Message),r.DEBUG&&!COMPILED&&(proto.SyncResponse.Mailbox.displayName="proto.SyncResponse.Mailbox"),proto.SyncResponse.Mailbox.repeatedFields_=[4],l.Message.GENERATE_TO_OBJECT&&(proto.SyncResponse.Mailbox.prototype.toObject=function(e){return proto.SyncResponse.Mailbox.toObject(e,this)},proto.SyncResponse.Mailbox.toObject=function(e,t){var n={mailboxId:l.Message.getField(t,1),nextMessageId:t.getNextMessageId_asB64(),gap:l.Message.getFieldWithDefault(t,3,!1),idList:t.getIdList_asB64()};return e&&(n.$jspbMessageInstance=t),n}),proto.SyncResponse.Mailbox.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.SyncResponse.Mailbox;return proto.SyncResponse.Mailbox.deserializeBinaryFromReader(n,t)},proto.SyncResponse.Mailbox.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=t.readString();e.setMailboxId(n);break;case 2:n=t.readBytes();e.setNextMessageId(n);break;case 3:n=t.readBool();e.setGap(n);break;case 4:n=t.readBytes();e.addId(n);break;default:t.skipField()}}return e},proto.SyncResponse.Mailbox.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.SyncResponse.Mailbox.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.SyncResponse.Mailbox.serializeBinaryToWriter=function(e,t){var n=void 0;null!=(n=l.Message.getField(e,1))&&t.writeString(1,n),null!=(n=l.Message.getField(e,2))&&t.writeBytes(2,n),null!=(n=l.Message.getField(e,3))&&t.writeBool(3,n),(n=e.getIdList_asU8()).length>0&&t.writeRepeatedBytes(4,n)},proto.SyncResponse.Mailbox.prototype.getMailboxId=function(){return l.Message.getFieldWithDefault(this,1,"")},proto.SyncResponse.Mailbox.prototype.setMailboxId=function(e){l.Message.setField(this,1,e)},proto.SyncResponse.Mailbox.prototype.clearMailboxId=function(){l.Message.setField(this,1,void 0)},proto.SyncResponse.Mailbox.prototype.hasMailboxId=function(){return null!=l.Message.getField(this,1)},proto.SyncResponse.Mailbox.prototype.getNextMessageId=function(){return l.Message.getFieldWithDefault(this,2,"")},proto.SyncResponse.Mailbox.prototype.getNextMessageId_asB64=function(){return l.Message.bytesAsB64(this.getNextMessageId())},proto.SyncResponse.Mailbox.prototype.getNextMessageId_asU8=function(){return l.Message.bytesAsU8(this.getNextMessageId())},proto.SyncResponse.Mailbox.prototype.setNextMessageId=function(e){l.Message.setField(this,2,e)},proto.SyncResponse.Mailbox.prototype.clearNextMessageId=function(){l.Message.setField(this,2,void 0)},proto.SyncResponse.Mailbox.prototype.hasNextMessageId=function(){return null!=l.Message.getField(this,2)},proto.SyncResponse.Mailbox.prototype.getGap=function(){return l.Message.getFieldWithDefault(this,3,!1)},proto.SyncResponse.Mailbox.prototype.setGap=function(e){l.Message.setField(this,3,e)},proto.SyncResponse.Mailbox.prototype.clearGap=function(){l.Message.setField(this,3,void 0)},proto.SyncResponse.Mailbox.prototype.hasGap=function(){return null!=l.Message.getField(this,3)},proto.SyncResponse.Mailbox.prototype.getIdList=function(){return l.Message.getRepeatedField(this,4)},proto.SyncResponse.Mailbox.prototype.getIdList_asB64=function(){return l.Message.bytesListAsB64(this.getIdList())},proto.SyncResponse.Mailbox.prototype.getIdList_asU8=function(){return l.Message.bytesListAsU8(this.getIdList())},proto.SyncResponse.Mailbox.prototype.setIdList=function(e){l.Message.setField(this,4,e||[])},proto.SyncResponse.Mailbox.prototype.addId=function(e,t){l.Message.addToRepeatedField(this,4,e,t)},proto.SyncResponse.Mailbox.prototype.clearIdList=function(){this.setIdList([])},proto.SyncResponse.prototype.getMailboxesList=function(){return l.Message.getRepeatedWrapperField(this,proto.SyncResponse.Mailbox,1)},proto.SyncResponse.prototype.setMailboxesList=function(e){l.Message.setRepeatedWrapperField(this,1,e)},proto.SyncResponse.prototype.addMailboxes=function(e,t){return l.Message.addToRepeatedWrapperField(this,1,e,proto.SyncResponse.Mailbox,t)},proto.SyncResponse.prototype.clearMailboxesList=function(){this.setMailboxesList([])},proto.SyncResponse.prototype.getErrorList=function(){return l.Message.getRepeatedWrapperField(this,proto.SyncResponse.MailboxError,2)},proto.SyncResponse.prototype.setErrorList=function(e){l.Message.setRepeatedWrapperField(this,2,e)},proto.SyncResponse.prototype.addError=function(e,t){return l.Message.addToRepeatedWrapperField(this,2,e,proto.SyncResponse.MailboxError,t)},proto.SyncResponse.prototype.clearErrorList=function(){this.setErrorList([])},proto.SyncResponse.prototype.getServerBookmark=function(){return l.Message.getFieldWithDefault(this,3,"")},proto.SyncResponse.prototype.getServerBookmark_asB64=function(){return l.Message.bytesAsB64(this.getServerBookmark())},proto.SyncResponse.prototype.getServerBookmark_asU8=function(){return l.Message.bytesAsU8(this.getServerBookmark())},proto.SyncResponse.prototype.setServerBookmark=function(e){l.Message.setField(this,3,e)},proto.SyncResponse.prototype.clearServerBookmark=function(){l.Message.setField(this,3,void 0)},proto.SyncResponse.prototype.hasServerBookmark=function(){return null!=l.Message.getField(this,3)},proto.OnlineMessage=function(e){l.Message.initialize(this,e,0,-1,proto.OnlineMessage.repeatedFields_,null)},r.inherits(proto.OnlineMessage,l.Message),r.DEBUG&&!COMPILED&&(proto.OnlineMessage.displayName="proto.OnlineMessage"),proto.OnlineMessage.repeatedFields_=[1],l.Message.GENERATE_TO_OBJECT&&(proto.OnlineMessage.prototype.toObject=function(e){return proto.OnlineMessage.toObject(e,this)},proto.OnlineMessage.toObject=function(e,t){var n={entryList:l.Message.toObjectList(t.getEntryList(),proto.OnlineMessage.MailboxEntry.toObject,e),bookmarkSyncDelay:l.Message.getField(t,2)};return e&&(n.$jspbMessageInstance=t),n}),proto.OnlineMessage.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.OnlineMessage;return proto.OnlineMessage.deserializeBinaryFromReader(n,t)},proto.OnlineMessage.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=new proto.OnlineMessage.MailboxEntry;t.readMessage(n,proto.OnlineMessage.MailboxEntry.deserializeBinaryFromReader),e.addEntry(n);break;case 2:n=t.readUint64();e.setBookmarkSyncDelay(n);break;default:t.skipField()}}return e},proto.OnlineMessage.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.OnlineMessage.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.OnlineMessage.serializeBinaryToWriter=function(e,t){var n=void 0;(n=e.getEntryList()).length>0&&t.writeRepeatedMessage(1,n,proto.OnlineMessage.MailboxEntry.serializeBinaryToWriter),null!=(n=l.Message.getField(e,2))&&t.writeUint64(2,n)},proto.OnlineMessage.MailboxEntry=function(e){l.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.OnlineMessage.MailboxEntry,l.Message),r.DEBUG&&!COMPILED&&(proto.OnlineMessage.MailboxEntry.displayName="proto.OnlineMessage.MailboxEntry"),l.Message.GENERATE_TO_OBJECT&&(proto.OnlineMessage.MailboxEntry.prototype.toObject=function(e){return proto.OnlineMessage.MailboxEntry.toObject(e,this)},proto.OnlineMessage.MailboxEntry.toObject=function(e,t){var n,l={metaData:(n=t.getMetaData())&&proto.OnlineMessage.MailboxEntry.MetaData.toObject(e,n),messageData:t.getMessageData_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.OnlineMessage.MailboxEntry.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.OnlineMessage.MailboxEntry;return proto.OnlineMessage.MailboxEntry.deserializeBinaryFromReader(n,t)},proto.OnlineMessage.MailboxEntry.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=new proto.OnlineMessage.MailboxEntry.MetaData;t.readMessage(n,proto.OnlineMessage.MailboxEntry.MetaData.deserializeBinaryFromReader),e.setMetaData(n);break;case 2:n=t.readBytes();e.setMessageData(n);break;default:t.skipField()}}return e},proto.OnlineMessage.MailboxEntry.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.OnlineMessage.MailboxEntry.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.OnlineMessage.MailboxEntry.serializeBinaryToWriter=function(e,t){var n=void 0;null!=(n=e.getMetaData())&&t.writeMessage(1,n,proto.OnlineMessage.MailboxEntry.MetaData.serializeBinaryToWriter),null!=(n=l.Message.getField(e,2))&&t.writeBytes(2,n)},proto.OnlineMessage.MailboxEntry.MetaData=function(e){l.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.OnlineMessage.MailboxEntry.MetaData,l.Message),r.DEBUG&&!COMPILED&&(proto.OnlineMessage.MailboxEntry.MetaData.displayName="proto.OnlineMessage.MailboxEntry.MetaData"),l.Message.GENERATE_TO_OBJECT&&(proto.OnlineMessage.MailboxEntry.MetaData.prototype.toObject=function(e){return proto.OnlineMessage.MailboxEntry.MetaData.toObject(e,this)},proto.OnlineMessage.MailboxEntry.MetaData.toObject=function(e,t){var n={messageId:t.getMessageId_asB64(),userId:l.Message.getField(t,2),timestamp:l.Message.getField(t,3),onlineOnly:l.Message.getFieldWithDefault(t,14,!1),type:l.Message.getField(t,15)};return e&&(n.$jspbMessageInstance=t),n}),proto.OnlineMessage.MailboxEntry.MetaData.deserializeBinary=function(e){var t=new l.BinaryReader(e),n=new proto.OnlineMessage.MailboxEntry.MetaData;return proto.OnlineMessage.MailboxEntry.MetaData.deserializeBinaryFromReader(n,t)},proto.OnlineMessage.MailboxEntry.MetaData.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var n=t.readBytes();e.setMessageId(n);break;case 2:n=t.readString();e.setUserId(n);break;case 3:n=t.readUint64();e.setTimestamp(n);break;case 14:n=t.readBool();e.setOnlineOnly(n);break;case 15:n=t.readString();e.setType(n);break;default:t.skipField()}}return e},proto.OnlineMessage.MailboxEntry.MetaData.prototype.serializeBinary=function(){var e=new l.BinaryWriter;return proto.OnlineMessage.MailboxEntry.MetaData.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.OnlineMessage.MailboxEntry.MetaData.serializeBinaryToWriter=function(e,t){var n=void 0;null!=(n=l.Message.getField(e,1))&&t.writeBytes(1,n),null!=(n=l.Message.getField(e,2))&&t.writeString(2,n),null!=(n=l.Message.getField(e,3))&&t.writeUint64(3,n),null!=(n=l.Message.getField(e,14))&&t.writeBool(14,n),null!=(n=l.Message.getField(e,15))&&t.writeString(15,n)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.getMessageId=function(){return l.Message.getFieldWithDefault(this,1,"")},proto.OnlineMessage.MailboxEntry.MetaData.prototype.getMessageId_asB64=function(){return l.Message.bytesAsB64(this.getMessageId())},proto.OnlineMessage.MailboxEntry.MetaData.prototype.getMessageId_asU8=function(){return l.Message.bytesAsU8(this.getMessageId())},proto.OnlineMessage.MailboxEntry.MetaData.prototype.setMessageId=function(e){l.Message.setField(this,1,e)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.clearMessageId=function(){l.Message.setField(this,1,void 0)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.hasMessageId=function(){return null!=l.Message.getField(this,1)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.getUserId=function(){return l.Message.getFieldWithDefault(this,2,"")},proto.OnlineMessage.MailboxEntry.MetaData.prototype.setUserId=function(e){l.Message.setField(this,2,e)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.clearUserId=function(){l.Message.setField(this,2,void 0)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.hasUserId=function(){return null!=l.Message.getField(this,2)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.getTimestamp=function(){return l.Message.getFieldWithDefault(this,3,0)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.setTimestamp=function(e){l.Message.setField(this,3,e)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.clearTimestamp=function(){l.Message.setField(this,3,void 0)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.hasTimestamp=function(){return null!=l.Message.getField(this,3)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.getOnlineOnly=function(){return l.Message.getFieldWithDefault(this,14,!1)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.setOnlineOnly=function(e){l.Message.setField(this,14,e)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.clearOnlineOnly=function(){l.Message.setField(this,14,void 0)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.hasOnlineOnly=function(){return null!=l.Message.getField(this,14)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.getType=function(){return l.Message.getFieldWithDefault(this,15,"")},proto.OnlineMessage.MailboxEntry.MetaData.prototype.setType=function(e){l.Message.setField(this,15,e)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.clearType=function(){l.Message.setField(this,15,void 0)},proto.OnlineMessage.MailboxEntry.MetaData.prototype.hasType=function(){return null!=l.Message.getField(this,15)},proto.OnlineMessage.MailboxEntry.prototype.getMetaData=function(){return l.Message.getWrapperField(this,proto.OnlineMessage.MailboxEntry.MetaData,1,1)},proto.OnlineMessage.MailboxEntry.prototype.setMetaData=function(e){l.Message.setWrapperField(this,1,e)},proto.OnlineMessage.MailboxEntry.prototype.clearMetaData=function(){l.Message.setField(this,1,void 0)},proto.OnlineMessage.MailboxEntry.prototype.hasMetaData=function(){return null!=l.Message.getField(this,1)},proto.OnlineMessage.MailboxEntry.prototype.getMessageData=function(){return l.Message.getFieldWithDefault(this,2,"")},proto.OnlineMessage.MailboxEntry.prototype.getMessageData_asB64=function(){return l.Message.bytesAsB64(this.getMessageData())},proto.OnlineMessage.MailboxEntry.prototype.getMessageData_asU8=function(){return l.Message.bytesAsU8(this.getMessageData())},proto.OnlineMessage.MailboxEntry.prototype.setMessageData=function(e){l.Message.setField(this,2,e)},proto.OnlineMessage.MailboxEntry.prototype.clearMessageData=function(){l.Message.setField(this,2,void 0)},proto.OnlineMessage.MailboxEntry.prototype.hasMessageData=function(){return null!=l.Message.getField(this,2)},proto.OnlineMessage.prototype.getEntryList=function(){return l.Message.getRepeatedWrapperField(this,proto.OnlineMessage.MailboxEntry,1)},proto.OnlineMessage.prototype.setEntryList=function(e){l.Message.setRepeatedWrapperField(this,1,e)},proto.OnlineMessage.prototype.addEntry=function(e,t){return l.Message.addToRepeatedWrapperField(this,1,e,proto.OnlineMessage.MailboxEntry,t)},proto.OnlineMessage.prototype.clearEntryList=function(){this.setEntryList([])},proto.OnlineMessage.prototype.getBookmarkSyncDelay=function(){return l.Message.getFieldWithDefault(this,2,0)},proto.OnlineMessage.prototype.setBookmarkSyncDelay=function(e){l.Message.setField(this,2,e)},proto.OnlineMessage.prototype.clearBookmarkSyncDelay=function(){l.Message.setField(this,2,void 0)},proto.OnlineMessage.prototype.hasBookmarkSyncDelay=function(){return null!=l.Message.getField(this,2)},r.object.extend(t,proto)},function(e,t,n){var l;!function(r){"use strict";var i,s=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,o=Math.ceil,a=Math.floor,u="[BigNumber Error] ",c=u+"Number primitive has more than 15 significant digits: ",d=1e14,p=14,g=9007199254740991,h=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],f=1e7,m=1e9;function y(e){var t=0|e;return e>0||e===t?t:t-1}function b(e){for(var t,n,l=1,r=e.length,i=e[0]+"";l<r;){for(t=e[l++]+"",n=p-t.length;n--;t="0"+t);i+=t}for(r=i.length;48===i.charCodeAt(--r););return i.slice(0,r+1||1)}function v(e,t){var n,l,r=e.c,i=t.c,s=e.s,o=t.s,a=e.e,u=t.e;if(!s||!o)return null;if(n=r&&!r[0],l=i&&!i[0],n||l)return n?l?0:-o:s;if(s!=o)return s;if(n=s<0,l=a==u,!r||!i)return l?0:!r^n?1:-1;if(!l)return a>u^n?1:-1;for(o=(a=r.length)<(u=i.length)?a:u,s=0;s<o;s++)if(r[s]!=i[s])return r[s]>i[s]^n?1:-1;return a==u?0:a>u^n?1:-1}function E(e,t,n,l){if(e<t||e>n||e!==(e<0?o(e):a(e)))throw Error(u+(l||"Argument")+("number"==typeof e?e<t||e>n?" out of range: ":" not an integer: ":" not a primitive number: ")+e)}function I(e){return"[object Array]"==Object.prototype.toString.call(e)}function S(e){var t=e.c.length-1;return y(e.e/p)==t&&e.c[t]%2!=0}function _(e,t){return(e.length>1?e.charAt(0)+"."+e.slice(1):e)+(t<0?"e":"e+")+t}function T(e,t,n){var l,r;if(t<0){for(r=n+".";++t;r+=n);e=r+e}else if(++t>(l=e.length)){for(r=n,t-=l;--t;r+=n);e+=r}else t<l&&(e=e.slice(0,t)+"."+e.slice(t));return e}(i=function e(t){var n,l,r,i=F.prototype={constructor:F,toString:null,valueOf:null},w=new F(1),R=20,A=4,O=-7,C=21,M=-1e7,P=1e7,j=!1,D=1,x=0,N={decimalSeparator:".",groupSeparator:",",groupSize:3,secondaryGroupSize:0,fractionGroupSeparator:" ",fractionGroupSize:0},U="0123456789abcdefghijklmnopqrstuvwxyz";function F(e,t){var n,i,o,u,d,h,f,m,y=this;if(!(y instanceof F))return new F(e,t);if(null==t){if(e instanceof F)return y.s=e.s,y.e=e.e,void(y.c=(e=e.c)?e.slice():e);if((h="number"==typeof e)&&0*e==0){if(y.s=1/e<0?(e=-e,-1):1,e===~~e){for(u=0,d=e;d>=10;d/=10,u++);return y.e=u,void(y.c=[e])}m=e+""}else{if(!s.test(m=e+""))return r(y,m,h);y.s=45==m.charCodeAt(0)?(m=m.slice(1),-1):1}(u=m.indexOf("."))>-1&&(m=m.replace(".","")),(d=m.search(/e/i))>0?(u<0&&(u=d),u+=+m.slice(d+1),m=m.substring(0,d)):u<0&&(u=m.length)}else{if(E(t,2,U.length,"Base"),m=e+"",10==t)return $(y=new F(e instanceof F?e:m),R+y.e+1,A);if(h="number"==typeof e){if(0*e!=0)return r(y,m,h,t);if(y.s=1/e<0?(m=m.slice(1),-1):1,F.DEBUG&&m.replace(/^0\.0*|\./,"").length>15)throw Error(c+e);h=!1}else y.s=45===m.charCodeAt(0)?(m=m.slice(1),-1):1;for(n=U.slice(0,t),u=d=0,f=m.length;d<f;d++)if(n.indexOf(i=m.charAt(d))<0){if("."==i){if(d>u){u=f;continue}}else if(!o&&(m==m.toUpperCase()&&(m=m.toLowerCase())||m==m.toLowerCase()&&(m=m.toUpperCase()))){o=!0,d=-1,u=0;continue}return r(y,e+"",h,t)}(u=(m=l(m,t,10,y.s)).indexOf("."))>-1?m=m.replace(".",""):u=m.length}for(d=0;48===m.charCodeAt(d);d++);for(f=m.length;48===m.charCodeAt(--f););if(m=m.slice(d,++f)){if(f-=d,h&&F.DEBUG&&f>15&&(e>g||e!==a(e)))throw Error(c+y.s*e);if((u=u-d-1)>P)y.c=y.e=null;else if(u<M)y.c=[y.e=0];else{if(y.e=u,y.c=[],d=(u+1)%p,u<0&&(d+=p),d<f){for(d&&y.c.push(+m.slice(0,d)),f-=p;d<f;)y.c.push(+m.slice(d,d+=p));m=m.slice(d),d=p-m.length}else d-=f;for(;d--;m+="0");y.c.push(+m)}}else y.c=[y.e=0]}function k(e,t,n,l){var r,i,s,o,a;if(null==n?n=A:E(n,0,8),!e.c)return e.toString();if(r=e.c[0],s=e.e,null==t)a=b(e.c),a=1==l||2==l&&s<=O?_(a,s):T(a,s,"0");else if(i=(e=$(new F(e),t,n)).e,o=(a=b(e.c)).length,1==l||2==l&&(t<=i||i<=O)){for(;o<t;a+="0",o++);a=_(a,i)}else if(t-=s,a=T(a,i,"0"),i+1>o){if(--t>0)for(a+=".";t--;a+="0");}else if((t+=i-o)>0)for(i+1==o&&(a+=".");t--;a+="0");return e.s<0&&r?"-"+a:a}function B(e,t){var n,l,r=0;for(I(e[0])&&(e=e[0]),n=new F(e[0]);++r<e.length;){if(!(l=new F(e[r])).s){n=l;break}t.call(n,l)&&(n=l)}return n}function L(e,t,n){for(var l=1,r=t.length;!t[--r];t.pop());for(r=t[0];r>=10;r/=10,l++);return(n=l+n*p-1)>P?e.c=e.e=null:n<M?e.c=[e.e=0]:(e.e=n,e.c=t),e}function $(e,t,n,l){var r,i,s,u,c,g,f,m=e.c,y=h;if(m){e:{for(r=1,u=m[0];u>=10;u/=10,r++);if((i=t-r)<0)i+=p,s=t,f=(c=m[g=0])/y[r-s-1]%10|0;else if((g=o((i+1)/p))>=m.length){if(!l)break e;for(;m.length<=g;m.push(0));c=f=0,r=1,s=(i%=p)-p+1}else{for(c=u=m[g],r=1;u>=10;u/=10,r++);f=(s=(i%=p)-p+r)<0?0:c/y[r-s-1]%10|0}if(l=l||t<0||null!=m[g+1]||(s<0?c:c%y[r-s-1]),l=n<4?(f||l)&&(0==n||n==(e.s<0?3:2)):f>5||5==f&&(4==n||l||6==n&&(i>0?s>0?c/y[r-s]:0:m[g-1])%10&1||n==(e.s<0?8:7)),t<1||!m[0])return m.length=0,l?(t-=e.e+1,m[0]=y[(p-t%p)%p],e.e=-t||0):m[0]=e.e=0,e;if(0==i?(m.length=g,u=1,g--):(m.length=g+1,u=y[p-i],m[g]=s>0?a(c/y[r-s]%y[s])*u:0),l)for(;;){if(0==g){for(i=1,s=m[0];s>=10;s/=10,i++);for(s=m[0]+=u,u=1;s>=10;s/=10,u++);i!=u&&(e.e++,m[0]==d&&(m[0]=1));break}if(m[g]+=u,m[g]!=d)break;m[g--]=0,u=1}for(i=m.length;0===m[--i];m.pop());}e.e>P?e.c=e.e=null:e.e<M&&(e.c=[e.e=0])}return e}return F.clone=e,F.ROUND_UP=0,F.ROUND_DOWN=1,F.ROUND_CEIL=2,F.ROUND_FLOOR=3,F.ROUND_HALF_UP=4,F.ROUND_HALF_DOWN=5,F.ROUND_HALF_EVEN=6,F.ROUND_HALF_CEIL=7,F.ROUND_HALF_FLOOR=8,F.EUCLID=9,F.config=F.set=function(e){var t,n;if(null!=e){if("object"!=typeof e)throw Error(u+"Object expected: "+e);if(e.hasOwnProperty(t="DECIMAL_PLACES")&&(E(n=e[t],0,m,t),R=n),e.hasOwnProperty(t="ROUNDING_MODE")&&(E(n=e[t],0,8,t),A=n),e.hasOwnProperty(t="EXPONENTIAL_AT")&&(I(n=e[t])?(E(n[0],-m,0,t),E(n[1],0,m,t),O=n[0],C=n[1]):(E(n,-m,m,t),O=-(C=n<0?-n:n))),e.hasOwnProperty(t="RANGE"))if(I(n=e[t]))E(n[0],-m,-1,t),E(n[1],1,m,t),M=n[0],P=n[1];else{if(E(n,-m,m,t),!n)throw Error(u+t+" cannot be zero: "+n);M=-(P=n<0?-n:n)}if(e.hasOwnProperty(t="CRYPTO")){if((n=e[t])!==!!n)throw Error(u+t+" not true or false: "+n);if(n){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw j=!n,Error(u+"crypto unavailable");j=n}else j=n}if(e.hasOwnProperty(t="MODULO_MODE")&&(E(n=e[t],0,9,t),D=n),e.hasOwnProperty(t="POW_PRECISION")&&(E(n=e[t],0,m,t),x=n),e.hasOwnProperty(t="FORMAT")){if("object"!=typeof(n=e[t]))throw Error(u+t+" not an object: "+n);N=n}if(e.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(n=e[t])||/^.$|\.|(.).*\1/.test(n))throw Error(u+t+" invalid: "+n);U=n}}return{DECIMAL_PLACES:R,ROUNDING_MODE:A,EXPONENTIAL_AT:[O,C],RANGE:[M,P],CRYPTO:j,MODULO_MODE:D,POW_PRECISION:x,FORMAT:N,ALPHABET:U}},F.isBigNumber=function(e){return e instanceof F||e&&!0===e._isBigNumber||!1},F.maximum=F.max=function(){return B(arguments,i.lt)},F.minimum=F.min=function(){return B(arguments,i.gt)},F.random=function(){var e=9007199254740992*Math.random()&2097151?function(){return a(9007199254740992*Math.random())}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)};return function(t){var n,l,r,i,s,c=0,d=[],g=new F(w);if(null==t?t=R:E(t,0,m),i=o(t/p),j)if(crypto.getRandomValues){for(n=crypto.getRandomValues(new Uint32Array(i*=2));c<i;)(s=131072*n[c]+(n[c+1]>>>11))>=9e15?(l=crypto.getRandomValues(new Uint32Array(2)),n[c]=l[0],n[c+1]=l[1]):(d.push(s%1e14),c+=2);c=i/2}else{if(!crypto.randomBytes)throw j=!1,Error(u+"crypto unavailable");for(n=crypto.randomBytes(i*=7);c<i;)(s=281474976710656*(31&n[c])+1099511627776*n[c+1]+4294967296*n[c+2]+16777216*n[c+3]+(n[c+4]<<16)+(n[c+5]<<8)+n[c+6])>=9e15?crypto.randomBytes(7).copy(n,c):(d.push(s%1e14),c+=7);c=i/7}if(!j)for(;c<i;)(s=e())<9e15&&(d[c++]=s%1e14);for(i=d[--c],t%=p,i&&t&&(s=h[p-t],d[c]=a(i/s)*s);0===d[c];d.pop(),c--);if(c<0)d=[r=0];else{for(r=-1;0===d[0];d.splice(0,1),r-=p);for(c=1,s=d[0];s>=10;s/=10,c++);c<p&&(r-=p-c)}return g.e=r,g.c=d,g}}(),l=function(){function e(e,t,n,l){for(var r,i,s=[0],o=0,a=e.length;o<a;){for(i=s.length;i--;s[i]*=t);for(s[0]+=l.indexOf(e.charAt(o++)),r=0;r<s.length;r++)s[r]>n-1&&(null==s[r+1]&&(s[r+1]=0),s[r+1]+=s[r]/n|0,s[r]%=n)}return s.reverse()}return function(t,l,r,i,s){var o,a,u,c,d,p,g,h,f=t.indexOf("."),m=R,y=A;for(f>=0&&(c=x,x=0,t=t.replace(".",""),p=(h=new F(l)).pow(t.length-f),x=c,h.c=e(T(b(p.c),p.e,"0"),10,r,"0123456789"),h.e=h.c.length),u=c=(g=e(t,l,r,s?(o=U,"0123456789"):(o="0123456789",U))).length;0==g[--c];g.pop());if(!g[0])return o.charAt(0);if(f<0?--u:(p.c=g,p.e=u,p.s=i,g=(p=n(p,h,m,y,r)).c,d=p.r,u=p.e),f=g[a=u+m+1],c=r/2,d=d||a<0||null!=g[a+1],d=y<4?(null!=f||d)&&(0==y||y==(p.s<0?3:2)):f>c||f==c&&(4==y||d||6==y&&1&g[a-1]||y==(p.s<0?8:7)),a<1||!g[0])t=d?T(o.charAt(1),-m,o.charAt(0)):o.charAt(0);else{if(g.length=a,d)for(--r;++g[--a]>r;)g[a]=0,a||(++u,g=[1].concat(g));for(c=g.length;!g[--c];);for(f=0,t="";f<=c;t+=o.charAt(g[f++]));t=T(t,u,o.charAt(0))}return t}}(),n=function(){function e(e,t,n){var l,r,i,s,o=0,a=e.length,u=t%f,c=t/f|0;for(e=e.slice();a--;)o=((r=u*(i=e[a]%f)+(l=c*i+(s=e[a]/f|0)*u)%f*f+o)/n|0)+(l/f|0)+c*s,e[a]=r%n;return o&&(e=[o].concat(e)),e}function t(e,t,n,l){var r,i;if(n!=l)i=n>l?1:-1;else for(r=i=0;r<n;r++)if(e[r]!=t[r]){i=e[r]>t[r]?1:-1;break}return i}function n(e,t,n,l){for(var r=0;n--;)e[n]-=r,r=e[n]<t[n]?1:0,e[n]=r*l+e[n]-t[n];for(;!e[0]&&e.length>1;e.splice(0,1));}return function(l,r,i,s,o){var u,c,g,h,f,m,b,v,E,I,S,_,T,w,R,A,O,C=l.s==r.s?1:-1,M=l.c,P=r.c;if(!(M&&M[0]&&P&&P[0]))return new F(l.s&&r.s&&(M?!P||M[0]!=P[0]:P)?M&&0==M[0]||!P?0*C:C/0:NaN);for(E=(v=new F(C)).c=[],C=i+(c=l.e-r.e)+1,o||(o=d,c=y(l.e/p)-y(r.e/p),C=C/p|0),g=0;P[g]==(M[g]||0);g++);if(P[g]>(M[g]||0)&&c--,C<0)E.push(1),h=!0;else{for(w=M.length,A=P.length,g=0,C+=2,(f=a(o/(P[0]+1)))>1&&(P=e(P,f,o),M=e(M,f,o),A=P.length,w=M.length),T=A,S=(I=M.slice(0,A)).length;S<A;I[S++]=0);O=P.slice(),O=[0].concat(O),R=P[0],P[1]>=o/2&&R++;do{if(f=0,(u=t(P,I,A,S))<0){if(_=I[0],A!=S&&(_=_*o+(I[1]||0)),(f=a(_/R))>1)for(f>=o&&(f=o-1),b=(m=e(P,f,o)).length,S=I.length;1==t(m,I,b,S);)f--,n(m,A<b?O:P,b,o),b=m.length,u=1;else 0==f&&(u=f=1),b=(m=P.slice()).length;if(b<S&&(m=[0].concat(m)),n(I,m,S,o),S=I.length,-1==u)for(;t(P,I,A,S)<1;)f++,n(I,A<S?O:P,S,o),S=I.length}else 0===u&&(f++,I=[0]);E[g++]=f,I[0]?I[S++]=M[T]||0:(I=[M[T]],S=1)}while((T++<w||null!=I[0])&&C--);h=null!=I[0],E[0]||E.splice(0,1)}if(o==d){for(g=1,C=E[0];C>=10;C/=10,g++);$(v,i+(v.e=g+c*p-1)+1,s,h)}else v.e=c,v.r=+h;return v}}(),r=function(){var e=/^(-?)0([xbo])(?=\w[\w.]*$)/i,t=/^([^.]+)\.$/,n=/^\.([^.]+)$/,l=/^-?(Infinity|NaN)$/,r=/^\s*\+(?=[\w.])|^\s+|\s+$/g;return function(i,s,o,a){var c,d=o?s:s.replace(r,"");if(l.test(d))i.s=isNaN(d)?null:d<0?-1:1,i.c=i.e=null;else{if(!o&&(d=d.replace(e,function(e,t,n){return c="x"==(n=n.toLowerCase())?16:"b"==n?2:8,a&&a!=c?e:t}),a&&(c=a,d=d.replace(t,"$1").replace(n,"0.$1")),s!=d))return new F(d,c);if(F.DEBUG)throw Error(u+"Not a"+(a?" base "+a:"")+" number: "+s);i.c=i.e=i.s=null}}}(),i.absoluteValue=i.abs=function(){var e=new F(this);return e.s<0&&(e.s=1),e},i.comparedTo=function(e,t){return v(this,new F(e,t))},i.decimalPlaces=i.dp=function(e,t){var n,l,r,i=this;if(null!=e)return E(e,0,m),null==t?t=A:E(t,0,8),$(new F(i),e+i.e+1,t);if(!(n=i.c))return null;if(l=((r=n.length-1)-y(this.e/p))*p,r=n[r])for(;r%10==0;r/=10,l--);return l<0&&(l=0),l},i.dividedBy=i.div=function(e,t){return n(this,new F(e,t),R,A)},i.dividedToIntegerBy=i.idiv=function(e,t){return n(this,new F(e,t),0,1)},i.exponentiatedBy=i.pow=function(e,t){var n,l,r,i,s,c,d,g=this;if((e=new F(e)).c&&!e.isInteger())throw Error(u+"Exponent not an integer: "+e);if(null!=t&&(t=new F(t)),i=e.e>14,!g.c||!g.c[0]||1==g.c[0]&&!g.e&&1==g.c.length||!e.c||!e.c[0])return d=new F(Math.pow(+g.valueOf(),i?2-S(e):+e)),t?d.mod(t):d;if(s=e.s<0,t){if(t.c?!t.c[0]:!t.s)return new F(NaN);(l=!s&&g.isInteger()&&t.isInteger())&&(g=g.mod(t))}else{if(e.e>9&&(g.e>0||g.e<-1||(0==g.e?g.c[0]>1||i&&g.c[1]>=24e7:g.c[0]<8e13||i&&g.c[0]<=9999975e7)))return r=g.s<0&&S(e)?-0:0,g.e>-1&&(r=1/r),new F(s?1/r:r);x&&(r=o(x/p+2))}for(i?(n=new F(.5),c=S(e)):c=e%2,s&&(e.s=1),d=new F(w);;){if(c){if(!(d=d.times(g)).c)break;r?d.c.length>r&&(d.c.length=r):l&&(d=d.mod(t))}if(i){if($(e=e.times(n),e.e+1,1),!e.c[0])break;i=e.e>14,c=S(e)}else{if(!(e=a(e/2)))break;c=e%2}g=g.times(g),r?g.c&&g.c.length>r&&(g.c.length=r):l&&(g=g.mod(t))}return l?d:(s&&(d=w.div(d)),t?d.mod(t):r?$(d,x,A,void 0):d)},i.integerValue=function(e){var t=new F(this);return null==e?e=A:E(e,0,8),$(t,t.e+1,e)},i.isEqualTo=i.eq=function(e,t){return 0===v(this,new F(e,t))},i.isFinite=function(){return!!this.c},i.isGreaterThan=i.gt=function(e,t){return v(this,new F(e,t))>0},i.isGreaterThanOrEqualTo=i.gte=function(e,t){return 1===(t=v(this,new F(e,t)))||0===t},i.isInteger=function(){return!!this.c&&y(this.e/p)>this.c.length-2},i.isLessThan=i.lt=function(e,t){return v(this,new F(e,t))<0},i.isLessThanOrEqualTo=i.lte=function(e,t){return-1===(t=v(this,new F(e,t)))||0===t},i.isNaN=function(){return!this.s},i.isNegative=function(){return this.s<0},i.isPositive=function(){return this.s>0},i.isZero=function(){return!!this.c&&0==this.c[0]},i.minus=function(e,t){var n,l,r,i,s=this,o=s.s;if(t=(e=new F(e,t)).s,!o||!t)return new F(NaN);if(o!=t)return e.s=-t,s.plus(e);var a=s.e/p,u=e.e/p,c=s.c,g=e.c;if(!a||!u){if(!c||!g)return c?(e.s=-t,e):new F(g?s:NaN);if(!c[0]||!g[0])return g[0]?(e.s=-t,e):new F(c[0]?s:3==A?-0:0)}if(a=y(a),u=y(u),c=c.slice(),o=a-u){for((i=o<0)?(o=-o,r=c):(u=a,r=g),r.reverse(),t=o;t--;r.push(0));r.reverse()}else for(l=(i=(o=c.length)<(t=g.length))?o:t,o=t=0;t<l;t++)if(c[t]!=g[t]){i=c[t]<g[t];break}if(i&&(r=c,c=g,g=r,e.s=-e.s),(t=(l=g.length)-(n=c.length))>0)for(;t--;c[n++]=0);for(t=d-1;l>o;){if(c[--l]<g[l]){for(n=l;n&&!c[--n];c[n]=t);--c[n],c[l]+=d}c[l]-=g[l]}for(;0==c[0];c.splice(0,1),--u);return c[0]?L(e,c,u):(e.s=3==A?-1:1,e.c=[e.e=0],e)},i.modulo=i.mod=function(e,t){var l,r,i=this;return e=new F(e,t),!i.c||!e.s||e.c&&!e.c[0]?new F(NaN):!e.c||i.c&&!i.c[0]?new F(i):(9==D?(r=e.s,e.s=1,l=n(i,e,0,3),e.s=r,l.s*=r):l=n(i,e,0,D),(e=i.minus(l.times(e))).c[0]||1!=D||(e.s=i.s),e)},i.multipliedBy=i.times=function(e,t){var n,l,r,i,s,o,a,u,c,g,h,m,b,v,E,I=this,S=I.c,_=(e=new F(e,t)).c;if(!(S&&_&&S[0]&&_[0]))return!I.s||!e.s||S&&!S[0]&&!_||_&&!_[0]&&!S?e.c=e.e=e.s=null:(e.s*=I.s,S&&_?(e.c=[0],e.e=0):e.c=e.e=null),e;for(l=y(I.e/p)+y(e.e/p),e.s*=I.s,(a=S.length)<(g=_.length)&&(b=S,S=_,_=b,r=a,a=g,g=r),r=a+g,b=[];r--;b.push(0));for(v=d,E=f,r=g;--r>=0;){for(n=0,h=_[r]%E,m=_[r]/E|0,i=r+(s=a);i>r;)n=((u=h*(u=S[--s]%E)+(o=m*u+(c=S[s]/E|0)*h)%E*E+b[i]+n)/v|0)+(o/E|0)+m*c,b[i--]=u%v;b[i]=n}return n?++l:b.splice(0,1),L(e,b,l)},i.negated=function(){var e=new F(this);return e.s=-e.s||null,e},i.plus=function(e,t){var n,l=this,r=l.s;if(t=(e=new F(e,t)).s,!r||!t)return new F(NaN);if(r!=t)return e.s=-t,l.minus(e);var i=l.e/p,s=e.e/p,o=l.c,a=e.c;if(!i||!s){if(!o||!a)return new F(r/0);if(!o[0]||!a[0])return a[0]?e:new F(o[0]?l:0*r)}if(i=y(i),s=y(s),o=o.slice(),r=i-s){for(r>0?(s=i,n=a):(r=-r,n=o),n.reverse();r--;n.push(0));n.reverse()}for((r=o.length)-(t=a.length)<0&&(n=a,a=o,o=n,t=r),r=0;t;)r=(o[--t]=o[t]+a[t]+r)/d|0,o[t]=d===o[t]?0:o[t]%d;return r&&(o=[r].concat(o),++s),L(e,o,s)},i.precision=i.sd=function(e,t){var n,l,r,i=this;if(null!=e&&e!==!!e)return E(e,1,m),null==t?t=A:E(t,0,8),$(new F(i),e,t);if(!(n=i.c))return null;if(l=(r=n.length-1)*p+1,r=n[r]){for(;r%10==0;r/=10,l--);for(r=n[0];r>=10;r/=10,l++);}return e&&i.e+1>l&&(l=i.e+1),l},i.shiftedBy=function(e){return E(e,-g,g),this.times("1e"+e)},i.squareRoot=i.sqrt=function(){var e,t,l,r,i,s=this,o=s.c,a=s.s,u=s.e,c=R+4,d=new F("0.5");if(1!==a||!o||!o[0])return new F(!a||a<0&&(!o||o[0])?NaN:o?s:1/0);if(0==(a=Math.sqrt(+s))||a==1/0?(((t=b(o)).length+u)%2==0&&(t+="0"),a=Math.sqrt(t),u=y((u+1)/2)-(u<0||u%2),l=new F(t=a==1/0?"1e"+u:(t=a.toExponential()).slice(0,t.indexOf("e")+1)+u)):l=new F(a+""),l.c[0])for((a=(u=l.e)+c)<3&&(a=0);;)if(i=l,l=d.times(i.plus(n(s,i,c,1))),b(i.c).slice(0,a)===(t=b(l.c)).slice(0,a)){if(l.e<u&&--a,"9999"!=(t=t.slice(a-3,a+1))&&(r||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||($(l,l.e+R+2,1),e=!l.times(l).eq(s));break}if(!r&&($(i,i.e+R+2,0),i.times(i).eq(s))){l=i;break}c+=4,a+=4,r=1}return $(l,l.e+R+1,A,e)},i.toExponential=function(e,t){return null!=e&&(E(e,0,m),e++),k(this,e,t,1)},i.toFixed=function(e,t){return null!=e&&(E(e,0,m),e=e+this.e+1),k(this,e,t)},i.toFormat=function(e,t){var n=this.toFixed(e,t);if(this.c){var l,r=n.split("."),i=+N.groupSize,s=+N.secondaryGroupSize,o=N.groupSeparator,a=r[0],u=r[1],c=this.s<0,d=c?a.slice(1):a,p=d.length;if(s&&(l=i,i=s,s=l,p-=l),i>0&&p>0){for(l=p%i||i,a=d.substr(0,l);l<p;l+=i)a+=o+d.substr(l,i);s>0&&(a+=o+d.slice(l)),c&&(a="-"+a)}n=u?a+N.decimalSeparator+((s=+N.fractionGroupSize)?u.replace(new RegExp("\\d{"+s+"}\\B","g"),"$&"+N.fractionGroupSeparator):u):a}return n},i.toFraction=function(e){var t,l,r,i,s,o,a,c,d,g,f,m,y=this,v=y.c;if(null!=e&&(!(c=new F(e)).isInteger()&&(c.c||1!==c.s)||c.lt(w)))throw Error(u+"Argument "+(c.isInteger()?"out of range: ":"not an integer: ")+e);if(!v)return y.toString();for(l=new F(w),g=r=new F(w),i=d=new F(w),m=b(v),o=l.e=m.length-y.e-1,l.c[0]=h[(a=o%p)<0?p+a:a],e=!e||c.comparedTo(l)>0?o>0?l:g:c,a=P,P=1/0,c=new F(m),d.c[0]=0;f=n(c,l,0,1),1!=(s=r.plus(f.times(i))).comparedTo(e);)r=i,i=s,g=d.plus(f.times(s=g)),d=s,l=c.minus(f.times(s=l)),c=s;return s=n(e.minus(r),i,0,1),d=d.plus(s.times(g)),r=r.plus(s.times(i)),d.s=g.s=y.s,t=n(g,i,o*=2,A).minus(y).abs().comparedTo(n(d,r,o,A).minus(y).abs())<1?[g.toString(),i.toString()]:[d.toString(),r.toString()],P=a,t},i.toNumber=function(){return+this},i.toPrecision=function(e,t){return null!=e&&E(e,1,m),k(this,e,t,2)},i.toString=function(e){var t,n=this,r=n.s,i=n.e;return null===i?r?(t="Infinity",r<0&&(t="-"+t)):t="NaN":(t=b(n.c),null==e?t=i<=O||i>=C?_(t,i):T(t,i,"0"):(E(e,2,U.length,"Base"),t=l(T(t,i,"0"),10,e,r,!0)),r<0&&n.c[0]&&(t="-"+t)),t},i.valueOf=i.toJSON=function(){var e,t=this,n=t.e;return null===n?t.toString():(e=b(t.c),e=n<=O||n>=C?_(e,n):T(e,n,"0"),t.s<0?"-"+e:e)},i._isBigNumber=!0,null!=t&&F.set(t),F}()).default=i.BigNumber=i,void 0===(l=function(){return i}.call(t,n,t,e))||(e.exports=l)}()},function(e,t,n){"use strict";n.r(t);var l=n(0);function r(e){this.tokenFetcher=e,this.promises=[],this.token=void 0,this.requestOutstanding=!1,this.refreshNeeded=!0,this.expiryTimerId=void 0,this.get().catch(function(){})}r.prototype.get=function(){return!1===this.refreshNeeded&&void 0!==this.token?Promise.resolve(this.token):(!1===this.requestOutstanding&&(this.requestOutstanding=!0,this.tokenFetcher().then(e=>{!function(e,t){e.token=t,e.oauthToken=t.oauthToken,e.refreshNeeded=!1;var n=t.expiry-Date.now();n<=2147483647&&(e.expiryTimerId=setTimeout(function(){e.refreshNeeded=!0,e.expiryTimerId=void 0},n)),e.promises.forEach(function(t){t.resolve(e.token)}),e.promises=[]}(this,e),this.requestOutstanding=!1}).catch(e=>{Object(l.default)(l.default.ERROR,"%s: Failed to fetch BBM token; rejecting %d promise(s); error=%s","BbmToken",this.promises.length,e),this.promises.forEach(function(t){t.reject(e)}),this.promises=[],this.requestOutstanding=!1})),new Promise((e,t)=>{this.promises.push({resolve:e,reject:t})}))},r.prototype.refresh=function(){return this.refreshNeeded=!0,this.get()},r.prototype.reset=function(){this.expiryTimerId&&(clearTimeout(this.expiryTimerId),this.expiryTimerId=void 0)};var i=n(1),s=n(4),o=n(3),a=n(23),u=n.n(a),c=n(19),d=n.n(c),p=n(42),g=n.n(p),h=n(36),f=n.n(h),m=n(37),y=n.n(m),b=n(17),v=n.n(b),E=n(15);n.d(t,"default",function(){return T});var I={GET:"GET",POST:"POST",PUT:"PUT",DELETE:"DELETE"};Object.freeze(I),T.Method=I;var S={Mailbox:"Mailbox",Profile:"Profile",Kms:"Kms"};function _(e,t,n){this.method=e,this.server=t,this.timeout=n,Object.freeze(this)}function T(e,t,n,l,s,o,a,u,c,d){if(this.options={profileAddress:e,mailboxAddress:t,kmsAddress:n,profilePort:l,mailboxPort:s,kmsPort:o,timeout:Number.isInteger(d)?d:3e4},Object.freeze(this.options),this.cnonceFunction=R,"string"!=typeof a||0===a.length)throw new i.Error("domain must be a non-empty string");this.domain=a,this.bbmToken=new r(()=>this.refreshBbmToken(u,c))}function w(e,t,n){return e.request(t,e.requestOptions(I.POST,S.Profile),n).then(e=>{const t=[],n=t=>{throw new i.PermanentFailure("Invalid response entity resolving identities; "+`${t}; entity=${JSON.stringify(e)}`)};e.hasOwnProperty("ids")||n("missing ids field"),e.ids instanceof Array||n("ids field not an array");for(const l of e.ids)l.hasOwnProperty("userId")||n("missing userId field"),l.hasOwnProperty("regId")||n("missing regId field"),t.push({appUserId:l.userId,regId:l.regId.toString()});return t})}function R(){return Object(o.array2b)(s.generateBytes(32))}Object.freeze(S),T.Server=S,_.prototype=Object.create(Object.prototype),_.prototype.constructor=_,T.prototype.requestOptions=function(e,t,n){return new _(void 0===e?I.GET:e,void 0===t?S.Mailbox:t,Number.isInteger(n)?n:this.options.timeout)},T.prototype.refreshBbmToken=function(e,t){return"string"!=typeof e||0===e.length?Promise.reject(new i.Error("userId must be provided as a non-empty string")):"function"!=typeof t?Promise.reject(new i.Error("getAuthToken must be provided as a function")):t().then(t=>{if("string"!=typeof t||0===t.length)throw new i.Error("token returned from getAuthToken must be a non-empty string");return n=t,s.getIdpUserIdHash(e)}).then(t=>new Promise((l,r)=>{var s={serverAddress:this.options.profileAddress,serverPort:this.options.profilePort,uri:"/domains/"+this.domain+"/token?userId="+t+"&requireMinToken=true",method:"POST",requestHeaders:{"Content-Type":"application/json; charset=utf-8"},timeout:this.options.timeout,body:JSON.stringify({authorizationCode:n,userId:e})},o="https://"+this.options.profileAddress+(s.profilePort?":"+s.profilePort:"")+s.uri;new u.a(s).then(e=>{if(204!==e.status){var t;try{t=E.parse(e.responseText)}catch(t){return void r(new i.PermanentFailure("Request 'POST "+o+"' failed: Response cannot be parsed as JSON: "+e.responseText))}if("string"==typeof t.bbmToken&&0!==t.bbmToken.length)if("string"==typeof t.secret&&0!==t.secret.length)if(!Number.isInteger(t.expirationTime)||t.expirationTime<=0)r(new i.PermanentFailure("Request 'POST "+o+"' failed: Missing expirationTime in response: "+JSON.stringify(t)));else{var a={token:t.bbmToken,tokenMin:t.bbmTokenMin,secret:t.secret,expiry:t.expirationTime,oauthToken:n};Object.freeze(a),l(a)}else r(new i.PermanentFailure("Request 'POST "+o+"' failed: Missing secret in response: "+JSON.stringify(t)));else r(new i.PermanentFailure("Request 'POST "+o+"' failed: Missing bbmToken in response: "+JSON.stringify(t)))}else r(new i.PermanentFailure("Request '"+s.method+" "+o+"' failed: "+e.status))}).catch(e=>{e.status?e.status>=500?r(new i.TemporaryFailure("Request 'POST "+o+"' failed: "+e.status)):r(new i.PermanentFailure("Request '"+s.method+" "+o+"' failed: "+e.status)):r(new i.TemporaryFailure("Request 'POST "+o+"' failed: Timeout"))})}));var n},T.prototype.register=function(e,t,n,l,r,i,o){return s.getIdpUserIdHash(e).then(e=>{var s="/domains/"+this.domain+"/user/registration?userId="+e+"&endpointId="+t+"&platform="+d.a+"&osVersion="+g.a.osVersion+"&clientVersion="+n+"&clientBundle="+l+"&capabilities="+r+"&mpop=ephemeral",a={description:i};return o&&(a.name=o),this.request(s,this.requestOptions(I.POST,S.Profile),a)})},T.prototype.uploadFile=function(e,t,n){return function(e,t){if(!e.olympiaServiceInfo){var n="/domains/"+e.domain+"/user/profiles/"+t+"/avatar/serviceproperties";e.olympiaServiceInfo=e.request(n,e.requestOptions(I.GET,S.Profile)).then(t=>{if(t.serviceEnabled){var n=!1,l=!1;t.operations.forEach(t=>{"add"===t.type&&(e.uploadUrl=t.url,e.uploadMethod=t.httpmethod,e.uploadHeaders=t.headers,e.uploadUrl&&e.uploadMethod&&(n=!0)),"delete"===t.type&&(e.deleteMethod=t.httpmethod,e.deleteHeaders=t.headers,e.deleteMethod&&(l=!0))}),e.serviceInfoEnabled=!(!n||!l)}else e.uploadUrl=void 0,e.uploadMethod=void 0,e.uploadHeaders=void 0,e.deleteMethod=void 0,e.deleteHeaders=void 0,e.serviceInfoEnabled=!1}).catch(t=>{throw e.olympiaServiceInfo=void 0,t})}}(this,e),this.olympiaServiceInfo.then(()=>{if(!this.serviceInfoEnabled)throw new i.Error("Cannot proceed because olympia service is disabled");this.uploadUrl=this.uploadUrl.replace(/([&?])transform=bbma_publish(?=$|&)/g,"$1filetype=13"),this.uploadHeaders||(this.uploadHeaders={}),this.uploadHeaders["X-Olympia-Svc"]="bbmchat",this.uploadHeaders.accept="application/json";var e=new f.a(this.uploadUrl);return u()({serverAddress:e.host,serverPort:e.port,uri:e.pathname+e.search,method:this.uploadMethod,requestHeaders:this.uploadHeaders,responseType:"json",body:t,progress:n}).catch(e=>{throw!e.status||e.status>=500?new i.TemporaryFailure("Failure response returned from server: "+JSON.stringify(e)):(this.olympiaServiceInfo=void 0,new i.PermanentFailure("Failure response returned from server: "+JSON.stringify(e)))}).then(e=>{if(e.response&&e.response.loginResults&&e.response.loginResults.downloadUrl)return e.response.loginResults.downloadUrl;throw new i.TemporaryFailure("Bad response returned from server: "+JSON.stringify(e))})})},T.prototype.getPins=function(e){var t="/domains/"+this.domain+"/user/profiles/pins",n="["+e.join(",")+"]";return this.request(t,this.requestOptions(I.POST,S.Profile),n)},T.prototype.request=function(e,t,n){return this.bbmToken.get().then(r=>new Promise((s,o)=>{var a,c;t instanceof _||(t=this.requestOptions()),t.server===S.Mailbox?(a=this.options.mailboxAddress,c=this.options.mailboxPort):t.server===S.Kms?(a=this.options.kmsAddress,c=this.options.kmsPort):(a=this.options.profileAddress,c=this.options.profilePort);var d=!0,p=null;const g=(t,n,h)=>{var f={"X-BBM-Token":r.token};if(n.method!==I.GET&&(f["Content-Type"]="application/json; charset=utf-8"),null!==p){var m=("00000000"+p.count.toString(16)).slice(-8),b=y()(":"+p.realm+":"+r.secret),v=y()(n.method+":"+t),S=y()(b+":"+p.nonce+":"+m+":"+p.cnonce+":"+p.qop+":"+v);f.Authorization=p.scheme+' username="", realm="'+p.realm+'", nonce="'+p.nonce+'", uri="'+t+'", response="'+S+(p.opaque?'", opaque="'+p.opaque:"")+'", qop="'+p.qop+'", nc="'+m+'", cnonce="'+p.cnonce+'"'}const _=n.method===I.GET||n.method===I.DELETE?void 0:"string"==typeof h?h:E.stringify(h);_&&Object(l.default)(l.default.DEBUG2,"%s: Request entity=%s","BusClient",_),new u.a({serverAddress:a,serverPort:c,uri:e,method:n.method,timeout:n.timeout,requestHeaders:f,body:_}).then(e=>{if(e.responseText){Object(l.default)(l.default.DEBUG2,"%s: Response entity=%s","BusClient",e.responseText);try{s(E.parse(e.responseText))}catch(l){o(new i.PermanentFailure("Request '"+n.method+" "+t+"' failed: Response cannot be parsed as JSON: "+e.responseText))}}else s()}).catch(e=>{if(e.responseText&&Object(l.default)(l.default.DEBUG2,"%s: Response entity=%s","BusClient",e.responseText),e.status)if(e.status>=500)o(new i.TemporaryFailure("Request '"+n.method+" "+t+"' failed: "+e.status));else{if(401===e.status){if(!d)return this.bbmToken.refresh(),void o(new i.TemporaryFailure("Request '"+n.method+" "+t+"' failed: "+e.status));d=!1;var r=e.headers["WWW-Authenticate"];if(!r)return void o(new i.PermanentFailure("Request '"+n.method+" "+t+"' failed: "+e.status+"; No WWW-Authenticate header in response"));var s={};if(s.scheme=r.split(/\s/,1)[0],!s.scheme.match(/Digest/))return void o(new i.PermanentFailure("Request '"+n.method+" "+t+"' failed: "+e.status+"; Failed to parse authentication scheme from WWW-Authenticate header: "+r));var a=r.slice(s.scheme.length).match(/\s*?[^\s]+?\s*?=\s*?"[^"]*?"\s*?,?/g);return a?(a.forEach(e=>{var t=e.match(/\s*?([^\s]+?)\s*?=\s*?"([^"]*?)"/);s[t[1]]=t[2]}),s.realm?s.nonce?"auth"!=s.qop?void o(new i.PermanentFailure("Request '"+n.method+" "+t+"' failed: "+e.status+"; Failed to parse authentication qop from WWW-Authenticate header: "+r)):(s.count=1,s.cnonce=this.cnonceFunction(),p=s,void g(t,n,h)):void o(new i.PermanentFailure("Request '"+n.method+" "+t+"' failed: "+e.status+"; Failed to parse authentication nonce from WWW-Authenticate header: "+r)):void o(new i.PermanentFailure("Request '"+n.method+" "+t+"' failed: "+e.status+"; Failed to parse authentication realm from WWW-Authenticate header: "+r))):void o(new i.PermanentFailure("Request '"+n.method+" "+t+"' failed: "+e.status+"; Failed to parse digest data from WWW-Authenticate header: "+r))}if(403!==e.status){if(404===e.status)try{var u=E.parse(e.responseText);if(u&&"NotFound"===u.error)return void o(new i.NotFound("Request '"+n.method+" "+t+"'"))}catch(e){}o(new i.PermanentFailure("Request '"+n.method+" "+t+"' failed: "+e.status))}else o(new i.Forbidden("Request '"+n.method+" "+t+"'"))}else o(new i.TemporaryFailure("Request '"+n.method+" "+t+"' failed: Timeout"))})};g("https://"+a+(c?":"+c:"")+e,t,n)}))},T.prototype.reset=function(){this.bbmToken.reset()},T.prototype.resolveAppUserIds=function(e){if(!(e instanceof Array))throw new TypeError("appUserIds must be an array");if(e.some(e=>"string"!=typeof e))throw new TypeError("appUserIds must be strings");return w(this,`/domains/${this.domain}/user/identity/regId`,e)},T.prototype.resolveRegIds=function(e){if(!(e instanceof Array))throw new TypeError("regIds must be an array");const t=/^[0-9]+$/,n=e.map(e=>{if("string"!=typeof e)throw new TypeError("regIds must be strings");if(null===e.match(t))throw new TypeError("regIds must contain only digits [0-9]");try{return new v.a(e)}catch(e){throw new TypeError(`regIds must be convertible to numbers: ${e}`)}});return w(this,`/domains/${this.domain}/user/identity/userId`,n)}},function(e,t,n){"use strict";e.exports="web"},function(e,t,n){"use strict";const l=n(41),r=n(60).base64DecodeUint8Array,i=new l.TextEncoder("utf-8"),s=new l.TextDecoder("utf-8",{fatal:!0});e.exports={base64Uint8Array:function(e){return btoa(String.fromCharCode.apply(null,e))},base64String:function(e){return btoa(String.fromCharCode.apply(null,i.encode(e)))},unbase64String:function(e){return s.decode(r(e))},unbase64Array:function(e){return r(e)}}},function(e,t,n){"use strict";function l(e,t){return function e(t,n,l={left:new Set,right:new Set}){if(l.left.has(t)||l.right.has(n))throw TypeError("JSON objects cannot contain circular references");function r(e){switch(typeof e){case"number":if(!Number.isFinite(e))throw new TypeError(`Invalid JSON value encountered: ${e}`);return;case"boolean":case"string":case"object":return;default:throw new TypeError(`Invalid JSON type encountered: ${typeof e}`)}}if(t===n)return r(t),!0;switch(typeof t){case"number":if(!Number.isFinite(t))throw new TypeError(`Invalid JSON value encountered: ${t}`);case"boolean":case"string":return r(n),!1;case"object":{if(r(n),"object"!=typeof n)return!1;if(null===t||null===n)return!1;if(Array.isArray(t)){if(!Array.isArray(n)||t.length!==n.length)return!1;const r={left:new Set(l.left).add(t),right:new Set(l.right).add(n)};for(let l=0;l<t.length;++l)if(!e(t[l],n[l],r))return!1;return!0}if(Array.isArray(n))return!1;const i=Object.keys(t);if(i.length!==Object.keys(n).length)return!1;const s={left:new Set(l.left).add(t),right:new Set(l.right).add(n)};for(const l of i)if(!n.hasOwnProperty(l)||!n.propertyIsEnumerable(l)||!e(t[l],n[l],s))return!1;return!0}default:throw new TypeError(`Invalid JSON type encountered: ${typeof t}`)}}(e,t)}n.d(t,"a",function(){return l})},function(e,t,n){"use strict";t.a=class{constructor(){this.privateAccess=!1}privateData(e,t){Object.defineProperty(e,"_prv",{get:()=>this.privateAccess?t:void 0})}get(e){this.privateAccess=!0;const t=e._prv;return this.privateAccess=!1,t}}},function(e,t,n){"use strict";const l=n(0).default,r="Request";let i=0;function s(e){return new Promise(function(t,n){const s=++i;let o=new XMLHttpRequest;const a="https://"+e.serverAddress+(e.serverPort?":"+e.serverPort:"")+e.uri;l(l.INFO,"%s[%s]: %s %s",r,s,e.method,a),l.debug(l.DEBUG2,"%s[%d]: Request entity = %s",r,s,e.body),o.open(e.method,a,!0),o.timeout=e.timeout,e.requestHeaders&&Object.keys(e.requestHeaders).forEach(function(t){const n=e.requestHeaders[t];l.debug(l.DEBUG2,"%s[%d]: Header[%s] = %s",r,s,t,n),o.setRequestHeader(t,n)}),o.responseType=e.responseType?e.responseType:"text",!e.progress||"GET"!==e.method&&void 0!==e.method||(o.onprogress=e.progress),!e.progress||"PUT"!==e.method&&"POST"!==e.method||o.upload.addEventListener("progress",e.progress),o.onreadystatechange=function(){if(e.headersOnly&&o.readyState>=o.HEADERS_RECEIVED)return t(e.headersOnly.reduce((e,t)=>(e[t]=o.getResponseHeader(t),e),{})),void o.abort();if(o.readyState!==o.DONE)return;if(l(l.INFO,"%s[%d %d -]: %s %s",r,s,o.status,e.method,a),200===o.status){switch(e.responseType){case"arraybuffer":case"json":t({status:o.status,response:o.response});break;case void 0:case"text":t({status:o.status,responseText:o.responseText});break;default:throw new Error("Unhandled response type: "+e.responseType)}return}if(204===o.status)return void t({status:o.status});let i={};401===o.status&&(i["WWW-Authenticate"]=o.getResponseHeader("WWW-Authenticate")),n({status:o.status,headers:i,responseText:"json"===o.responseType?o.statusText:o.responseText})},o.send(e.body)})}s.pinCertificates=function(){return null},e.exports=s},function(e,t,n){"use strict";n.d(t,"a",function(){return m});var l=n(5),r=n(1),i=n(13),s=n(4),o=n(34),a=n(2),u=n(3),c=n(0),d=n(14),p=n(20),g=n.n(p);const h="RimIm";var f=1;class m{constructor(e,t){this.regId=e,this.keyManager=t,this.protectionRequired=!0}content(e,t,n,r,i,s,o){let u={content:{tag:e}};if(void 0!==t&&(u.content.content=t),void 0!==n&&(u.content.data=new l.b(n)),void 0!==r&&(u.content.thumb=r),void 0!==i&&(u.content.thumbName=i),void 0!==s&&(Object(a.default)("string"==typeof s.url&&s.url.length>0),Object(a.default)(s.key instanceof Uint8Array),Object(a.default)(s.hash instanceof Uint8Array),Object(a.default)(void 0===s.name||"string"==typeof s.name),Object(a.default)(void 0===s.size||"number"==typeof s.size),u.content.attach=s),o&&o instanceof Array&&o.length>0){u.content.ref=[];for(const e of o)u.content.ref.push({tag:e.tag,messageId:e.messageId.binary})}return l.d(u)}join(e,t){var n={join:{displayName:""}};return void 0!==e&&(Object(a.default)(e instanceof Uint8Array,"inviteId must be a byte array"),n.join.inviteId=e),void 0!==t&&(n.join.messageExpiry=t),l.d(n)}recall(e){return l.d({recall:{ids:e}})}delete(e){return l.d({delete:{ids:e}})}leave(){return l.d({leave:{displayName:""}})}remove(e){return l.d({remove:{regId:e}})}shred(){return l.d({shred:{}})}status(e,t){var n={status:{}};return void 0!==e&&(n.status.d=e),void 0!==t&&(n.status.r=t),l.d(n)}typing(e,t){const n={typing:{}};return void 0!==e&&(Object(a.default)("string"==typeof e,"tag must be a string."),n.typing.tag=e,t&&(Object(a.default)(t instanceof Uint8Array&&t.length>0,"tag must be a non empty Uint8Array."),n.typing.messageId=t)),l.d(n)}subject(e){return l.d({subject:{subject:e}})}admin(e,t){return l.d({admin:{regId:e,promotion:t}})}invite(e,t,n,r,i){var s={invite:{mailboxId:e,subject:t,displayName:""}};return void 0!==n&&(s.invite.isConference=n),void 0!==r&&(s.invite.symmetricKey=r),void 0!==i&&(Object(a.default)(i instanceof Uint8Array,"inviteId must be a byte array"),s.invite.inviteId=i),l.d(s)}chatCreated(e,t,n,r,i){var s={chatCreated:{endpointId:e,mailboxId:t}};return void 0!==n&&(s.chatCreated.symmetricKey=n),void 0!==r&&(s.chatCreated.subject=r),void 0!==i&&void 0!==i.regId&&(s.chatCreated.peer={regId:i.regId}),l.d(s)}chatRemoved(e,t,n){return l.d({chatRemoved:{mailboxId:e,authCode:t,encryptedAuthCode:n}})}chatLeft(e,t,n){var r={chatLeft:{endpointId:e,mailboxId:t}};return void 0!==n&&!1!==n&&(r.chatLeft.remove=n),l.d(r)}restoreMarker(e){return Object(a.default)("string"==typeof e&&e.length>0,"Parameter does not meet expectations"),l.d({restoreMarker:{endpointId:e}})}event(e,t){const n={event:{}};if("string"!=typeof e)throw new TypeError("tag must be a string");if(n.event.tag=e,void 0!==t&&(n.event.data=new l.b(t),123!==n.event.data.data[0]))throw new TypeError("data not a JSON object");const r=l.d(n);if(r.length>71680)throw new TypeError(`serialized event length=${r.length} exceeds max `+"length of 71680 bytes");return r}keyExchange1(e,t,n,r){return Object(a.default)(e instanceof Uint8Array,"id is invalid"),Object(a.default)(t instanceof Uint8Array,"spekePublicKey is invalid"),Object(a.default)("number"==typeof n,"maxAuthAttempts is invalid"),Object(a.default)(r instanceof Uint8Array,"passphrase is invalid"),l.d({keyExchange1:{id:e,spekePublicKey:t,maxAuthAttempts:n,passphrase:r}})}keyExchange2(e,t,n,r,i){return Object(a.default)(e instanceof Uint8Array,"id is invalid"),Object(a.default)("string"==typeof t&&t.length>0,"endpointId is invalid"),Object(a.default)(n instanceof Uint8Array,"spekePublicKey is invalid"),Object(a.default)(r instanceof Uint8Array,"encrypted is invalid"),Object(a.default)(i instanceof Uint8Array,"hmac is invalid"),l.d({keyExchange2:{id:e,endpointId:t,spekePublicKey:n,encrypted:r,hmac:i}})}keyExchange3(e,t,n,r){return Object(a.default)(e instanceof Uint8Array,"id is invalid"),Object(a.default)("string"==typeof t&&t.length>0,"endpointId is invalid"),Object(a.default)(n instanceof Uint8Array,"encrypted is invalid"),Object(a.default)(r instanceof Uint8Array,"hmac is invalid"),l.d({keyExchange3:{id:e,endpointId:t,encrypted:n,hmac:r}})}keyExchange4(e,t,n){return Object(a.default)(e instanceof Uint8Array,"id is invalid"),Object(a.default)(t instanceof Uint8Array,"encrypted is invalid"),Object(a.default)(n instanceof Uint8Array,"hmac is invalid"),l.d({keyExchange4:{id:e,encrypted:t,hmac:n}})}keyExchangeFailure(e,t){return Object(a.default)(e instanceof Uint8Array,"id is invalid"),Object(a.default)(m.KeyExchangeFailureReason.hasOwnProperty(t),"reason is invalid"),l.d({keyExchangeFailure:{id:e,reason:t}})}protectUser(e,t){var n=(t,n)=>s.userPrefix(this.regId,e,t,n);return Promise.all([this.keyManager.getPublicKeys(e),this.keyManager.getPrivateEncryptionKey()]).then(e=>s.generateSharedSecret(e[0].encrypt,e[1])).then(e=>y.call(this,t,e,n))}protectChat(e,t){var n=(t,n)=>s.chatPrefix(this.regId,d.encode(e),t,n);return this.keyManager.getChatKey(e).then(e=>y.call(this,t,e,n))}protectChatMetadata(e,t,n){try{const r=(e,t)=>s.chatPrefix(this.regId,new Uint8Array(0),e,t);var l=t=>y.call(this,e,t,r).then(e=>{const t=new i.a.AppData({regId:this.regId,data:g.a.base64Uint8Array(e)});return Object(c.default)(c.default.DEBUG1,"%s: Prepared server metadata=%s",h,t),t});return n?l(n):this.keyManager.getChatKey(t).then(l)}catch(e){return Promise.reject("Failed to protect metadata for chatId="+t+": "+e)}}unprotectUser(e,t){var n=(t,n)=>s.userPrefix(e,this.regId,t,n);return Promise.all([this.keyManager.getPublicKeys(e),this.keyManager.getPrivateEncryptionKey()]).then(e=>s.generateSharedSecret(e[0].encrypt,e[1])).then(l=>b.call(this,t,l,e,n,!0))}unprotectChat(e,t,n){var l=(n,l)=>s.chatPrefix(t,d.encode(e),n,l);return this.keyManager.getChatKey(e).then(e=>b.call(this,n,e,t,l))}unprotectChatMetadata(e,t,n){try{Object(c.default)(c.default.DEBUG1,"%s: Unprotecting server metadata=%s",h,t);const i=R(g.a.unbase64Array(t.data)),o=(e,n)=>s.chatPrefix(t.regId,new Uint8Array(0),e,n);return(void 0===n?this.keyManager.getChatKey(e):Promise.resolve(n)).then(e=>(Object(c.default)(c.default.DEBUG1,"%s: Decrypting 'protected' metadata=%s",h,l.e(i.body)),b.call(this,i.body,e,t.regId,o)))}catch(t){return Promise.reject(new r.Error("Failed to unprotect metadata for chatId="+e+": "+t))}}protectServerSubject(e,t){return this.protectChatMetadata(l.d({s:Object(u.truncate)(e,128)}),void 0,t)}unprotectServerSubject(e,t){let n;return e.subject?(Object(c.default)(c.default.DEBUG1,"%s: Unprotecting server mailbox subject from 'subject' field",h),n=this.unprotectChatMetadata(e.id,e.subject,t).then(e=>Object(u.truncate)(d.decode(l.c(e.data).s),128))):e.name?(Object(c.default)(c.default.DEBUG1,"%s: Unprotecting server mailbox subject from 'name' field",h),n=s.decodeAndDecryptMetadata(e.name,t).then(e=>Object(u.truncate)(e,128))):(Object(c.default)(c.default.DEBUG1,"%s: No subject fields in mailbox data",h),n=Promise.resolve(void 0)),n.catch(e=>{Object(c.default)(c.default.WARNING,"%s: Failed to unprotect server mailbox: %s",h,e)})}protectServerData(e,t){return this.protectChatMetadata(e,void 0,t)}unprotectServerData(e,t){return this.unprotectChatMetadata(e.id,e.data,t).then(e=>{if(0===e.data.length||123!==e.data[0])throw new r.Error("Application data is not an object");const t=l.c(e.data);return _(t),t}).catch(e=>{Object(c.default)(c.default.WARNING,"%s: Failed to unprotect server data: %s",h,e)})}protectServerPrivateData(e){return this.protectUser(this.regId,e)}unprotectServerPrivateData(e){return this.unprotectUser(this.regId,e.privateData).then(e=>{if(0===e.data.length||123!==e.data[0])throw new r.Error("Application private data is not an object");const t=l.c(e.data);return _(t),t}).catch(e=>{Object(c.default)(c.default.WARNING,"%s: Failed to unprotect server private data: %s",h,e)})}receive(e,t,n,r){try{return Object(c.default)(c.default.DEBUG2,"%s: Receiving message from m=%s M=%s r=%s d=%s",h,e,n,t,Object(u.array2hex)(r)),function e(t,n,r,i){try{const o=A(i);c.default.debug(c.default.DEBUG2,"%s: Parsed message from m=%s M=%s r=%s: %s",h,t,r,n,l.e(o));var s=t.startsWith("id.");if(s&&t!=="id."+this.regId)throw new TypeError("Ignoring "+v(o)+" received for unknown identity="+t);switch(o.name){case"protected":if("system"===n)throw new TypeError(`Ignoring ${v(o)} received from system`);return s?this.unprotectUser(n,o.body).then(s=>{if(c.default.debug(c.default.DEBUG2,"%s: Unprotected identity message from m=%s M=%s r=%s: %s",h,t,r,n,l.e(s)),!s.verified)throw new m.ProtectionError("unverified identity message",e.bind(this,t,n,r,i));const o=R(s.data);return o.verified=s.verified,c.default.debug(c.default.DEBUG2,"%s: Parsed message from m=%s M=%s r=%s: %s",h,t,r,n,l.e(o)),T.call(this,o,n)}).catch(s=>{if(Object(c.default)(c.default.ERROR,"%s: Failed to receive message from m=%s M=%s r=%s: %s",h,t,r,n,s),c.default.logErrorForDebugging(s),s instanceof l.a)throw new m.ProtectionError(s.message,e.bind(this,t,n,r,i));throw s}):this.unprotectChat(t,n,o.body).then(s=>{c.default.debug(c.default.DEBUG2,"%s: Unprotected chat message from m=%s M=%s r=%s: ",h,t,r,n,l.e(s));const o=R(s.data);return o.verified=!0===s.verified,o.verified||(o.retry=e.bind(this,t,n,r,i)),c.default.debug(c.default.DEBUG2,"%s: Parsed message from m=%s M=%s r=%s: %s",h,t,r,n,l.e(o)),w(o)}).catch(e=>{throw Object(c.default)(c.default.ERROR,"%s: Failed to receive message from m=%s M=%s r=%s: %s",h,t,r,n,e),c.default.logErrorForDebugging(e),e});default:if(!this.protectionRequired||"leave"===o.name||"restoreMarker"===o.name||"metadataChanged"===o.name||"appMessage"===o.name||"chatRemoved"===o.name&&"system"===n||"chatChanged"===o.name&&"system"===n)return Promise.resolve(s?T.call(this,o,n):w(o));throw new TypeError("Ignoring unprotected "+v(o)+"; protection is required")}}catch(e){return Object(c.default)(c.default.ERROR,"%s: Failed to receive message from m=%s M=%s r=%s: %s",h,t,r,n,e),c.default.logErrorForDebugging(e),Promise.reject(e)}}.call(this,e,t,n,l.c(r))}catch(e){return Object(c.default)(c.default.WARNING,"%s: Failed to decode JSON8: %s; data=%s",h,e,Object(u.array2hex)(r)),c.default.logErrorForDebugging(e),Promise.reject(e)}}}function y(e,t,n){const r=s.generateBytes(16),i=f,a=n(r,i);return f=o.a.getNextCounter(f),s.encrypt(e,a,r,s.encryptDiversifier,t).then(e=>this.keyManager.getPrivateSigningKey().then(t=>s.sign(a,e,t)).then(t=>l.d({protected:{nonce:r,counter:i,signature:{sValue:t.s,rValue:t.r},payload:e}})))}function b(e,t,n,l,r=!1){var i=l(e.nonce,e.counter);return this.keyManager.getPublicKeys(n).then(t=>s.verify({s:e.signature.sValue,r:e.signature.rValue},i,e.payload,t.sign)).then(n=>r&&!n?{data:new Uint8Array,verified:n}:s.decrypt(e.payload,i,e.nonce,s.encryptDiversifier,t).then(e=>({data:e,verified:n})))}function v(e){return`"${e.name}"`}function E(e,t,n){I(e,t,Uint8Array);const l=e.body[t];if(!n&&0===l.length)throw new TypeError(`${t} is empty in ${v(e)}`);try{e.body[t]=d.decode(l)}catch(n){throw new TypeError(`${t} could not be converted to a string in `+`${v(e)}; error=${n}`)}}function I(e,t,n,l=!1){const r=e.body[t];if(void 0===r){if(l)return;throw new TypeError(`${t} was not found in ${v(e)}`)}if(!(r instanceof n))throw new TypeError(`${t} is not an instance of ${n.name} in ${v(e)}`)}function S(e,t,n,l=!1){const r=e.body[t];if(void 0===r){if(l)return;throw new TypeError(`${t} was not found in ${v(e)}`)}if(typeof r!==n)throw new TypeError(`${t} is not a ${n} in ${v(e)}`)}function _(e){if(e&&"object"==typeof e)for(const t in e){const n=e[t];if(n instanceof Uint8Array)try{e[t]=d.decode(n)}catch(e){Object(c.default)(c.default.WARNING,"%s: Cannot convert property=%s to string: %s",h,t,e)}else _(n)}}function T(e,t){const n=()=>{if(this.regId!==t)throw new TypeError("Ignoring "+v(e)+" from unknown identity="+t)};switch(e.name){case"invite":E(e,"mailboxId"),E(e,"subject",!0),delete e.body.displayName;break;case"chatCreated":n.call(this),E(e,"endpointId"),E(e,"mailboxId"),e.body.subject&&E(e,"subject",!0),e.body.peer&&E({name:e.name,body:e.body.peer},"regId");break;case"chatRemoved":E(e,"mailboxId"),"system"!==t&&(I(e,"authCode",Uint8Array),I(e,"encryptedAuthCode",Uint8Array));break;case"chatLeft":n.call(this),E(e,"endpointId"),E(e,"mailboxId"),void 0===e.body.remove&&(e.body.remove=!1),S(e,"remove","boolean");break;case"chatChanged":if("system"!==t)throw new TypeError("Ignoring "+v(e)+" from unknown identity="+t);void 0!==e.body.changes&&E(e,"changes",!0),E(e,"mailboxId");break;case"restoreMarker":n.call(this),E(e,"endpointId");break;case"appMessage":if("system"!==t)throw new TypeError(`Ignoring ${v(e)} from unknown identity=${t}`);if(E(e,"id",!0),void 0===e.body.content)throw new TypeError(`content was not found in ${v(e)}`);if("object"!=typeof e.body.content||null===e.body.content||Array.isArray(e.body.content)||e.body.content instanceof Uint8Array)throw new TypeError(`content is not an object in ${v(e)}`);if(_(e.body.content),void 0===e.body.time)throw new TypeError(`time was not found in ${v(e)}`);if(!Number.isInteger(e.body.time))throw new TypeError(`time was not an integer in ${v(e)}`);break;case"keyExchange1":if(I(e,"id",Uint8Array),I(e,"spekePublicKey",Uint8Array),void 0===e.body.maxAuthAttempts)throw new TypeError(`maxAuthAttempts was not found in ${v(e)}`);if(!Number.isInteger(e.body.maxAuthAttempts))throw new TypeError(`maxAuthAttempts was not an integer in ${v(e)}`);I(e,"passphrase",Uint8Array);break;case"keyExchange2":I(e,"id",Uint8Array),E(e,"endpointId"),I(e,"spekePublicKey",Uint8Array),I(e,"encrypted",Uint8Array),I(e,"hmac",Uint8Array);break;case"keyExchange3":I(e,"id",Uint8Array),E(e,"endpointId"),I(e,"encrypted",Uint8Array),I(e,"hmac",Uint8Array);break;case"keyExchange4":I(e,"id",Uint8Array),I(e,"encrypted",Uint8Array),I(e,"hmac",Uint8Array);break;case"keyExchangeFailure":if(I(e,"id",Uint8Array),E(e,"reason"),!m.KeyExchangeFailureReason.hasOwnProperty(e.body.reason))throw new TypeError(`reason "${e.body.reason}" is not valid in ${v(e)}`);break;default:throw new TypeError(v(e)+" not expected in identity mailbox")}return e}function w(e){switch(e.name){case"content":if(E(e,"tag"),void 0!==e.body.content&&E(e,"content",!0),I(e,"thumb",Uint8Array,!0),void 0!==e.body.thumbName&&E(e,"thumbName",!0),void 0!==e.body.attach){I(e,"attach",Object);const t=e.body.attach,n={name:e.name,body:t};E(n,"url"),I(n,"key",Uint8Array),I(n,"hash",Uint8Array),t.name&&E(n,"name"),S(n,"size","number",!0)}if(void 0!==e.body.data&&("object"!=typeof e.body.data||null===e.body.data||Array.isArray(e.body.data))||e.body.data instanceof Uint8Array)throw new TypeError(`data is not an object in ${v(e)}`);if(_(e.body.data),e.body.ref){if(!(e.body.ref instanceof Array))throw new TypeError("ref field not an array in "+v(e));for(const t of e.body.ref)if(E({name:"ref",body:t},"tag",!0),I({name:"ref",body:{messageId:t.messageId}},"messageId",Uint8Array),0===t.messageId.length)throw new TypeError("ref messageId="+t.messageId+" must not be empty in "+v(e));0===e.body.ref.length&&delete e.body.ref}break;case"join":delete e.body.displayName;break;case"remove":E(e,"regId");break;case"status":if(!(void 0===e.body.d||e.body.d instanceof Uint8Array&&0!==e.body.d.length))throw new TypeError(v(e)+" has bad d="+JSON.stringify(e.body.d));if(!(void 0===e.body.r||e.body.r instanceof Uint8Array&&0!==e.body.r.length))throw new TypeError(v(e)+" has bad r="+JSON.stringify(e.body.r));break;case"subject":E(e,"subject",!0);break;case"shred":case"leave":e.body={};break;case"typing":e.body.tag?(E(e,"tag",!0),I(e,"messageId",Uint8Array,!0)):e.body.messageId&&delete e.body.messageId;break;case"recall":case"delete":I(e,"ids",Array),e.body.ids.forEach(t=>{if(!(t instanceof Uint8Array))throw new TypeError("ids in "+v(e)+" has element that is not a Uint8Array")});break;case"admin":S(e,"promotion","boolean"),E(e,"regId");break;case"metadataChanged":e.body.changes&&E(e,"changes",!0);break;case"event":if(E(e,"tag",!1),e.body.hasOwnProperty("data")){if("object"!=typeof e.body.data||null===e.body.data||Array.isArray(e.body.data)||e.body.data instanceof Uint8Array)throw new TypeError(`data is not a JSON object in ${v(e)}`);_(e.body.data)}else e.body.data=void 0;break;default:throw new TypeError(v(e)+" not expected in non-identity mailbox")}return e}function R(e){let t;try{t=l.c(e)}catch(t){throw Object(c.default)(c.default.WARNING,"%s: Failed to decode JSON8: %s; data=%s",h,t,Object(u.array2hex)(e)),c.default.logErrorForDebugging(t),t}return A(t)}function A(e){try{for(const t in e)return{name:t,body:e[t]};throw new l.a("Could not find message name")}catch(t){throw Object(c.default)(c.default.WARNING,"%s: Failed to decode message as RIM_IMv2: %s; data=%s",h,t,l.e(e)),c.default.logErrorForDebugging(t),t}}m.KeyExchangeFailureReason={GeneralFailure:"GeneralFailure",Cancelled:"Cancelled",AuthInvalid:"AuthInvalid",AuthFailed:"AuthFailed",AutoPassphraseRequired:"AutoPassphraseRequired"},Object.freeze(m.KeyExchangeFailureReason),m.ProtectionError=function(e,t){this.name=`${h}.ProtectionError`,this.message=e,this.retry=t,this.stack=(new Error).stack},m.ProtectionError.prototype=Object.create(Error.prototype)},function(e,t,n){"use strict";var l=Object.prototype.hasOwnProperty,r="~";function i(){}function s(e,t,n,l,i){if("function"!=typeof n)throw new TypeError("The listener must be a function");var s=new function(e,t,n){this.fn=e,this.context=t,this.once=n||!1}(n,l||e,i),o=r?r+t:t;return e._events[o]?e._events[o].fn?e._events[o]=[e._events[o],s]:e._events[o].push(s):(e._events[o]=s,e._eventsCount++),e}function o(e,t){0==--e._eventsCount?e._events=new i:delete e._events[t]}function a(){this._events=new i,this._eventsCount=0}Object.create&&(i.prototype=Object.create(null),(new i).__proto__||(r=!1)),a.prototype.eventNames=function(){var e,t,n=[];if(0===this._eventsCount)return n;for(t in e=this._events)l.call(e,t)&&n.push(r?t.slice(1):t);return Object.getOwnPropertySymbols?n.concat(Object.getOwnPropertySymbols(e)):n},a.prototype.listeners=function(e){var t=r?r+e:e,n=this._events[t];if(!n)return[];if(n.fn)return[n.fn];for(var l=0,i=n.length,s=new Array(i);l<i;l++)s[l]=n[l].fn;return s},a.prototype.listenerCount=function(e){var t=r?r+e:e,n=this._events[t];return n?n.fn?1:n.length:0},a.prototype.emit=function(e,t,n,l,i,s){var o=r?r+e:e;if(!this._events[o])return!1;var a,u,c=this._events[o],d=arguments.length;if(c.fn){switch(c.once&&this.removeListener(e,c.fn,void 0,!0),d){case 1:return c.fn.call(c.context),!0;case 2:return c.fn.call(c.context,t),!0;case 3:return c.fn.call(c.context,t,n),!0;case 4:return c.fn.call(c.context,t,n,l),!0;case 5:return c.fn.call(c.context,t,n,l,i),!0;case 6:return c.fn.call(c.context,t,n,l,i,s),!0}for(u=1,a=new Array(d-1);u<d;u++)a[u-1]=arguments[u];c.fn.apply(c.context,a)}else{var p,g=c.length;for(u=0;u<g;u++)switch(c[u].once&&this.removeListener(e,c[u].fn,void 0,!0),d){case 1:c[u].fn.call(c[u].context);break;case 2:c[u].fn.call(c[u].context,t);break;case 3:c[u].fn.call(c[u].context,t,n);break;case 4:c[u].fn.call(c[u].context,t,n,l);break;default:if(!a)for(p=1,a=new Array(d-1);p<d;p++)a[p-1]=arguments[p];c[u].fn.apply(c[u].context,a)}}return!0},a.prototype.on=function(e,t,n){return s(this,e,t,n,!1)},a.prototype.once=function(e,t,n){return s(this,e,t,n,!0)},a.prototype.removeListener=function(e,t,n,l){var i=r?r+e:e;if(!this._events[i])return this;if(!t)return o(this,i),this;var s=this._events[i];if(s.fn)s.fn!==t||l&&!s.once||n&&s.context!==n||o(this,i);else{for(var a=0,u=[],c=s.length;a<c;a++)(s[a].fn!==t||l&&!s[a].once||n&&s[a].context!==n)&&u.push(s[a]);u.length?this._events[i]=1===u.length?u[0]:u:o(this,i)}return this},a.prototype.removeAllListeners=function(e){var t;return e?(t=r?r+e:e,this._events[t]&&o(this,t)):(this._events=new i,this._eventsCount=0),this},a.prototype.off=a.prototype.removeListener,a.prototype.addListener=a.prototype.on,a.prefixed=r,a.EventEmitter=a,e.exports=a},function(e,t,n){"use strict";var l=n(72);e.exports=n(121)(l)},function(e,t,n){var l=n(52),r=l.Buffer;function i(e,t){for(var n in e)t[n]=e[n]}function s(e,t,n){return r(e,t,n)}r.from&&r.alloc&&r.allocUnsafe&&r.allocUnsafeSlow?e.exports=l:(i(l,t),t.Buffer=s),i(r,s),s.from=function(e,t,n){if("number"==typeof e)throw new TypeError("Argument must not be a number");return r(e,t,n)},s.alloc=function(e,t,n){if("number"!=typeof e)throw new TypeError("Argument must be a number");var l=r(e);return void 0!==t?"string"==typeof n?l.fill(t,n):l.fill(t):l.fill(0),l},s.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r(e)},s.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return l.SlowBuffer(e)}},function(e,t,n){"use strict";function l(e){if("object"==typeof e&&null!==e&&!Object.isFrozen(e)&&!ArrayBuffer.isView(e)||"function"==typeof e){Object.freeze(e);for(const t of Object.getOwnPropertyNames(e))l(e[t])}return e}n.d(t,"a",function(){return l})},function(e,t,n){"use strict";var l=n(1),r=n(3),i=n(2);function s(e,t){var n=this;Object(i.default)("function"==typeof e,"compareFunction must be a function"),Object(i.default)(void 0===t||Array.isArray(t),"storageArray must be an Array when defined");var l=e,o=t||[],a=o;Object.defineProperty(n,"size",{enumerable:!0,get:function(){return o.length}}),Object.defineProperty(n,"data",{enumerable:!0,get:function(){return a}}),n.insert=function(e,t){var l=n.getInsertPosition(e,t);return l.index>=o.length?(o.splice(o.length,0,e),{result:!0,index:o.length-1}):l.isDuplicate?{result:!1,index:l.index}:(o.splice(l.index,0,e),{result:!0,index:l.index})},n.replace=function(e,t){var l=n.getInsertPosition(e,t);return l.index>=o.length?(o.splice(o.length,0,e),{replaced:!1,index:o.length-1}):l.isDuplicate?(o.splice(l.index,1,e),{replaced:!0,index:l.index}):(o.splice(l.index,0,e),{replaced:!1,index:l.index})},n.union=function(e,t){Object(i.default)(e instanceof s,"The set parameter must be an instance of ArraySetAdapter");let l=[];if(0===e.size)return l;if(0===o.length)return Object(r.spliceArray)(o,o.length,0,e.data,0,e.data.length),e.data.slice();for(var a,u=0,c=e.size;u<c;){var d=n.getInsertPosition(e.data[u],a),p=0;if(d.index>=o.length)return Object(r.spliceArray)(o,o.length,p,e.data,u,e.data.length),Object(r.appendToArray)(l,e.data.slice(u)),l;var g=d.index;if(d.isDuplicate){if(!t){++u,a=d.index+1;continue}++p,++g}for(var h={index:u};;){if(g===o.length)return Object(r.spliceArray)(o,d.index,p,e.data,u,e.data.length),Object(r.appendToArray)(l,e.data.slice(u)),l;if(h=e.getInsertPosition(o[g],h.index),!t||!h.isDuplicate)break;++p,++g,++h.index}if(h.index>=e.data.length)return Object(r.spliceArray)(o,d.index,p,e.data,u,e.data.length),Object(r.appendToArray)(l,e.data.slice(u)),l;const i=Object(r.spliceArray)(o,d.index,p,e.data,u,h.index);Object(r.appendToArray)(l,e.data.slice(u,h.index)),u=h.index,a=d.index+i,h.isDuplicate&&++u}return l},n.upperBound=function(e){var t=n.getInsertPosition(e);return t.isDuplicate&&(Object(i.default)(t.index>=0&&t.index<o.length,"Invalid pos.index={0}; m_data.length={1}",t.index,o.length),++t.index),Object(i.default)(t.index>=0&&t.index<=o.length,"Invalid pos.index={0}; m_data.length={1}",t.index,o.length),t.index},n.erase=function(e,t){Object(i.default)(e>=0,"Invalid begin={0}; m_data.length={1}",e,o.length),Object(i.default)(t<=o.length,"Invalid end={0}; m_data.length={1}",t,o.length),Object(i.default)(e<=t,"Invalid range; begin={0} end={1}",e,t);var n=t-e;return Object(i.default)(n>=0&&n<=o.length,"Invalid count={0} removal; begin={1} m_data.length={2}",n,e,o.length),0===n?[]:o.splice(e,n)},n.getInsertPosition=function(e,t){return n.getPosition(e,l,t)},n.getPosition=function(e,t,n){var l,r=0,s=o.length-1;if(void 0!==n&&o.length>0&&0<=n&&n<=o.length){n===o.length&&(n=o.length-1);for(var a=[],u=0;u<2;++u){if(n<0)return{index:0,isDuplicate:!1};if(n===o.length)return{index:o.length,isDuplicate:!1};if(a.push({index:n,result:t(o[n],e)}),a[u].result<0)r=++n;else{if(!(a[u].result>0))return{index:n,isDuplicate:!0};s=--n}}if(Object(i.default)(2===a.length,"Expected 2 comparisons to be made; got {0}",a.length),a[0].result!==a[1].result)return{index:a[0].result>0?a[0].index:a[1].index,isDuplicate:!1}}for(;r<=s;){var c=t(o[l=(r+s)/2|0],e);if(c<0)r=l+1;else{if(!(c>0))return{index:l,isDuplicate:!0};s=l-1}}return{index:r,isDuplicate:!1}}}var o=n(0);n.d(t,"a",function(){return u});const a="Data.ChatMessages";function u(e){this._comparisonFunction=function(t,n){return e.getMessage(t).messageId.compare(e.getMessage(n).messageId)},this._data=new s(this._comparisonFunction,e.storageArray),this._lookupComparison=function(t,n){return e.getMessage(t).messageId.compare(n)},this._newMessage=e.newMessage,this._getMessage=e.getMessage,this._getMessages=e.getMessages,this._secondaryIndex=new Map,this._messageWatchers=new Map,Object.defineProperty(this,"length",{enumerable:!0,get:function(){return this._data.size}})}function c(e,t,n){const l=e._messageWatchers.get(t.toString());if(l)for(const e of l)try{e(n)}catch(e){Object(o.default)(o.default.ERROR,"%s: Error when attempting to notify for messageId=%s; error=%s",a,t,e)}}u.prototype.insertOne=function(e,t){let n;if(t){const r=this._secondaryIndex.get(t.toString());if(r){if(r.isLessThan(e.messageId))throw new l.DuplicateError("Could not insert message with messageId="+e.messageId+" due to existing secondaryId="+t);const i=this.getPosition(r);if(i.isDuplicate){n=this._getMessage(this._data.data[i.index]).deleted();const e=this._newMessage(n);this._data.replace(e,i),c(this,n.messageId,e)}}this._secondaryIndex.set(t.toString(),e.messageId)}return this.insert(e),n},u.prototype.insert=function(e,t){const n=this._newMessage(e);return this._data.insert(n,t).result?(c(this,e.messageId,n),u.InsertionResult.Inserted):u.InsertionResult.Rejected},u.prototype.replace=function(e,t){const n=this._newMessage(e),l=this._data.replace(n,t).replaced?u.InsertionResult.Updated:u.InsertionResult.Inserted;return c(this,e.messageId,n),l},u.prototype.union=function(e,t){const n=this._data.union(new s(this._comparisonFunction,e.map(this._newMessage)),t);for(const e of n)c(this,this._getMessage(e).messageId,e)},u.prototype.getPosition=function(e){return this._data.getPosition(e,this._lookupComparison)},u.prototype.isEmpty=function(){return!this._data.size},u.prototype.earliestMessageId=function(){return this._data.size?this._getMessage(this._data.data[0]).messageId:void 0},u.prototype.latestMessageId=function(){return this._data.size?this._getMessage(this._data.data[this._data.size-1]).messageId:void 0},u.prototype.latestMessage=function(){return this._data.size?this._getMessage(this._data.data[this._data.size-1]):void 0},u.prototype.getMessage=function(e){const t=this.getPosition(e);if(!1!==t.isDuplicate)return this.lookup(t.index)},u.prototype.lookup=function(e){var t=this._data.data[e];return t?this._getMessage(t):t},u.prototype.getMessages=function*(){for(let e of this._data.data[Symbol.iterator]())yield this._getMessage(e)},u.prototype.get=function(){return this._getMessages(this._data.data)},u.prototype.setWatcher=function(e,t){const n=this.getPosition(e);let l=this._messageWatchers.get(e.toString());if(l){if(l.has(t))return;l.add(t)}else this._messageWatchers.set(e.toString(),new Set([t]));if(n.isDuplicate)try{t(this._data.data[n.index])}catch(t){Object(o.default)(o.default.ERROR,"%s: Error when attempting to notify for messageId=%s; error=%s",a,e,t)}},u.prototype.unsetWatcher=function(e,t){const n=e.toString();let r=this._messageWatchers.get(n);if(!r)throw new l.NotFoundError("No matching callback to unwatch: msgId="+e);if(!r.has(t))throw new l.NotFoundError("No matching callback to unwatch: msgId="+e);r.delete(t),0===r.length&&this._messageWatchers.delete(n)},u.InsertionResult={Rejected:"Rejected",Updated:"Updated",Inserted:"Inserted"},Object.freeze(u.InsertionResult)},function(e,t){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},function(e,t,n){var l=n(27).Buffer;function r(e,t){this._block=l.alloc(e),this._finalSize=t,this._blockSize=e,this._len=0}r.prototype.update=function(e,t){"string"==typeof e&&(t=t||"utf8",e=l.from(e,t));for(var n=this._block,r=this._blockSize,i=e.length,s=this._len,o=0;o<i;){for(var a=s%r,u=Math.min(i-o,r-a),c=0;c<u;c++)n[a+c]=e[o+c];o+=u,(s+=u)%r==0&&this._update(n)}return this._len+=i,this},r.prototype.digest=function(e){var t=this._len%this._blockSize;this._block[t]=128,this._block.fill(0,t+1),t>=this._finalSize&&(this._update(this._block),this._block.fill(0));var n=8*this._len;if(n<=4294967295)this._block.writeUInt32BE(n,this._blockSize-4);else{var l=(4294967295&n)>>>0,r=(n-l)/4294967296;this._block.writeUInt32BE(r,this._blockSize-8),this._block.writeUInt32BE(l,this._blockSize-4)}this._update(this._block);var i=this._hash();return e?i.toString(e):i},r.prototype._update=function(){throw new Error("_update must be implemented by subclass")},e.exports=r},function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return r});var l=n(1);function r(e){return e instanceof l.TemporaryFailure||e instanceof l.PermanentFailure?new e.constructor:new l.PermanentFailure(e&&e.toString?e.toString():JSON.stringify(e))}},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";function l(){}n.d(t,"a",function(){return l}),Object.defineProperty(l,"min",{writable:!1,value:-2147483648}),Object.defineProperty(l,"max",{writable:!1,value:2147483647}),l.getNextCounter=function(e){return e>=l.max?l.min:0==++e?1:e}},function(e,t,n){"use strict";n.d(t,"a",function(){return r});var l=n(2);class r{constructor(e){Object(l.default)(void 0!==e),Object(l.default)("object"==typeof e.content),Object(l.default)("string"==typeof e.id),Object(l.default)("number"==typeof e.time),Object.defineProperty(this,"data",{value:e.content,enumerable:!0}),Object.defineProperty(this,"externalId",{value:e.id,enumerable:!0}),Object.defineProperty(this,"postTime",{value:new Date(e.time),enumerable:!0})}}},function(e,t,n){"use strict";e.exports=function(e){return new URL(e)}},function(e,t,n){!function(){var t=n(111),l=n(51).utf8,r=n(112),i=n(51).bin,s=function(e,n){e.constructor==String?e=n&&"binary"===n.encoding?i.stringToBytes(e):l.stringToBytes(e):r(e)?e=Array.prototype.slice.call(e,0):Array.isArray(e)||(e=e.toString());for(var o=t.bytesToWords(e),a=8*e.length,u=1732584193,c=-271733879,d=-1732584194,p=271733878,g=0;g<o.length;g++)o[g]=16711935&(o[g]<<8|o[g]>>>24)|4278255360&(o[g]<<24|o[g]>>>8);o[a>>>5]|=128<<a%32,o[14+(a+64>>>9<<4)]=a;var h=s._ff,f=s._gg,m=s._hh,y=s._ii;for(g=0;g<o.length;g+=16){var b=u,v=c,E=d,I=p;c=y(c=y(c=y(c=y(c=m(c=m(c=m(c=m(c=f(c=f(c=f(c=f(c=h(c=h(c=h(c=h(c,d=h(d,p=h(p,u=h(u,c,d,p,o[g+0],7,-680876936),c,d,o[g+1],12,-389564586),u,c,o[g+2],17,606105819),p,u,o[g+3],22,-1044525330),d=h(d,p=h(p,u=h(u,c,d,p,o[g+4],7,-176418897),c,d,o[g+5],12,1200080426),u,c,o[g+6],17,-1473231341),p,u,o[g+7],22,-45705983),d=h(d,p=h(p,u=h(u,c,d,p,o[g+8],7,1770035416),c,d,o[g+9],12,-1958414417),u,c,o[g+10],17,-42063),p,u,o[g+11],22,-1990404162),d=h(d,p=h(p,u=h(u,c,d,p,o[g+12],7,1804603682),c,d,o[g+13],12,-40341101),u,c,o[g+14],17,-1502002290),p,u,o[g+15],22,1236535329),d=f(d,p=f(p,u=f(u,c,d,p,o[g+1],5,-165796510),c,d,o[g+6],9,-1069501632),u,c,o[g+11],14,643717713),p,u,o[g+0],20,-373897302),d=f(d,p=f(p,u=f(u,c,d,p,o[g+5],5,-701558691),c,d,o[g+10],9,38016083),u,c,o[g+15],14,-660478335),p,u,o[g+4],20,-405537848),d=f(d,p=f(p,u=f(u,c,d,p,o[g+9],5,568446438),c,d,o[g+14],9,-1019803690),u,c,o[g+3],14,-187363961),p,u,o[g+8],20,1163531501),d=f(d,p=f(p,u=f(u,c,d,p,o[g+13],5,-1444681467),c,d,o[g+2],9,-51403784),u,c,o[g+7],14,1735328473),p,u,o[g+12],20,-1926607734),d=m(d,p=m(p,u=m(u,c,d,p,o[g+5],4,-378558),c,d,o[g+8],11,-2022574463),u,c,o[g+11],16,1839030562),p,u,o[g+14],23,-35309556),d=m(d,p=m(p,u=m(u,c,d,p,o[g+1],4,-1530992060),c,d,o[g+4],11,1272893353),u,c,o[g+7],16,-155497632),p,u,o[g+10],23,-1094730640),d=m(d,p=m(p,u=m(u,c,d,p,o[g+13],4,681279174),c,d,o[g+0],11,-358537222),u,c,o[g+3],16,-722521979),p,u,o[g+6],23,76029189),d=m(d,p=m(p,u=m(u,c,d,p,o[g+9],4,-640364487),c,d,o[g+12],11,-421815835),u,c,o[g+15],16,530742520),p,u,o[g+2],23,-995338651),d=y(d,p=y(p,u=y(u,c,d,p,o[g+0],6,-198630844),c,d,o[g+7],10,1126891415),u,c,o[g+14],15,-1416354905),p,u,o[g+5],21,-57434055),d=y(d,p=y(p,u=y(u,c,d,p,o[g+12],6,1700485571),c,d,o[g+3],10,-1894986606),u,c,o[g+10],15,-1051523),p,u,o[g+1],21,-2054922799),d=y(d,p=y(p,u=y(u,c,d,p,o[g+8],6,1873313359),c,d,o[g+15],10,-30611744),u,c,o[g+6],15,-1560198380),p,u,o[g+13],21,1309151649),d=y(d,p=y(p,u=y(u,c,d,p,o[g+4],6,-145523070),c,d,o[g+11],10,-1120210379),u,c,o[g+2],15,718787259),p,u,o[g+9],21,-343485551),u=u+b>>>0,c=c+v>>>0,d=d+E>>>0,p=p+I>>>0}return t.endian([u,c,d,p])};s._ff=function(e,t,n,l,r,i,s){var o=e+(t&n|~t&l)+(r>>>0)+s;return(o<<i|o>>>32-i)+t},s._gg=function(e,t,n,l,r,i,s){var o=e+(t&l|n&~l)+(r>>>0)+s;return(o<<i|o>>>32-i)+t},s._hh=function(e,t,n,l,r,i,s){var o=e+(t^n^l)+(r>>>0)+s;return(o<<i|o>>>32-i)+t},s._ii=function(e,t,n,l,r,i,s){var o=e+(n^(t|~l))+(r>>>0)+s;return(o<<i|o>>>32-i)+t},s._blocksize=16,s._digestsize=16,e.exports=function(e,n){if(void 0===e||null===e)throw new Error("Illegal argument "+e);var l=t.wordsToBytes(s(e,n));return n&&n.asBytes?l:n&&n.asString?i.bytesToString(l):t.bytesToHex(l)}}()},function(e,t,n){(function(e){var n,l=function(e){"use strict";var t=1e7,n=7,r=9007199254740992,i=d(r),s=Math.log(r);function o(e,t){return void 0===e?o[0]:void 0!==t?10==+t?K(e):q(e,t):K(e)}function a(e,t){this.value=e,this.sign=t,this.isSmall=!1}function u(e){this.value=e,this.sign=e<0,this.isSmall=!0}function c(e){return-r<e&&e<r}function d(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function p(e){g(e);var n=e.length;if(n<4&&O(e,i)<0)switch(n){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*t;default:return e[0]+(e[1]+e[2]*t)*t}return e}function g(e){for(var t=e.length;0===e[--t];);e.length=t+1}function h(e){for(var t=new Array(e),n=-1;++n<e;)t[n]=0;return t}function f(e){return e>0?Math.floor(e):Math.ceil(e)}function m(e,n){var l,r,i=e.length,s=n.length,o=new Array(i),a=0,u=t;for(r=0;r<s;r++)a=(l=e[r]+n[r]+a)>=u?1:0,o[r]=l-a*u;for(;r<i;)a=(l=e[r]+a)===u?1:0,o[r++]=l-a*u;return a>0&&o.push(a),o}function y(e,t){return e.length>=t.length?m(e,t):m(t,e)}function b(e,n){var l,r,i=e.length,s=new Array(i),o=t;for(r=0;r<i;r++)l=e[r]-o+n,n=Math.floor(l/o),s[r]=l-n*o,n+=1;for(;n>0;)s[r++]=n%o,n=Math.floor(n/o);return s}function v(e,n){var l,r,i=e.length,s=n.length,o=new Array(i),a=0,u=t;for(l=0;l<s;l++)(r=e[l]-a-n[l])<0?(r+=u,a=1):a=0,o[l]=r;for(l=s;l<i;l++){if(!((r=e[l]-a)<0)){o[l++]=r;break}r+=u,o[l]=r}for(;l<i;l++)o[l]=e[l];return g(o),o}function E(e,n,l){var r,i,s=e.length,o=new Array(s),c=-n,d=t;for(r=0;r<s;r++)i=e[r]+c,c=Math.floor(i/d),i%=d,o[r]=i<0?i+d:i;return"number"==typeof(o=p(o))?(l&&(o=-o),new u(o)):new a(o,l)}function I(e,n){var l,r,i,s,o=e.length,a=n.length,u=h(o+a),c=t;for(i=0;i<o;++i){s=e[i];for(var d=0;d<a;++d)l=s*n[d]+u[i+d],r=Math.floor(l/c),u[i+d]=l-r*c,u[i+d+1]+=r}return g(u),u}function S(e,n){var l,r,i=e.length,s=new Array(i),o=t,a=0;for(r=0;r<i;r++)l=e[r]*n+a,a=Math.floor(l/o),s[r]=l-a*o;for(;a>0;)s[r++]=a%o,a=Math.floor(a/o);return s}function _(e,t){for(var n=[];t-- >0;)n.push(0);return n.concat(e)}function T(e,n,l){return new a(e<t?S(n,e):I(n,d(e)),l)}function w(e){var n,l,r,i,s=e.length,o=h(s+s),a=t;for(r=0;r<s;r++){l=0-(i=e[r])*i;for(var u=r;u<s;u++)n=i*e[u]*2+o[r+u]+l,l=Math.floor(n/a),o[r+u]=n-l*a;o[r+s]=l}return g(o),o}function R(e,n){var l,r,i,s,o=e.length,a=h(o),u=t;for(i=0,l=o-1;l>=0;--l)i=(s=i*u+e[l])-(r=f(s/n))*n,a[l]=0|r;return[a,0|i]}function A(e,n){var l,r,i=K(n),s=e.value,c=i.value;if(0===c)throw new Error("Cannot divide by zero");if(e.isSmall)return i.isSmall?[new u(f(s/c)),new u(s%c)]:[o[0],e];if(i.isSmall){if(1===c)return[e,o[0]];if(-1==c)return[e.negate(),o[0]];var m=Math.abs(c);if(m<t){r=p((l=R(s,m))[0]);var y=l[1];return e.sign&&(y=-y),"number"==typeof r?(e.sign!==i.sign&&(r=-r),[new u(r),new u(y)]):[new a(r,e.sign!==i.sign),new u(y)]}c=d(m)}var b=O(s,c);if(-1===b)return[o[0],e];if(0===b)return[o[e.sign===i.sign?1:-1],o[0]];r=(l=s.length+c.length<=200?function(e,n){var l,r,i,s,o,a,u,c=e.length,d=n.length,g=t,f=h(n.length),m=n[d-1],y=Math.ceil(g/(2*m)),b=S(e,y),v=S(n,y);for(b.length<=c&&b.push(0),v.push(0),m=v[d-1],r=c-d;r>=0;r--){for(l=g-1,b[r+d]!==m&&(l=Math.floor((b[r+d]*g+b[r+d-1])/m)),i=0,s=0,a=v.length,o=0;o<a;o++)i+=l*v[o],u=Math.floor(i/g),s+=b[r+o]-(i-u*g),i=u,s<0?(b[r+o]=s+g,s=-1):(b[r+o]=s,s=0);for(;0!==s;){for(l-=1,i=0,o=0;o<a;o++)(i+=b[r+o]-g+v[o])<0?(b[r+o]=i+g,i=0):(b[r+o]=i,i=1);s+=i}f[r]=l}return b=R(b,y)[0],[p(f),p(b)]}(s,c):function(e,n){for(var l,r,i,s,o,a=e.length,u=n.length,c=[],d=[],h=t;a;)if(d.unshift(e[--a]),g(d),O(d,n)<0)c.push(0);else{i=d[(r=d.length)-1]*h+d[r-2],s=n[u-1]*h+n[u-2],r>u&&(i=(i+1)*h),l=Math.ceil(i/s);do{if(O(o=S(n,l),d)<=0)break;l--}while(l);c.push(l),d=v(d,o)}return c.reverse(),[p(c),p(d)]}(s,c))[0];var E=e.sign!==i.sign,I=l[1],_=e.sign;return"number"==typeof r?(E&&(r=-r),r=new u(r)):r=new a(r,E),"number"==typeof I?(_&&(I=-I),I=new u(I)):I=new a(I,_),[r,I]}function O(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var n=e.length-1;n>=0;n--)if(e[n]!==t[n])return e[n]>t[n]?1:-1;return 0}function C(e){var t=e.abs();return!t.isUnit()&&(!!(t.equals(2)||t.equals(3)||t.equals(5))||!(t.isEven()||t.isDivisibleBy(3)||t.isDivisibleBy(5))&&(!!t.lesser(49)||void 0))}function M(e,t){for(var n,r,i,s=e.prev(),a=s,u=0;a.isEven();)a=a.divide(2),u++;e:for(r=0;r<t.length;r++)if(!e.lesser(t[r])&&!(i=l(t[r]).modPow(a,e)).equals(o[1])&&!i.equals(s)){for(n=u-1;0!=n;n--){if((i=i.square().mod(e)).isUnit())return!1;if(i.equals(s))continue e}return!1}return!0}a.prototype=Object.create(o.prototype),u.prototype=Object.create(o.prototype),a.prototype.add=function(e){var t=K(e);if(this.sign!==t.sign)return this.subtract(t.negate());var n=this.value,l=t.value;return t.isSmall?new a(b(n,Math.abs(l)),this.sign):new a(y(n,l),this.sign)},a.prototype.plus=a.prototype.add,u.prototype.add=function(e){var t=K(e),n=this.value;if(n<0!==t.sign)return this.subtract(t.negate());var l=t.value;if(t.isSmall){if(c(n+l))return new u(n+l);l=d(Math.abs(l))}return new a(b(l,Math.abs(n)),n<0)},u.prototype.plus=u.prototype.add,a.prototype.subtract=function(e){var t=K(e);if(this.sign!==t.sign)return this.add(t.negate());var n=this.value,l=t.value;return t.isSmall?E(n,Math.abs(l),this.sign):function(e,t,n){var l;return O(e,t)>=0?l=v(e,t):(l=v(t,e),n=!n),"number"==typeof(l=p(l))?(n&&(l=-l),new u(l)):new a(l,n)}(n,l,this.sign)},a.prototype.minus=a.prototype.subtract,u.prototype.subtract=function(e){var t=K(e),n=this.value;if(n<0!==t.sign)return this.add(t.negate());var l=t.value;return t.isSmall?new u(n-l):E(l,Math.abs(n),n>=0)},u.prototype.minus=u.prototype.subtract,a.prototype.negate=function(){return new a(this.value,!this.sign)},u.prototype.negate=function(){var e=this.sign,t=new u(-this.value);return t.sign=!e,t},a.prototype.abs=function(){return new a(this.value,!1)},u.prototype.abs=function(){return new u(Math.abs(this.value))},a.prototype.multiply=function(e){var n,l=K(e),r=this.value,i=l.value,s=this.sign!==l.sign;if(l.isSmall){if(0===i)return o[0];if(1===i)return this;if(-1===i)return this.negate();if((n=Math.abs(i))<t)return new a(S(r,n),s);i=d(n)}return function(e,t){return-.012*e-.012*t+15e-6*e*t>0}(r.length,i.length)?new a(function e(t,n){var l=Math.max(t.length,n.length);if(l<=30)return I(t,n);l=Math.ceil(l/2);var r=t.slice(l),i=t.slice(0,l),s=n.slice(l),o=n.slice(0,l),a=e(i,o),u=e(r,s),c=y(y(a,_(v(v(e(y(i,r),y(o,s)),a),u),l)),_(u,2*l));return g(c),c}(r,i),s):new a(I(r,i),s)},a.prototype.times=a.prototype.multiply,u.prototype._multiplyBySmall=function(e){return c(e.value*this.value)?new u(e.value*this.value):T(Math.abs(e.value),d(Math.abs(this.value)),this.sign!==e.sign)},a.prototype._multiplyBySmall=function(e){return 0===e.value?o[0]:1===e.value?this:-1===e.value?this.negate():T(Math.abs(e.value),this.value,this.sign!==e.sign)},u.prototype.multiply=function(e){return K(e)._multiplyBySmall(this)},u.prototype.times=u.prototype.multiply,a.prototype.square=function(){return new a(w(this.value),!1)},u.prototype.square=function(){var e=this.value*this.value;return c(e)?new u(e):new a(w(d(Math.abs(this.value))),!1)},a.prototype.divmod=function(e){var t=A(this,e);return{quotient:t[0],remainder:t[1]}},u.prototype.divmod=a.prototype.divmod,a.prototype.divide=function(e){return A(this,e)[0]},u.prototype.over=u.prototype.divide=a.prototype.over=a.prototype.divide,a.prototype.mod=function(e){return A(this,e)[1]},u.prototype.remainder=u.prototype.mod=a.prototype.remainder=a.prototype.mod,a.prototype.pow=function(e){var t,n,l,r=K(e),i=this.value,s=r.value;if(0===s)return o[1];if(0===i)return o[0];if(1===i)return o[1];if(-1===i)return r.isEven()?o[1]:o[-1];if(r.sign)return o[0];if(!r.isSmall)throw new Error("The exponent "+r.toString()+" is too large.");if(this.isSmall&&c(t=Math.pow(i,s)))return new u(f(t));for(n=this,l=o[1];!0&s&&(l=l.times(n),--s),0!==s;)s/=2,n=n.square();return l},u.prototype.pow=a.prototype.pow,a.prototype.modPow=function(e,t){if(e=K(e),(t=K(t)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var n=o[1],l=this.mod(t);e.isPositive();){if(l.isZero())return o[0];e.isOdd()&&(n=n.multiply(l).mod(t)),e=e.divide(2),l=l.square().mod(t)}return n},u.prototype.modPow=a.prototype.modPow,a.prototype.compareAbs=function(e){var t=K(e),n=this.value,l=t.value;return t.isSmall?1:O(n,l)},u.prototype.compareAbs=function(e){var t=K(e),n=Math.abs(this.value),l=t.value;return t.isSmall?n===(l=Math.abs(l))?0:n>l?1:-1:-1},a.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=K(e),n=this.value,l=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:O(n,l)*(this.sign?-1:1)},a.prototype.compareTo=a.prototype.compare,u.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=K(e),n=this.value,l=t.value;return t.isSmall?n==l?0:n>l?1:-1:n<0!==t.sign?n<0?-1:1:n<0?1:-1},u.prototype.compareTo=u.prototype.compare,a.prototype.equals=function(e){return 0===this.compare(e)},u.prototype.eq=u.prototype.equals=a.prototype.eq=a.prototype.equals,a.prototype.notEquals=function(e){return 0!==this.compare(e)},u.prototype.neq=u.prototype.notEquals=a.prototype.neq=a.prototype.notEquals,a.prototype.greater=function(e){return this.compare(e)>0},u.prototype.gt=u.prototype.greater=a.prototype.gt=a.prototype.greater,a.prototype.lesser=function(e){return this.compare(e)<0},u.prototype.lt=u.prototype.lesser=a.prototype.lt=a.prototype.lesser,a.prototype.greaterOrEquals=function(e){return this.compare(e)>=0},u.prototype.geq=u.prototype.greaterOrEquals=a.prototype.geq=a.prototype.greaterOrEquals,a.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},u.prototype.leq=u.prototype.lesserOrEquals=a.prototype.leq=a.prototype.lesserOrEquals,a.prototype.isEven=function(){return 0==(1&this.value[0])},u.prototype.isEven=function(){return 0==(1&this.value)},a.prototype.isOdd=function(){return 1==(1&this.value[0])},u.prototype.isOdd=function(){return 1==(1&this.value)},a.prototype.isPositive=function(){return!this.sign},u.prototype.isPositive=function(){return this.value>0},a.prototype.isNegative=function(){return this.sign},u.prototype.isNegative=function(){return this.value<0},a.prototype.isUnit=function(){return!1},u.prototype.isUnit=function(){return 1===Math.abs(this.value)},a.prototype.isZero=function(){return!1},u.prototype.isZero=function(){return 0===this.value},a.prototype.isDivisibleBy=function(e){var t=K(e),n=t.value;return 0!==n&&(1===n||(2===n?this.isEven():this.mod(t).equals(o[0])))},u.prototype.isDivisibleBy=a.prototype.isDivisibleBy,a.prototype.isPrime=function(e){var t=C(this);if(void 0!==t)return t;var n=this.abs(),r=n.bitLength();if(r<=64)return M(n,[2,325,9375,28178,450775,9780504,1795265022]);for(var i=Math.log(2)*r,s=Math.ceil(!0===e?2*Math.pow(i,2):i),o=[],a=0;a<s;a++)o.push(l(a+2));return M(n,o)},u.prototype.isPrime=a.prototype.isPrime,a.prototype.isProbablePrime=function(e){var t=C(this);if(void 0!==t)return t;for(var n=this.abs(),r=void 0===e?5:e,i=[],s=0;s<r;s++)i.push(l.randBetween(2,n.minus(2)));return M(n,i)},u.prototype.isProbablePrime=a.prototype.isProbablePrime,a.prototype.modInv=function(e){for(var t,n,r,i=l.zero,s=l.one,o=K(e),a=this.abs();!a.equals(l.zero);)t=o.divide(a),n=i,r=o,i=s,o=a,s=n.subtract(t.multiply(s)),a=r.subtract(t.multiply(a));if(!o.equals(1))throw new Error(this.toString()+" and "+e.toString()+" are not co-prime");return-1===i.compare(0)&&(i=i.add(e)),this.isNegative()?i.negate():i},u.prototype.modInv=a.prototype.modInv,a.prototype.next=function(){var e=this.value;return this.sign?E(e,1,this.sign):new a(b(e,1),this.sign)},u.prototype.next=function(){var e=this.value;return e+1<r?new u(e+1):new a(i,!1)},a.prototype.prev=function(){var e=this.value;return this.sign?new a(b(e,1),!0):E(e,1,this.sign)},u.prototype.prev=function(){var e=this.value;return e-1>-r?new u(e-1):new a(i,!0)};for(var P=[1];2*P[P.length-1]<=t;)P.push(2*P[P.length-1]);var j=P.length,D=P[j-1];function x(e){return("number"==typeof e||"string"==typeof e)&&+Math.abs(e)<=t||e instanceof a&&e.value.length<=1}function N(e,t,n){t=K(t);for(var r=e.isNegative(),i=t.isNegative(),s=r?e.not():e,o=i?t.not():t,a=0,u=0,c=null,d=null,p=[];!s.isZero()||!o.isZero();)a=(c=A(s,D))[1].toJSNumber(),r&&(a=D-1-a),u=(d=A(o,D))[1].toJSNumber(),i&&(u=D-1-u),s=c[0],o=d[0],p.push(n(a,u));for(var g=0!==n(r?1:0,i?1:0)?l(-1):l(0),h=p.length-1;h>=0;h-=1)g=g.multiply(D).add(l(p[h]));return g}a.prototype.shiftLeft=function(e){if(!x(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;for(;e>=j;)t=t.multiply(D),e-=j-1;return t.multiply(P[e])},u.prototype.shiftLeft=a.prototype.shiftLeft,a.prototype.shiftRight=function(e){var t;if(!x(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftLeft(-e);for(var n=this;e>=j;){if(n.isZero()||n.isNegative()&&n.isUnit())return n;n=(t=A(n,D))[1].isNegative()?t[0].prev():t[0],e-=j-1}return(t=A(n,P[e]))[1].isNegative()?t[0].prev():t[0]},u.prototype.shiftRight=a.prototype.shiftRight,a.prototype.not=function(){return this.negate().prev()},u.prototype.not=a.prototype.not,a.prototype.and=function(e){return N(this,e,function(e,t){return e&t})},u.prototype.and=a.prototype.and,a.prototype.or=function(e){return N(this,e,function(e,t){return e|t})},u.prototype.or=a.prototype.or,a.prototype.xor=function(e){return N(this,e,function(e,t){return e^t})},u.prototype.xor=a.prototype.xor;var U=1<<30,F=(t&-t)*(t&-t)|U;function k(e){var n=e.value,l="number"==typeof n?n|U:n[0]+n[1]*t|F;return l&-l}function B(e,t){return e=K(e),t=K(t),e.greater(t)?e:t}function L(e,t){return e=K(e),t=K(t),e.lesser(t)?e:t}function $(e,t){if(e=K(e).abs(),t=K(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;for(var n,l,r=o[1];e.isEven()&&t.isEven();)n=Math.min(k(e),k(t)),e=e.divide(n),t=t.divide(n),r=r.multiply(n);for(;e.isEven();)e=e.divide(k(e));do{for(;t.isEven();)t=t.divide(k(t));e.greater(t)&&(l=t,t=e,e=l),t=t.subtract(e)}while(!t.isZero());return r.isUnit()?e:e.multiply(r)}a.prototype.bitLength=function(){var e=this;return e.compareTo(l(0))<0&&(e=e.negate().subtract(l(1))),0===e.compareTo(l(0))?l(0):l(function e(t,n){if(n.compareTo(t)<=0){var r=e(t,n.square(n)),i=r.p,s=r.e,o=i.multiply(n);return o.compareTo(t)<=0?{p:o,e:2*s+1}:{p:i,e:2*s}}return{p:l(1),e:0}}(e,l(2)).e).add(l(1))},u.prototype.bitLength=a.prototype.bitLength;var q=function(e,t){for(var n=e.length,l=Math.abs(t),r=0;r<n;r++){if("-"!==(c=e[r].toLowerCase())&&/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=l){if("1"===c&&1===l)continue;throw new Error(c+" is not a valid digit in base "+t+".")}if(c.charCodeAt(0)-87>=l)throw new Error(c+" is not a valid digit in base "+t+".")}}if(2<=t&&t<=36&&n<=s/Math.log(t)){var i=parseInt(e,t);if(isNaN(i))throw new Error(c+" is not a valid digit in base "+t+".");return new u(parseInt(e,t))}t=K(t);var o=[],a="-"===e[0];for(r=a?1:0;r<e.length;r++){var c,d=(c=e[r].toLowerCase()).charCodeAt(0);if(48<=d&&d<=57)o.push(K(c));else if(97<=d&&d<=122)o.push(K(c.charCodeAt(0)-87));else{if("<"!==c)throw new Error(c+" is not a valid character");var p=r;do{r++}while(">"!==e[r]);o.push(K(e.slice(p+1,r)))}}return H(o,t,a)};function H(e,t,n){var l,r=o[0],i=o[1];for(l=e.length-1;l>=0;l--)r=r.add(e[l].times(i)),i=i.times(t);return n?r.negate():r}function W(e){return e<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(e):"<"+e+">"}function X(e,t){if((t=l(t)).isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var n=Array.apply(null,Array(+e-1)).map(Array.prototype.valueOf,[0,1]);return n.unshift([1]),{value:[].concat.apply([],n),isNegative:!1}}var r=!1;if(e.isNegative()&&t.isPositive()&&(r=!0,e=e.abs()),t.equals(1))return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+e)).map(Number.prototype.valueOf,1),isNegative:r};for(var i,s=[],o=e;o.isNegative()||o.compareAbs(t)>=0;){o=(i=o.divmod(t)).quotient;var a=i.remainder;a.isNegative()&&(a=t.minus(a).abs(),o=o.next()),s.push(a.toJSNumber())}return s.push(o.toJSNumber()),{value:s.reverse(),isNegative:r}}function G(e,t){var n=X(e,t);return(n.isNegative?"-":"")+n.value.map(W).join("")}function V(e){if(c(+e)){var t=+e;if(t===f(t))return new u(t);throw new Error("Invalid integer: "+e)}var l="-"===e[0];l&&(e=e.slice(1));var r=e.split(/e/i);if(r.length>2)throw new Error("Invalid integer: "+r.join("e"));if(2===r.length){var i=r[1];if("+"===i[0]&&(i=i.slice(1)),(i=+i)!==f(i)||!c(i))throw new Error("Invalid integer: "+i+" is not a valid exponent.");var s=r[0],o=s.indexOf(".");if(o>=0&&(i-=s.length-o-1,s=s.slice(0,o)+s.slice(o+1)),i<0)throw new Error("Cannot include negative exponent part for integers");e=s+=new Array(i+1).join("0")}if(!/^([0-9][0-9]*)$/.test(e))throw new Error("Invalid integer: "+e);for(var d=[],p=e.length,h=n,m=p-h;p>0;)d.push(+e.slice(m,p)),(m-=h)<0&&(m=0),p-=h;return g(d),new a(d,l)}function K(e){return"number"==typeof e?function(e){if(c(e)){if(e!==f(e))throw new Error(e+" is not an integer.");return new u(e)}return V(e.toString())}(e):"string"==typeof e?V(e):e}a.prototype.toArray=function(e){return X(this,e)},u.prototype.toArray=function(e){return X(this,e)},a.prototype.toString=function(e){if(void 0===e&&(e=10),10!==e)return G(this,e);for(var t,n=this.value,l=n.length,r=String(n[--l]);--l>=0;)t=String(n[l]),r+="0000000".slice(t.length)+t;return(this.sign?"-":"")+r},u.prototype.toString=function(e){return void 0===e&&(e=10),10!=e?G(this,e):String(this.value)},a.prototype.toJSON=u.prototype.toJSON=function(){return this.toString()},a.prototype.valueOf=function(){return parseInt(this.toString(),10)},a.prototype.toJSNumber=a.prototype.valueOf,u.prototype.valueOf=function(){return this.value},u.prototype.toJSNumber=u.prototype.valueOf;for(var z=0;z<1e3;z++)o[z]=new u(z),z>0&&(o[-z]=new u(-z));return o.one=o[1],o.zero=o[0],o.minusOne=o[-1],o.max=B,o.min=L,o.gcd=$,o.lcm=function(e,t){return e=K(e).abs(),t=K(t).abs(),e.divide($(e,t)).multiply(t)},o.isInstance=function(e){return e instanceof a||e instanceof u},o.randBetween=function(e,n){var l=L(e=K(e),n=K(n)),r=B(e,n).subtract(l).add(1);if(r.isSmall)return l.add(Math.floor(Math.random()*r));for(var i=[],s=!0,o=r.value.length-1;o>=0;o--){var c=s?r.value[o]:t,d=f(Math.random()*c);i.unshift(d),d<c&&(s=!1)}return i=p(i),l.add("number"==typeof i?new u(i):new a(i,!1))},o.fromArray=function(e,t,n){return H(e.map(K),K(t||10),n)},o}();void 0!==e&&e.hasOwnProperty("exports")&&(e.exports=l),void 0===(n=function(){return l}.apply(t,[]))||(e.exports=n)}).call(this,n(67)(e))},function(e,t,n){e.exports=function(e,t){"use strict";var l=n(12).SIP,r=n(12).Limits,i=n(12).CallEndReason,s=n(12).CallEndCause,o=n(12).SipStatusCode,a=n(12).Timeouts,u=n(12).CallState,c=n(57),d=n(40)(e,t),p=n(124)(),g=function(e,t,n){this.audio=!0,this.video=e,this.remoteRender=t,this.localRender=n,this.recovery=!1,this.data=!1,this.disabledFeatures=[],this.disabledHeaders=[],this.extraFeatures=[]};g.update=function(e,t){var n=e||t;return n.audio=t.audio,n.video=t.video,n.data=t.data,n.remoteRender=t.remoteRender,n.localRender=t.localRender,n.disabledFeatures=d.removeDuplicateInArray(n.disabledFeatures.concat(t.disabledFeatures)),n.disabledHeaders=d.removeDuplicateInArray(n.disabledHeaders.concat(t.disabledHeaders)),n.extraFeatures=d.removeDuplicateInArray(n.extraFeatures.concat(t.extraFeatures)),n},g.prototype.toMediaOptions=function(){return{media:{constraints:{audio:this.audio,video:this.video},render:{remote:this.recovery?null:this.remoteRender,local:this.recovery?null:this.localRender},dataChannel:this.data?{}:void 0}}},g.prototype.clone=function(){var e=new g(this.video,this.remoteRender,this.localRender);return e.audio=this.audio,e.data=this.data,e.disabledFeatures=this.disabledFeatures,e.disabledHeaders=this.disabledHeaders,e.extraFeatures=this.extraFeatures,e};var h=function(e,t,n){this.audio=e,this.video=t,this.data=!!n};function f(e,t){var n=new h(!1,!1);return e[t]?(e[t]().some(function(e){return n.audio=e.getAudioTracks().some(function(e){return"live"===e.readyState||"muted"===e.readyState}),n.video=e.getVideoTracks().some(function(e){return"live"===e.readyState||"muted"===e.readyState}),!1}),e.mediaHandler&&(n.data=!!e.mediaHandler.dataChannel),n):n}function m(e){e.recoveryTimer&&(t.SIP.Timers.clearTimeout(e.recoveryTimer),e.recoveryTimer=null),e.iceConnectionTimer&&(t.SIP.Timers.clearTimeout(e.iceConnectionTimer),e.iceConnectionTimer=null)}var y=function(n,i,g,h){var f=this;function y(e){f.remoteFeatures=d.getFeatures(e),f.commonFeatures=d.commonFeatures(f,f.remoteFeatures),f.commonFeatures.indexOf(l.FEATURES.EARLY_ICE)>-1?f.sipContext.supportBlackBerryEarlyIce=!0:f.sipContext.supportBlackBerryEarlyIce=!1}this.callOptions=h,this.sipContext=i,this.vvoip=g,this.callParty=n,this.callId=d.getCallId(i),this.iceCompleted=!1,this.lastRemoteMedia=this.remoteMedia(),this.timeInit=Date.now(),this.sessionId=d.getSipSessionId(i),this.prevCallId=d.getPrevCallId(i),f.metaData=d.getMetaData(i),this.outgoing=!1,this.state=u.CALL_STATE_INITIATED,this.setMaxListeners&&this.setMaxListeners(r.MAX_EVENT_LISTENERS),Object.defineProperty(this,"features",{enumerable:!0,get:function(){return this.callOptions?d.defaultFeatures(this.callOptions.disabledFeatures,this.callOptions.extraFeatures):d.defaultFeatures()}}),n.isCallee()?this.outgoing=!0:y(i),this.handleIceConnection=function(e,n){function l(){m(e),d.endCall(e,0,e.vvoip.transport.isConnected()?s.CALL_FAILURE_NOMEDIA:s.CALL_END_NETWORKUNAVAILABLE)}switch(n){case"iceConnectionFailed":e.iceCompleted&&(e.iceCompleted=!1,e.iceConnectionTimer||(e.iceConnectionTimer=t.SIP.Timers.setTimeout(function(){l()},a.ICE_CONNECTION)));break;case"iceConnectionDisconnected":e.iceConnectionTimer||e.iceCompleted&&(e.recoveryTimer=t.SIP.Timers.setTimeout(function(){e.iceCompleted=!1,e.emit("mediaDisconnected",e),e.iceConnectionTimer||(e.iceConnectionTimer=t.SIP.Timers.setTimeout(function(){l()},a.ICE_CONNECTION-a.RECOVERY))},a.RECOVERY));break;case"iceConnectionConnected":case"iceConnectionCompleted":m(e),e.iceCompleted=!0,e.statsTimer||(e.statsTimer=t.SIP.Timers.setInterval(function(){e.getStats(!0).then(function(t){var n,l={accumulated:t,delta:e.prevStats?d.getDeltaStats(e.prevStats,t):t};e.prevStats=t,e.qosReport||(e.qosReport=new p({loggerFactory:e.vvoip.transport.loggerFactory})),e.qosReport.addSample(t),(n=e.qosReport.detectQos())>-1&&e.emit("qualityChanged",e,n),d.logStats(e.vvoip,l.delta,e.qosReport.level)}).catch(function(e){})},a.STATS_INTERVAL)),void 0===e.timeIceCompleted&&(e.timeIceCompleted=Date.now()),e.emit("mediaConnected",e);break;case"iceConnectionChecking":m(e)}}.bind(null,this),this.vvoip.transport.on("disconnected",function(){f.handleIceConnection("iceConnectionDisconnected")}),this.sipContext.on("canceled",function(e){f.state=u.CALL_STATE_DISCONNECTED,void 0===f.timeEnded&&(f.timeEnded=Date.now()),e?f.emit("disconnected",f,new c({status_code:e.status_code},e.cause_code||s.CALL_CANCELLED_UNKNOWN)):f.emit("disconnected",f,new c(void 0,s.CALL_CANCELLED_UNKNOWN))}),this.sipContext.on("progress",function(e){var t=!1;/^18[0-9]$/.test(e.status_code)?void 0===f.timeRinging&&(y({request:e}),t=!0):f.outgoing||void 0!==f.timeRinging||f.state!==u.CALL_STATE_INITIATED||(t=!0),t&&(f.state=u.CALL_STATE_RINGING,f.timeRinging=Date.now(),f.emit("ringing",f))}),this.sipContext.on("terminated",function(t,n){var l;!t&&n&&(l=function(t){switch(t){case e.env.SIP.C.CONNECTION_ERROR:return s.CALL_END_NETWORKUNAVAILABLE;case e.env.SIP.C.REQUEST_TIMEOUT:return s.CALL_TIMEOUT;case e.env.SIP.C.SIP_FAILURE_CODE:case e.env.SIP.C.INTERNAL_ERROR:return s.CALL_END_PEER;case e.env.SIP.C.BUSY:return s.CALL_END_BUSY;case e.env.SIP.C.REJECTED:return s.CALL_END_USER;case e.env.SIP.C.REDIRECTED:case e.env.SIP.C.UNAVAILABLE:case e.env.SIP.C.NOT_FOUND:case e.env.SIP.C.ADDRESS_INCOMPLETE:case e.env.SIP.C.INCOMPATIBLE_SDP:case e.env.SIP.C.AUTHENTICATION_ERROR:case e.env.SIP.C.DIALOG_ERROR:return s.CALL_END_PEER;case e.env.SIP.C.WEBRTC_NOT_SUPPORTED:case e.env.SIP.C.WEBRTC_ERROR:case e.env.SIP.C.USER_DENIED_MEDIA_ACCESS:case e.env.SIP.C.BAD_MEDIA_DESCRIPTION:return s.CALL_FAILURE_MEDIASETUP;case e.env.SIP.C.CANCELED:return s.CALL_CANCELLED_UNKNOWN;case e.env.SIP.C.NO_ANSWER:case e.env.SIP.C.EXPIRES:case e.env.SIP.C.NO_ACK:case e.env.SIP.C.NO_PRACK:case e.env.SIP.C.RTP_TIMEOUT:return s.CALL_TIMEOUT}}(n)),f.state=u.CALL_STATE_DISCONNECTED,f.timeEnded=Date.now(),f.emit("disconnected",f,new c(t,l))}),this.sipContext.on("confirmed",function(e){void 0===f.timeConnected&&(f.state=u.CALL_STATE_CONNECTED,f.timeConnected=Date.now(),f.emit("connected",f),f.pendingVideoEnable&&(f.pendingVideoEnable=!1,f.video(!0).catch(function(e){f.emit("localMediaFailed",f,f.localMedia())})))}),this.sipContext.on("invited",function(e){f.outgoing&&void 0===f.timeSdpSent&&(f.timeSdpSent=Date.now())}),this.sipContext.on("accepted",function(e,t){f.outgoing?(void 0===f.timeAnswered&&(f.timeAnswered=Date.now()),void 0===f.timeConnected&&(f.remoteFeatures=d.getFeatures({request:e}),f.state=u.CALL_STATE_CONNECTED,f.timeConnected=Date.now(),f.emit("connected",f))):(f.state=u.CALL_STATE_CONNECTING,void 0===f.timeSdpSent&&(f.timeSdpSent=Date.now()),void 0===f.timeAnswered&&(f.timeAnswered=Date.now()),f.emit("connecting",f))}),this.sipContext.on("onReinvite",function(e){e.extraHeaders=d.getExtraHeaders(f.vvoip.transport,{sessionId:f.sessionId,features:f.features})}),this.sipContext.mediaHandler.on("setDescription",function(e){var n=d.setDecryptFP(f.vvoip,f.callParty.regId,e);e.promise=new t.Promise(function(t,l){n.then(function(){t(e)}).catch(function(e){d.endCall(f,o.NOT_ACCEPTABLE_ANYWHERE,e)})})}),this.sipContext.mediaHandler.on("getDescription",function(e){var n=d.setEncryptFP(f.vvoip,f.callParty.regId,e);if(e.promise=new t.Promise(function(t,l){n.then(function(){t(e)}).catch(function(e){d.endCall(f,o.NOT_ACCEPTABLE_ANYWHERE,e)})}),d.setDtx(e),d.setVideoPriority(e),f.callOptions.removeCandidateType&&t.SIP.Hacks.AllBrowsers.stripCandidates(e.sdpParsed,["type:"+f.callOptions.removeCandidateType]),void 0!==f.timeConnected){var l=f.localMedia();f.callOptions.audio===l.audio&&f.callOptions.video===l.video&&f.callOptions.data===l.data||(f.callOptions.audio=l.audio,f.callOptions.video=l.video,f.callOptions.data=l.data,f.emit("localMediaFailed",f,l))}}),this.sipContext.mediaHandler.on("remoteDescription",function(){var e=f.remoteMedia();f.lastRemoteMedia.audio===e.audio&&f.lastRemoteMedia.video===e.video||(f.lastRemoteMedia=e,f.emit("remoteMediaChanged",f,e))}),this.sipContext.mediaHandler.on("iceConnectionFailed",function(){f.handleIceConnection("iceConnectionFailed")}),this.sipContext.mediaHandler.on("iceConnectionDisconnected",function(){f.handleIceConnection("iceConnectionDisconnected")}),this.sipContext.mediaHandler.on("iceConnectionConnected",function(){f.handleIceConnection("iceConnectionConnected")}),this.sipContext.mediaHandler.on("iceConnectionCompleted",function(){f.handleIceConnection("iceConnectionCompleted")}),this.sipContext.mediaHandler.on("iceConnectionChecking",function(){f.handleIceConnection("iceConnectionChecking")}),this.on("disconnected",function(e,n){f.statsTimer&&(t.SIP.Timers.clearInterval(f.statsTimer),f.statsTimer=void 0),m(f)})};function b(e){return void 0===e?i.USER_HANGUP:e}return(y.prototype=Object.create(t.SIP.EventEmitter.prototype)).getDuration=function(){return void 0===this.timeAnswered?0:void 0===this.timeIceCompleted?0:(void 0===this.timeEnded?Date.now():this.timeEnded)-(this.timeIceCompleted<this.timeAnswered?this.timeAnswered:this.timeIceCompleted)},y.prototype.getTimeToSetup=function(){return void 0===this.timeConnected?0:this.timeConnected-this.timeInit},y.prototype.getTimeToInvite=function(){return void 0===this.timeSdpSent?0:this.timeSdpSent-this.timeInit},y.prototype.getTimeToRing=function(){return void 0===this.timeRinging?0:this.timeRinging-this.timeInit},y.prototype.getTimeToAnswer=function(){return void 0===this.timeAnswered?0:void 0===this.timeRinging?this.timeAnswered-this.timeInit:this.timeAnswered-this.timeRinging},y.prototype.getTimeToConnected=function(){return void 0===this.timeConnected||void 0===this.timeAnswered?0:this.timeConnected-this.timeAnswered},y.prototype.getIceSetupTime=function(){return void 0===this.timeIceCompleted||void 0===this.timeSdpSent?0:this.timeIceCompleted-this.timeSdpSent},y.prototype.isOutgoing=function(){return this.outgoing},y.prototype.remoteMedia=function(){return f(this.sipContext,"getRemoteStreams")},y.prototype.localMedia=function(){return f(this.sipContext,"getLocalStreams")},y.prototype.getStats=function(n){if(this.state<u.CALL_STATE_CONNECTED)return new t.SIP.Utils.Promise(function(t,n){n(new e.Exceptions.InvalidStateError("call is not connected"))});var l;if(!t.getUserMedia||!t.getUserMedia.name)return t.Promise.reject(new e.Exceptions.NotSupportedError("getStats"));try{l=this.sipContext.mediaHandler.peerConnection}catch(n){return t.SIP.Utils.Promise.reject(new e.Exceptions.InvalidStateError("media is not ready"))}return-1!==t.getUserMedia.name.search("mozGetUserMedia")?l.getStats?new t.SIP.Utils.Promise(function(e,t){l.getStats(null).then(function(t){e(d.extractFFStats(t,n))}).catch(function(e){t(e)})}):new t.SIP.Utils.Promise(function(t,n){n(new e.Exceptions.NotSupportedError("getStats"))}):new t.SIP.Utils.Promise(function(e,t){var r=setTimeout(function(){e(this.prevStats)},a.STATS_TIMEOUT);l.getStats(function(t){var l={};t.result().forEach(function(e){var t={id:e.id,type:e.type};e.names().forEach(function(n){t[n]=e.stat(n)}),l[t.id]=t,l.ts=l.ts||e.timestamp}),clearTimeout(r),e(d.extractChromeStats(l,n))},t)})},y.prototype.accept=function(n){var l=this;if(this.outgoing)throw new e.Exceptions.InvalidStateError("call is outgoing");if(void 0!==this.timeAccepted)throw new e.Exceptions.InvalidStateError("call is accepted already");if(void 0!==this.timeAnswered)throw new e.Exceptions.InvalidStateError("call is accepted already");if(n.video&&!this.remoteMedia().video)throw new e.Exceptions.InvalidStateError("caller did not offer video");return new t.SIP.Utils.Promise(function(r,i){function s(){(function(){var e=n.toMediaOptions();return l.callOptions=g.update(l.callOptions,n),e.extraHeaders=d.getExtraHeaders(l.vvoip.transport,{sessionId:l.sessionId,features:l.features,metaData:l.metaData}),new t.SIP.Utils.Promise(function(n,r){e.shortPromise={resolve:n,reject:r},l.sipContext.deferredAcceptCall=t.SIP.Utils.defer(),e.longPromise=l.sipContext.deferredAcceptCall,l.sipContext.progress(e)})})().then(function(){l.timeAccepted=Date.now(),r()}).catch(function(e){d.toLocalError(e,i)})}n.video?d.hasVideoDevice().then(function(t){t?s():i(new e.Exceptions.NotSupportedError("No video device available"))}):s()})},y.prototype.answer=function(n){var l=this;if(!n)throw new e.Exceptions.InvalidArugmentError("callOptions",n);if(this.outgoing)throw new e.Exceptions.InvalidStateError("call is outgoing");if(void 0!==this.timeAnswered)throw new e.Exceptions.InvalidStateError("call is answered already");if(n.video&&!this.remoteMedia().video)throw new e.Exceptions.InvalidStateError("caller did not offer video");return new t.SIP.Utils.Promise(function(r,i){function s(){(function(){!n.video||l.callOptions&&l.callOptions.video||(l.pendingVideoEnable=!0,n.video=!1);var e=n.toMediaOptions();return l.callOptions=g.update(l.callOptions,n),e.extraHeaders=d.getExtraHeaders(l.vvoip.transport,{sessionId:l.sessionId,features:l.features}),new t.SIP.Utils.Promise(function(t,n){e.shortPromise={resolve:t,reject:n},l.sipContext.deferredAcceptCall?(l.sipContext.deferredAcceptCall.promise.then(function(){l.sipContext.accept(e)}),l.sipContext.deferredAcceptCall=void 0):l.sipContext.accept(e)})})().then(function(){l.timeAnswered=Date.now(),r()}).catch(function(e){d.toLocalError(e,i)})}n.video?d.hasVideoDevice().then(function(t){t?s():i(new e.Exceptions.NotSupportedError("No video device available"))}):s()})},y.prototype.reject=function(t){if(this.outgoing)throw new e.Exceptions.InvalidStateError("call is outgoing");if(void 0!==this.timeAnswered)throw new e.Exceptions.InvalidStateError("call is answered already");var n;switch(t=b(t)){case i.TIMEOUT:n=o.REQUEST_TIMEOUT;break;case i.REJECT_CALL:case i.USER_HANGUP:case i.FAILURE_MEDIASETUP:n=o.DECLINE;break;default:throw e.InvalidArgumentError("reason",t)}var l={statusCode:n};l.extraHeaders=d.getExtraHeaders(this.vvoip.transport,{sessionId:this.sessionId,features:this.features}),this.sipContext.reject(l)},y.prototype.end=function(n){if(void 0===this.timeAnswered&&!this.outgoing)return new t.SIP.Utils.Promise(function(e,t){try{this.reject(n),e()}catch(e){t(e)}}.bind(this));n=b(n);var l=0,r=s.CALL_END_USER;switch(n){case i.TIMEOUT:l=o.REQUEST_TIMEOUT,r=s.CALL_TIMEOUT;break;case i.USER_HANGUP:case i.REJECT_CALL:r=s.CALL_END_USER;break;case i.FAILURE_MEDIASETUP:r=s.CALL_FAILURE_MEDIASETUP;break;default:throw e.InvalidArgumentError("reason",n)}return d.endCall(this,l,r)},y.prototype.mute=function(e){e?this.sipContext.mute({audio:!0,video:!1}):this.sipContext.unmute({audio:!0,video:!1})},y.prototype.video=function(n){return new t.SIP.Utils.Promise(function(t,l){this.localMedia().video===n||this.pendingVideoEnable&&n?t():d.hasVideoDevice().then(function(r){if(r){this.callOptions.video=n;var i=this.callOptions.toMediaOptions();i.extraHeaders=d.getExtraHeaders(this.vvoip.transport,{sessionId:this.sessionId,features:this.features}),i.eventHandlers={failed:function(){this.emit("recoveryRequired")}.bind(this)},this.sipContext.toggleLocalMedia(i).then(function(){t()}).catch(function(e){d.toLocalError(e,l)})}else l(new e.Exceptions.NotSupportedError("No video device available"))}.bind(this))}.bind(this))},y.Callee=function(e){this.regId=e,this.isCallee=function(){return!0}},y.Caller=function(e,t,n){this.pin=e,this.regId=t,this.uri=n,this.isCallee=function(){return!1}},y.Options=g,y.Status=c,y.State=u,y.EndReason=i,y.EndCause=s,y.SipStatusCode=o,y.MediaStatus=h,y.QosReport=p,y.Utils=d,y}},function(e,t,n){e.exports=function(e,t){var l=n(12).SIP,r=n(12).CallEndCause,i=[l.FEATURES.PROTECTED_VVOIP,l.FEATURES.XPVIDEO,l.FEATURES.CALL_RECOVERY,l.FEATURES.EARLY_ICE],s={defaultFeatures:function(e,t){if(e&&t){var n=i;return n=(n=n.concat(t)).filter(function(t){return e.indexOf(t)<0})}return i},toLocalError:function(t,n){var l=t.name.toLowerCase();l.search("permission")>-1?n(new e.Exceptions.PermissionDeniedError(t.message?t.message:"Failed to enable media")):l.search("state")>-1?n(new e.Exceptions.InvalidStateError(t.message?t.message:"Cannot be called at this state")):n(t)},toHex:function(e,t){var n=Array(t).join("0")+e.toString(16);return n.substr(n.length-t)},getIceTypeFromStats:function(e){if(!e||!e.candidatePairs||!e.candidatePairs.length)return"CF";return function(e,t){switch(e){case"host":case"local":case"srflx":case"prflx":case"stun":return"PP";case"relay":return"udp"===t?"UR":"tcp"===t?"TR":"HR";default:return"??"}}(e.candidatePairs[0].local.type,e.candidatePairs[0].local.proto)},getIceTypesPerMediaFromStats:function(e){if(!e||!e.candidatePairs||!e.candidatePairs.length)return"uu";function t(e,t){switch(e){case"host":case"local":return"h";case"stun":case"srflx":return"s";case"prflx":return"p";case"relay":return"r";default:return"u"}}var n="";return e.candidatePairs.forEach(function(e){n+=t(e.local.type)+t(e.remote.type)}),n},getIpAddressFromStats:function(e){if(!e||!e.candidatePairs||!e.candidatePairs.length)return"00000000";var t=e.candidatePairs[0].local.address.split(":")[0].split(".");if(4!==t.length)return"00000000";for(var n="",l=0;l<t.length;l++){var r=parseInt(t[l],10).toString(16);1===r.length&&(r="0"+r),n+=r}return n},getTotalBytesFromStats:function(e,t){if(!e||!e[t])return 0;var n=0;return["audio","video","data"].forEach(function(l){e[t][l]&&(n+=e[t][l].bytes)}),n},getByeDescription:function(e,n,l,r){function i(t){var i=s.getIceTypeFromStats(t),o=s.getIpAddressFromStats(t),a=e.remoteMedia().video||e.localMedia().video,u=e.remoteMedia().data,c=e.getDuration()||1,d=(8*s.getTotalBytesFromStats(t,"received")/c).toFixed(2),p=(8*s.getTotalBytesFromStats(t,"sent")/c).toFixed(2),g=s.getIceTypesPerMediaFromStats(t);return"CSR;cause="+n+(void 0!==l?";SubCode="+l:"")+(void 0!==r?";text="+r:"")+";AFE=U"+i+"U "+s.toHex(e.getTimeToSetup(),4)+" "+s.toHex(e.getIceSetupTime(),4)+" "+s.toHex(e.getTimeToInvite(),4)+" "+s.toHex(e.getTimeToRing(),4)+" "+s.toHex(e.getTimeToAnswer(),4)+" "+s.toHex(c,7)+" "+o+"<;VfxRxBitrate="+d+";VfxTxBitrate="+p+";MediaType="+(a?1:u?2:0)+";Transport=Unknown;Types="+g}return new t.SIP.Utils.Promise(function(t,n){e.getStats().then(function(e){t(i(e))}).catch(function(e){t(i())})})},getExtraHeaders:function(e,n){var i=n.features||s.defaultFeatures(n.disabledFeatures,n.extraFeatures),o=[l.HEADERS.REG_ID+": "+e.config.regId,l.HEADERS.SUPPORTED_FEATURES+": "+i.join(";")];switch(n.sessionId?o.push(l.HEADERS.SESSION_ID+": "+n.sessionId):(o.push(l.HEADERS.ACCEPT_CONTACT),o.push(l.HEADERS.SESSION_ID+": "+t.SIP.Utils.createRandomToken(10)),o.push(l.HEADERS.REMOTE_PARTY_ID+': "'+e.config.pin+'"<sip:'+e.config.pin+"@"+e.config.id_provider+">;screen=on;privacy=off;id-type=subscriber;party=calling")),n.callId&&o.push(l.HEADERS.PREV_CALL_ID+": "+n.callId),n.metaData&&o.push(l.HEADERS.META_DATA+": "+n.metaData),n.cause){case r.CALL_SECURE_CALL_KEY_ERROR:o.push(l.HEADERS.WARNING+": 399 "+l.FAILURES.SRTP_KEY_ERROR);break;case r.CALL_SECURE_CALL_KEY_TIMEOUT:o.push(l.HEADERS.WARNING+": 399 "+l.FAILURES.SRTP_KEY_TIMEOUT);break;case r.CALL_SECURE_CALL_UNSUPPORTED:o.push(l.HEADERS.WARNING+": 399 "+l.FAILURES.SRTP_UNSUPPORTED)}return n.disabledHeaders&&(o=o.filter(function(e){return!n.disabledHeaders.some(function(t){return e.indexOf(t)>-1})})),o},getParams:function(e){return{toAttributes:l.HEADERS.ADDRESS_TYPE,contactAppendix:e.sipConfiguration.contactRegistrationAppendix,uriExtraAttributes:[l.HEADERS.TRANSPORT_TYPE,l.HEADERS.ADDRESS_TYPE]}},enumMediaDevices:function(n){return new t.SIP.Utils.Promise(function(l,r){t.mediaDevices&&t.mediaDevices.enumerateDevices?t.mediaDevices.enumerateDevices().then(function(e){l(e.filter(function(e){return e.kind===n}))}).catch(function(t){r(new e.Exceptions.NotSupportedError(t.name+": "+t.message))}):r(new e.Exceptions.NotSupportedError("EnumerateDevices Not Implemented"))})},hasVideoDevice:function(){return s.hasMediaDevice("videoinput")},hasMediaDevice:function(e){return s.enumMediaDevices(e).then(function(e){return t.Promise.resolve(e.length>0)})},getHeader:function(e,t){var n,l=e.request;if(l.headers)for(var r in l.headers)if(l.headers.hasOwnProperty(r)&&r.toLowerCase()===t.toLowerCase())return"string"==typeof l.headers[r][0]?{raw:l.headers[r][0]}:l.headers[r][0];return l.extraHeaders&&l.extraHeaders.some(function(e){var l=e.split(":");return l[0].toLowerCase().trim()===t.toLowerCase()&&(l.splice(0,1),n=l.join(":").trim(),!0)}),{raw:n}},getSipSessionId:function(e){return s.getHeader(e,l.HEADERS.SESSION_ID).raw},getPrevCallId:function(e){return s.getHeader(e,l.HEADERS.PREV_CALL_ID).raw},getMetaData:function(e){return s.getHeader(e,l.HEADERS.META_DATA).raw},getCallId:function(e){return s.getHeader(e,l.HEADERS.CALL_ID).raw},getFeatures:function(e){var t=s.getHeader(e,l.HEADERS.SUPPORTED_FEATURES).raw;return t?t.split(";"):[]},intersectArrays:function(e,t){if(!e||!t)return[];var n=e.length>t.length?e:t,l=n===e?t:e;return n.filter(function(e){return l.indexOf(e)>-1})},removeDuplicateInArray:function(e){if(e){for(var t=0;t<e.length-1;t++)for(var n=t+1;n<e.length;n++)e[n]===e[t]&&e.splice(n--,1);return e}},commonFeatures:function(e,t){var n=e.features;return s.intersectArrays(t,n)},endCall:function(e,n,r){var i={};return i.status_code=n,i.cause_code=r,i.extraHeaders=s.getExtraHeaders(e.vvoip.transport,{sessionId:e.sessionId,cause:r,features:e.features}),new t.SIP.Utils.Promise(function(t,n){var o;e.sipContext.status!==l.STATUS_WAITING_FOR_ACK&&e.sipContext.status!==l.STATUS_CONFIRMED&&(o="EndCall_User"),s.getByeDescription(e,r,void 0,o).then(function(n){n&&i.extraHeaders.push(l.HEADERS.REASON+": "+n),e.sipContext.on("cancel",function(t){e.sipContext.close(),e.sipContext.emit("canceled",t)}),e.sipContext.terminate(i),t()}).catch(function(e){n(e)})})},extractFFStatsLegacy:function(e,t){var n={candidatePairs:[],received:{},sent:{}};if(!e)return n;var l=0,r=0;for(var i in e)e.hasOwnProperty(i)&&(n.ts=n.ts||Math.ceil(e[i].timestamp),"candidatepair"===e[i].type&&(!t&&e[i].selected&&n.candidatePairs.push({local:{type:e[e[i].localCandidateId].candidateType,address:e[e[i].localCandidateId].ipAddress+":"+e[e[i].localCandidateId].portNumber,proto:e[e[i].localCandidateId].transport},remote:{type:e[e[i].remoteCandidateId].candidateType,address:e[e[i].remoteCandidateId].ipAddress+":"+e[e[i].remoteCandidateId].portNumber,proto:e[e[i].remoteCandidateId].transport}}),void 0!==e[i].bytesReceived&&(l+=e[i].bytesReceived),void 0!==e[i].bytesSent&&(r+=e[i].bytesSent)),"inboundrtp"===e[i].type&&-1===e[i].id.search("rtcp")&&(n.received[e[i].mediaType]=n.received[e[i].mediaType]||{packets:0,loss:0,jitter:0,bytes:0},n.received[e[i].mediaType].bytes+=e[i].bytesReceived,n.received[e[i].mediaType].packets+=e[i].packetsReceived,n.received[e[i].mediaType].loss+=e[i].packetsLost,n.received[e[i].mediaType].jitter=Math.max(n.received[e[i].mediaType].jitter,e[i].jitter)),"outboundrtp"===e[i].type&&-1===e[i].id.search("rtcp")&&(n.sent[e[i].mediaType]=n.sent[e[i].mediaType]||{bytes:0,packets:0},n.sent[e[i].mediaType].bytes+=e[i].bytesSent,n.sent[e[i].mediaType].packets+=e[i].packetsSent));return 0===Object.keys(n.received).length&&0===Object.keys(n.sent).length&&(l||r)&&(n.received.data={packets:0,loss:0,jitter:0,bytes:l},n.sent.data={packets:0,bytes:r}),n},extractFFStats:function(e,t){var n={candidatePairs:[],received:{},sent:{}};if(!e)return n;if(!e.forEach)return s.extractFFStatsLegacy(e,t);var l=0,r=0;return e.forEach(function(i){if(n.ts=n.ts||Math.ceil(i.timestamp),"candidate-pair"===i.type){if(!t&&i.selected){var s=e.get(i.localCandidateId),o=e.get(i.remoteCandidateId);n.candidatePairs.push({local:{type:s.candidateType,address:s.ipAddress+":"+s.portNumber,proto:s.transport},remote:{type:o.candidateType,address:o.ipAddress+":"+o.portNumber,proto:o.transport}})}void 0!==i.bytesReceived&&(l+=i.bytesReceived),void 0!==i.bytesSent&&(r+=i.bytesSent)}"inbound-rtp"===i.type&&-1===i.id.search("rtcp")&&(n.received[i.mediaType]=n.received[i.mediaType]||{packets:0,loss:0,jitter:0,bytes:0},n.received[i.mediaType].bytes+=i.bytesReceived,n.received[i.mediaType].packets+=i.packetsReceived,n.received[i.mediaType].loss+=i.packetsLost,n.received[i.mediaType].jitter=Math.max(n.received[i.mediaType].jitter,i.jitter)),"outbound-rtp"===i.type&&-1===i.id.search("rtcp")&&(n.sent[i.mediaType]=n.sent[i.mediaType]||{bytes:0,packets:0},n.sent[i.mediaType].bytes+=i.bytesSent,n.sent[i.mediaType].packets+=i.packetsSent)}),0===Object.keys(n.received).length&&0===Object.keys(n.sent).length&&(l||r)&&(n.received.data={packets:0,loss:0,jitter:0,bytes:l},n.sent.data={packets:0,bytes:r}),n},extractChromeStats:function(e,t){var n={candidatePairs:[],received:{},sent:{},srtpCipher:{},dtlsCipher:{}};if(!e)return n;for(var l in e)if(e.hasOwnProperty(l)){if("googComponent"===e[l].type){var r=e[e[l].selectedCandidatePairId];if(!r)continue;if("0"!==r.id.split("-")[3])continue;var i=e[l].id.split("-")[1];if("data"===i&&(n.received[i]=n.received[i]||{packets:0,loss:0,jitter:0,bytes:0},n.received[i].bytes+=parseInt(r.bytesReceived,10),n.sent[i]=n.sent[i]||{packets:0,bytes:0},n.sent[i].bytes+=parseInt(r.bytesSent,10),n.sent[i].packets+=parseInt(r.packetsSent,10)),t||"true"!==r.googActiveConnection)continue;n.candidatePairs.push({local:{type:r.googLocalCandidateType,address:r.googLocalAddress,proto:e[r.localCandidateId].transport},remote:{type:r.googRemoteCandidateType,address:r.googRemoteAddress,proto:e[r.remoteCandidateId].transport},component:parseInt(e[l].googComponent,10)}),e[l].srtpCipher&&(n.srtpCipher[i]=e[l].srtpCipher),e[l].dtlsCipher&&(n.dtlsCipher[i]=e[l].dtlsCipher)}"ssrc"===e[l].type&&(-1===e[l].id.search("send")?(n.received[e[l].mediaType]=n.received[e[l].mediaType]||{packets:0,loss:0,jitter:0,bytes:0},n.received[e[l].mediaType].bytes+=parseInt(e[l].bytesReceived,10),n.received[e[l].mediaType].packets+=parseInt(e[l].packetsReceived,10),n.received[e[l].mediaType].loss+=parseInt(e[l].packetsLost,10),n.received[e[l].mediaType].jitter=Math.max(n.received[e[l].mediaType].jitter,parseFloat(e[l].googExpandRate))):(n.sent[e[l].mediaType]=n.sent[e[l].mediaType]||{bytes:0,packets:0},n.sent[e[l].mediaType].bytes+=parseInt(e[l].bytesSent,10),n.sent[e[l].mediaType].packets+=parseInt(e[l].packetsSent,10)))}return n.ts=e.ts,n},getDeltaStats:function(e,t){var n=e;return["audio","video","data"].forEach(function(e){t.received[e]&&(n.received[e]=n.received[e]||{packets:0,loss:0,jitter:0,bytes:0},n.received[e].packets=t.received[e].packets-n.received[e].packets,n.received[e].loss=t.received[e].loss-n.received[e].loss,n.received[e].bytes=t.received[e].bytes-n.received[e].bytes),t.sent[e]&&(n.sent[e]=n.sent[e]||{packets:0,bytes:0},n.sent[e].packets=t.sent[e].packets-n.sent[e].packets,n.sent[e].bytes=t.sent[e].bytes-n.sent[e].bytes)}),n.deltaTs=t.ts-n.ts,n.ts=t.ts,n},logStats:function(e,t,n){var l="",r=["audio","video","data"];["received","sent"].forEach(function(e){r.forEach(function(n){t[e][n]&&(l+=("received"===e?"IN":"OUT")+"<"+n+"> pkt:"+t[e][n].packets+", bytes: "+t[e][n].bytes+(t[e][n].loss?", loss:"+t[e][n].loss:"")+" ")})}),l.length&&e.logger.debug(l+"duration: "+t.deltaTs+" quality: "+n)},setDtx:function(e){if(e.sdpParsed.media)for(var t=0;t<e.sdpParsed.media.length;t++)if(e.sdpParsed.media[t].rtp)for(var n=0;n<e.sdpParsed.media[t].rtp.length;n++)if("opus"===e.sdpParsed.media[t].rtp[n].codec)for(var l=0;l<e.sdpParsed.media[t].fmtp.length;l++)e.sdpParsed.media[t].rtp[n].payload===e.sdpParsed.media[t].fmtp[l].payload&&-1===e.sdpParsed.media[t].fmtp[l].config.indexOf("usedtx")&&(e.sdpParsed.media[t].fmtp[l].config.length>0&&(e.sdpParsed.media[t].fmtp[l].config+=";"),e.sdpParsed.media[t].fmtp[l].config+="usedtx=1")},hexStringArraytoArray:function(e){var t=[];return e.reduce(function(e,t){return e.push(parseInt("0x"+t,16)),e},t),t},updateFingerprint:function(e,n,l,i){return new t.Promise(function(t,s){e(new Uint8Array(l),n).then(function(e){if(!1!==e.verified){var n=(e=e.data||e).reduce(function(e,t){return(e?e+":":"")+("0"+t.toString(16).toUpperCase()).slice(-2)},"");i.hash=n,t()}else s(r.CALL_SECURE_CALL_KEY_ERROR)}).catch(function(e){s(r.CALL_SECURE_CALL_KEY_ERROR)})})},setEncryptFP:function(e,n,l){if(!l.sdpParsed.media)return t.Promise.resolve();if(!e.protect)return t.Promise.reject(r.CALL_SECURE_CALL_UNSUPPORTED);for(var i=[],o=l.sdpParsed.fingerprint,a=0;a<l.sdpParsed.media.length;a++){if(!l.sdpParsed.media[a].fingerprint&&!o){if("inactive"===l.sdpParsed.media[a].direction)continue;return t.Promise.reject(r.CALL_SECURE_CALL_UNSUPPORTED)}if(l.sdpParsed.media[a].fingerprint=l.sdpParsed.media[a].fingerprint||o,!(l.sdpParsed.media[a].fingerprint.type.indexOf("bbme_")>-1)){l.sdpParsed.media[a].fingerprint.type="bbme_"+l.sdpParsed.media[a].fingerprint.type;var u=l.sdpParsed.media[a].fingerprint.hash.split(":");i.push(s.updateFingerprint(e.protect,n,s.hexStringArraytoArray(u),l.sdpParsed.media[a].fingerprint))}}return delete l.sdpParsed.fingerprint,i.length?new t.Promise(function(e,n){t.Promise.all(i).then(e).catch(n)}):t.Promise.resolve()},setDecryptFP:function(e,n,l){if(!l.sdpParsed.media)return t.Promise.resolve();if(!e.unprotect)return t.Promise.reject(r.CALL_SECURE_CALL_UNSUPPORTED);for(var i=[],o=0;o<l.sdpParsed.media.length;o++){if(!l.sdpParsed.media[o].fingerprint){if("inactive"===l.sdpParsed.media[o].direction)continue;return t.Promise.reject(r.CALL_SECURE_CALL_UNSUPPORTED)}if(!l.sdpParsed.media[o].fingerprint.type.startsWith("bbme_"))return t.Promise.reject(r.CALL_SECURE_CALL_UNSUPPORTED);l.sdpParsed.media[o].fingerprint.type=l.sdpParsed.media[o].fingerprint.type.substring("bbme_".length);var a=l.sdpParsed.media[o].fingerprint.hash.split(":");i.push(s.updateFingerprint(e.unprotect,n,s.hexStringArraytoArray(a),l.sdpParsed.media[o].fingerprint))}return i.length?new t.Promise(function(e,n){t.Promise.all(i).then(e).catch(n)}):t.Promise.resolve()},setVideoPriority:function(e){if(e.sdpParsed.media)for(var t=0;t<e.sdpParsed.media.length;t++)if("video"===e.sdpParsed.media[t].type&&e.sdpParsed.media[t].rtp){for(var n=0;n<e.sdpParsed.media[t].rtp.length;n++)if("H264"===e.sdpParsed.media[t].rtp[n].codec){var l=e.sdpParsed.media[t].rtp.splice(n,1)[0];e.sdpParsed.media[t].rtp.splice(0,0,l)}e.sdpParsed.media[t].payloads=e.sdpParsed.media[t].rtp.map(function(e){return e.payload}).join(" ")}}};return s}},function(e,t,n){var l=n(63);e.exports={TextEncoder:l.TextEncoder,TextDecoder:l.TextDecoder}},function(e,t,n){"use strict";e.exports={osVersion:"0.0.0.0"}},function(e,t,n){"use strict";function l(){}n.r(t),n.d(t,"default",function(){return l}),l.FailureChoice={GenerateNewKeys:"GenerateNewKeys",GetProfileKeys:"GetProfileKeys",AbandonSetup:"AbandonSetup"},Object.freeze(l.FailureChoice)},function(e,t,n){"use strict";n.d(t,"a",function(){return i});var l=n(1),r=n(7);function i(){var e={bookmark:new r.a,timestamp:0,maxMessageId:new r.a,onlyFastForwarded:!0,messageIdsToReconcile:new Set};Object.defineProperty(this,"bookmark",{enumerable:!0,get:function(){return e.bookmark}}),Object.defineProperty(this,"timestamp",{enumerable:!0,get:function(){return e.timestamp}}),Object.defineProperty(this,"maxMessageId",{enumerable:!0,get:function(){return e.maxMessageId}}),Object.defineProperty(this,"onlyFastForwarded",{enumerable:!0,get:function(){return e.onlyFastForwarded}}),Object.defineProperty(this,"_private",{enumerable:!1,get:function(){if(!s)throw new TypeError("Illegal access of private data");return e}})}i.prototype.recordMessageId=function(e){var t=o.call(this);if(!(e instanceof r.a)||e.isEmpty())throw new l.Error("BookmarkData: parameter does not meet expectations");if(e.isGreaterThan(t.maxMessageId)&&(t.maxMessageId=e),!e.isGreaterThan(t.bookmark))return!1;var n=e.toString();return!t.messageIdsToReconcile.has(n)&&(t.messageIdsToReconcile.add(e.toString()),!0)},i.prototype.setBookmark=function(e,t,n){var i=o.call(this);if(!(e instanceof r.a)||e.isEmpty())throw new l.Error("BookmarkData: parameter does not meet expectations");if(void 0===n)i.timestamp=Date.now()/1e3|0;else{if("number"!=typeof n)throw new l.Error("BookmarkData: parameter does not meet expectations");i.timestamp=n}i.bookmark=e;var s=0,a=i.bookmark.toString();i.messageIdsToReconcile.forEach(function(e){e<=a&&(i.messageIdsToReconcile.delete(e),++s)}),i.onlyFastForwarded=i.onlyFastForwarded&&!0===t&&0===s},i.prototype.isUpToDate=function(){return this.bookmark.isGreaterThanOrEqual(this.maxMessageId)},i.prototype.canBeReconciled=function(e){var t=o.call(this),n=e.toString();for(let e of t.messageIdsToReconcile)if(e<=n)return!0;return!1},i.prototype.needsReconciliation=function(e){return o.call(this).messageIdsToReconcile.has(e.toString())},i.prototype.toString=function(){return"[object BookmarkData]"};var s=!1;function o(){s=!0;var e=this._private;return s=!1,e}},function(e,t,n){"use strict";var l=n(3);class r{constructor(e){Object.defineProperty(this,"binary",{enumerable:!0,value:void 0===e?new Uint8Array([]):e}),Object.defineProperty(this,"length",{enumerable:!0,get:()=>this.binary.length})}static fromString(e){return new r(Object(l.hex2array)(e))}toString(){return Object(l.array2hex)(this.binary)}compare(e){for(var t=Math.min(this.binary.length,e.binary.length),n=0;n<t;++n){if(this.binary[n]<e.binary[n])return-1;if(this.binary[n]>e.binary[n])return 1}return this.binary.length>t?1:e.binary.length>t?-1:0}isEmpty(){return 0===this.binary.length}isLessThan(e){return this.compare(e)<0}isGreaterThan(e){return e.isLessThan(this)}isLessThanOrEqual(e){return!this.isGreaterThan(e)}isGreaterThanOrEqual(e){return!this.isLessThan(e)}isEqual(e){return 0===this.compare(e)}}t.a=r},function(e,t,n){"use strict";t.a=function(){this.allocate=function(){return{storageArray:function(){const e=[];return e.splice=((t,n,...l)=>{Array.prototype.splice.call(e,t,n,...l),e.frozenSlice=e.slice(),Object.freeze(e.frozenSlice)}),e.splice(0,0),e}(),newMessage:function(e){return e},getMessage:function(e){return e},getMessages:function(e){return e.frozenSlice}}}}},function(e,t,n){"use strict";const l=n(65);e.exports={argon2kdf:(e,t,n,r)=>(r=r||"argon2.wasm",fetch(r,{credentials:"same-origin"}).then(e=>{if(!e.ok)throw new Error("argon2kdf: failed to load wasm from "+r);return e.arrayBuffer()}).then(r=>l.argon2kdf(r,e,t,n)))}},function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return c});var l=n(18),r=n(1),i=n(32),s=n(0);const o="EndpointManagement",a=l.default.Method,u=l.default.Server;function c(e,t,n){this.busClient=e,this.domain=t,this.regId=n}c.prototype.getAllEndpoints=function(){const e=`/domains/${this.domain}/user/endpoint/${this.regId}`;return this.busClient.request(e,this.busClient.requestOptions(a.GET,u.Profile)).then(e=>{if(void 0===e)throw new r.PermanentFailure("Received empty response for getAllEndpoints");let t;if("number"!=typeof e.maxPersistentEndpoints&&(t="maxPersistentEndpoints")||"number"!=typeof e.maxEphemeralEndpoints&&(t="maxEphemeralEndpoints")||!Array.isArray(e.endpoints)&&(t="endpoints"))throw new r.PermanentFailure(`Received invalid field=${t} in response for getAllEndpoints: `+JSON.stringify(e));function n(e,t,n,l,r,i=!0){return i&&void 0===t?r:typeof t!==l?(Object(s.default)(s.default.NOTICE,"%s: Ignoring invalid field=%s with type=%s for endpointId=%s; using default=%s",o,n,typeof t,e,JSON.stringify(r)),r):t}const l=[];for(const t of e.endpoints){const e=t.endpointId;if("string"!=typeof e){Object(s.default)(s.default.ERROR,"%s: Skipping endpoint with invalid endpointId=%s",o,e);continue}const r=n(e,t.ephemeral,"ephemeral","boolean",!1);l.push({endpointId:e,ephemeral:r,name:n(e,t.name,"name","string","",!r),description:n(e,t.description,"description","string","",!r)}),n(e,t.lde,"lde","boolean",!1)}return{maxPersistentEndpoints:e.maxPersistentEndpoints,maxEphemeralEndpoints:e.maxEphemeralEndpoints,endpoints:l}}).catch(e=>(Object(s.default)(s.default.ERROR,"%s: Failed to get all endpoints: %s",o,e),Promise.reject(Object(i.default)(e))))},c.prototype.deleteEndpoint=function(e){const t=`/domains/${this.domain}/user/endpoint/${this.regId}/${e}`;return this.busClient.request(t,this.busClient.requestOptions(a.DELETE,u.Profile)).then(()=>Promise.resolve()).catch(t=>(Object(s.default)(s.default.ERROR,"%s: Failed to delete endpointId=%s: %s",o,e,t),Promise.reject(Object(i.default)(t))))}},function(e,t,n){"use strict";n.r(t);var l=n(35),r=n(8);class i{constructor(){const e={chats:new Map,list:void 0};s.set(this,e)}size(){return s.get(this).chats.size}get(e){return s.get(this).chats.get(e)}set(e){if(!(e instanceof r.a.View))throw new TypeError("Refusing to cache chat that isn't an instance of Messenger.Chat");const t=s.get(this);t.chats.set(e.chatId,e),t.list=void 0}remove(e){const t=s.get(this);!0===t.chats.delete(e)&&(t.list=void 0)}getAll(){const e=s.get(this);return void 0===e.list&&(e.list=Object.freeze(Array.from(e.chats.values()))),e.list}}const s=new WeakMap;var o=n(11),a=n(10),u=n(1),c=n(9),d=n(5),p=n(13),g=n(4),h=n(0),f=n(3),m=n(14),y=n(6),b=n.n(y);const v=[],E="MembershipSignature";class I{constructor(e,t,n,l,r){if(e!==v)throw TypeError("MembershipSignature: Illegal access to private constructor");_("nonce",t,16),_("salt",n,16),T("signer",l),_("mac",r,16,16),Object.defineProperty(this,"nonce",{value:t,enumerable:!0}),Object.defineProperty(this,"salt",{value:n,enumerable:!0}),Object.defineProperty(this,"signer",{value:l,enumerable:!0}),Object.defineProperty(this,"mac",{value:r,enumerable:!0})}toString(){return f.array2b(d.d(this))}static fromString(e){if("string"!=typeof e||0===e.length)throw new Error("Invalid MembershipSignature");try{const t=d.c(f.b2array(e));return new I(v,t.nonce,t.salt,m.decode(t.signer),t.mac)}catch(e){throw new Error(`Invalid MembershipSignature: ${e}`)}}static signMembership(e,t,n){const l=g.generateBytes(16),r=g.generateBytes(16);return S(l,r,e,t,n).then(e=>new I(v,l,r,t,e))}static verifyMembership(e,t,n){return n instanceof I?S(n.nonce,n.salt,e,n.signer,t).then(e=>y.timingSafeEqual(e,n.mac)).catch(e=>(Object(h.default)(h.default.ERROR,"Failed to verify siganture: %s",E,e),!1)):(Object(h.default)(h.default.ERROR,"%s: Cannot verify invalid signature",E),Promise.resolve(!1))}}function S(e,t,n,l,r){try{_("chatKey",n,1),T("signer",l),T("participant",r);const i=m.encode(l),s=m.encode(r),o=new Uint8Array(n.length+e.length);o.set(n,0),o.set(e,n.length);const a=new Uint8Array(t.length+i.length+s.length);return a.set(t,0),a.set(i,t.length),a.set(s,t.length+i.length),y.digest(y.DigestAlgorithm.SHA512,o).then(e=>y.importHmacKey(e)).then(e=>g.hmac(e,a))}catch(e){return Promise.reject(new Error(`Failed to calculate membership signature: ${e}`))}}function _(e,t,n,l){if(!(t instanceof Uint8Array)||t.length<n||void 0!==l&&t.length>l)throw new Error(`MembershipSignature: invalid ${e}`)}function T(e,t){if("string"!=typeof t||0===t.length)throw new Error(`MembershipSignature: invalid ${e}`)}var w=I;var R=n(2),A=n(21);const O="Messenger.detail";function C(e,t,n,l,i,s,o=!1,u,d){Object(R.default)(e instanceof Object,"Bad argument: context"),Object(R.default)(t instanceof r.a,"Bad argument: chat"),Object(R.default)(void 0===n||n instanceof r.a.View,"Bad argument: view"),Object(R.default)("string"==typeof l,"Bad argument: regId"),Object(R.default)(void 0===i||a.a.State.hasOwnProperty(i),"Bad argument: state"),Object(R.default)(void 0===s||"boolean"==typeof s,"Bad argument: admin"),Object(R.default)("boolean"==typeof o,"Bad argument: forStore"),Object(R.default)(void 0===u||a.a.SignatureState.hasOwnProperty(u),"Bad argument: signatureState"),Object(R.default)(void 0===d||"string"==typeof d,"Bad argument: signature"),t.setParticipant(l,i,s,u,d);const p=t.viewDirty;return void 0!==n&&p&&(n=t.view,e.messengerData.chatCache.set(n),e.emitFunc("chatUpdated",new c.ChatUpdated(n))),!1===o&&e.messengerData.mailboxFetcher.fetching(t.mailboxId)&&e.messengerData.mailboxFetcher.fetchAndStore(t.mailboxId,!0),void 0!==n?n:p}function M(e,t,n){if(void 0===e.getParticipantView(n)){let t=new u.Error(`Local user is not a member of chat for chatId=${e.mailboxId}`);throw Object(h.default)(h.default.ERROR,"%s: %s",O,t.message),t}let l="OneToOne"===t;const r=e.getParticipantCount();if(l&&r>2)return Object(h.default)(h.default.INFO,"%s: Updating %s with more than 2 particpants to be a conference",O,e),!1;if(l&&2!==r){let t=new u.Error("OneToOne chatId="+e.mailboxId+" must have 2 participants; got "+r);throw Object(h.default)(h.default.ERROR,"%s: %s",O,t.message),t}return l}function P(e,t,n,l){Object(R.default)(e instanceof Object,"Bad argument: context"),Object(R.default)(t instanceof r.a,"Bad argument: chat"),Object(R.default)(n instanceof Uint8Array,"Bad argument: key"),Object(R.default)(Array.isArray(l),"Bad argument: invitees");const i=e.messengerData.rim_im.invite(t.mailboxId,t.subject,!t.isOneToOne,n,b.a.getRandomValues(new Uint8Array(32)));let s=[];for(const r of l){if("string"!=typeof r||0===r.length){s.push(Promise.reject(new u.Error(`invitee must be a non-empty string; regId=${JSON.stringify(r)}`)));continue}if(r===e.messengerData.registrationInfo.regId){s.push(Promise.reject(new u.Error("refusing to send invite to own regId")));continue}let l;C({messengerData:e.messengerData,emitFunc:e.emitFunc},t,t.view,r,a.a.State.PendingGrant,void 0),Object(h.default)(h.default.INFO,"%s: Starting invite process for %s in %s",O,t.getParticipantView(r),t),Object(h.default)(h.default.DEBUG1,"%s: Refreshing keys for regId=%s",O,r);class o{}const c=e.messengerData.keyManager.getPublicKeys(r,!0).catch(e=>{Object(h.default)(h.default.NOTICE,"%s: Failed to refresh keys for regId=%s; will invite using existing keys; error=%s",O,r,e)}).then(()=>(Object(h.default)(h.default.DEBUG1,"%s: Refreshed keys for regId=%s",O,r),e.requestManager.retryableRequest(()=>(Object(h.default)(h.default.DEBUG1,"%s: Protecting invite message for grant for regId=%s",O,r),Promise.all([w.signMembership(n,e.messengerData.registrationInfo.regId,r),e.messengerData.rim_im.protectUser(r,i)]).then(n=>{Object(h.default)(h.default.DEBUG1,"%s: Protected invite message for grant for regId=%s",O,r);{const e=t.getParticipantState(r);if(e!==a.a.State.PendingGrant)throw Object(h.default)(h.default.NOTICE,"%s: Stopping invite process for regId=%s in %s state=%s; expected state=%s",O,r,t,e,a.a.State.PendingGrant),new o}l=t.getParticipantView(r),Object(h.default)(h.default.DEBUG1,"%s: Granting %s access to %s",O,l,t);const i=n[0].toString();return e.messengerData.managementClient.grant(t.mailboxId,r,i,n[1]).then(()=>i)}))))).then(n=>{Object(h.default)(h.default.DEBUG1,"%s: Granted %s access to %s",O,l,t);{const e=t.getParticipantState(r);if(e!==a.a.State.PendingGrant)throw Object(h.default)(h.default.NOTICE,"%s: Stopping invite process for regId=%s in %s state=%s; expected state=%s",O,r,t,e,a.a.State.PendingGrant),new o}return C({messengerData:e.messengerData,emitFunc:e.emitFunc},t,t.view,r,a.a.State.PendingInvite,void 0,!1,a.a.SignatureState.Verified,n),l=t.getParticipantView(r),Object(h.default)(h.default.DEBUG1,"%s: Sending invite to %s",O,l),e.postFunc(r,i)}).then(()=>{Object(h.default)(h.default.DEBUG1,"%s: Sent invite to %s",O,l);{const e=t.getParticipantState(r);if(e!==a.a.State.PendingInvite)throw Object(h.default)(h.default.NOTICE,"%s: Stopping invite process for regId=%s in %s state=%s; expected state=%s",O,r,t,e,a.a.State.PendingInvite),new o}return C({messengerData:e.messengerData,emitFunc:e.emitFunc},t,t.view,r,a.a.State.PendingJoin,void 0),Object(h.default)(h.default.INFO,"%s: Completed invite process for %s in %s",O,t.getParticipantView(r),t),r}).catch(n=>{if(n instanceof o)return r;Object(h.default)(h.default.ERROR,"%s: Failed to invite regId=%s to %s; error=%s",O,r,t,n);try{e.errorFunc(t.mailboxId,n,!0)}catch(e){e instanceof u.Error||(n=new u.Error(e.toString()))}return Promise.reject(n)});s.push(c)}return s}var j=n(22);const D=new j.a,x="MailboxFetcher";function N(e){let t="";return!0===e.again&&(t+="A"),!0===e.queued&&(t+="Q"),!0===e.inProgress&&(t+="P"),!0===e.store&&(t+="S"),t}function U(e,t,n,l,r,i,s){let o=t(),a=void 0;if(void 0===o)(o={promise:void 0,resolve:void 0,reject:void 0,store:e,again:!1,queued:!0,inProgress:!1}).promise=new Promise((e,t)=>{o.resolve=e,o.reject=t}),n(o),Object(h.default)(h.default.INFO,"%s[%s]: Initiating new fetch %sfor %s",x,N(o),e?"and store ":"",s?`mailboxId=${s}`:"all mailboxes");else{let t=!1;e&&(t=!o.store,o.store=!0),o.queued?(Object(h.default)(h.default.INFO,"%s[%s]: Fetch %sfor %s already queued; %s",x,N(o),o.store?"and store":"",s?`mailboxId=${s}`:"all mailboxes",t?"fetch upgraded to fetch and store":"ignoring"),a=!0):!0===o.inProgress?(o.again=!0,Object(h.default)(h.default.INFO,"%s[%s]: Fetch %sfor %s already in progress; subsequent fetch scheduled%s",x,N(o),o.store?"and store ":"",s?`mailboxId=${s}`:"all mailboxes",t?"; fetch upgraded to fetch and store":""),a=!0):(Object(h.default)(h.default.INFO,"%s[%s]: Initiating subsequent fetch %sfor %s",x,N(o),o.store?"and store ":"",s?`mailboxId=${s}`:"all mailboxes"),o.queued=!0)}if(a)return{out:o};return{out:o,finalize:(e,n,o)=>{const a=t();Object(R.default)(void 0!==a),a.inProgress=!1,!0===a.again?(Object(h.default)(h.default.INFO,"%s[%s]: Ignoring result of fetch for %s; will issue subsequent request",x,N(a),s?`mailboxId=${s}`:"all mailboxes"),a.again=!1,r()):(l(),void 0!==n?(a.resolve(n),H(e)):i(o))}}}function F(e,t,n=!1){if(void 0!==e.mailboxFilter&&!e.mailboxFilter.has(t))return Object(h.default)(h.default.NOTICE,"%s: Refusing to fetch mailbox id=%s that isn't in the filter",x,t),Promise.reject(new u.Error("mailbox not in filter"));const{out:l,finalize:r}=U(n,()=>e.outstanding.get(t),n=>e.outstanding.set(t,n),()=>e.outstanding.delete(t),()=>F(e,t,n),n=>{(n instanceof u.Forbidden||n instanceof u.NotFound)&&e.removeChatFunction(t,!0),l.reject(n)},t);return Object(R.default)(void 0!==l),r?(e.requestManager.retryableRequest(()=>{const n=e.outstanding.get(t);return n.queued=!1,n.inProgress=!0,e.messengerData.managementClient.getMailbox(t).catch(n=>{if(n instanceof u.TemporaryFailure){const n=e.outstanding.get(t);n.queued=!0,n.inProgress=!1,n.again=!1}throw n})}).then(n=>{const l=e.outstanding.get(t);if(Object(h.default)(h.default.INFO,"%s[%s]: Fetch for mailboxId=%s completed",x,N(l),t),!0===l.store&&!1===l.again)return W(e,n);r(e,n)}).then(n=>{if(void 0!==n){const l=e.outstanding.get(t);Object(h.default)(h.default.INFO,"%s[%s]: Store for mailboxId=%s completed",x,N(l),t),r(e,n)}}).catch(n=>{const l=e.outstanding.get(t);Object(h.default)(h.default.WARNING,"%s[%s]: Fetch %sfor mailboxId=%s failed: %s",x,N(l),l.store?"and store ":"",t,n),r(e,void 0,n)}),l.promise):l.promise}function k(e,t){const n=e.messengerData.db.getChat(t.id);let l=e.messengerData.chatCache.get(t.id);return void 0===n?function(e,t){Object(h.default)(h.default.INFO,"%s: Creating chat for mailboxId=%s",x,t.id);try{e.messengerData.db.createChat(t.id,r.a.State.WaitingForKey,t.members.map(e=>{const t=L(e);return{regId:e.regId.toString(),state:a.a.State.Active,admin:!0===e.admin,signatureState:t[0],signature:t[1]}}),function(e,t){return e.description===p.a.Description.OneToOne&&2===e.members.length&&(e.members[0].regId===t&&e.members[1].regId!==t||e.members[1].regId===t&&e.members[0].regId!==t)?p.a.Description.OneToOne:p.a.Description.Conference}(t,e.messengerData.registrationInfo.regId)===p.a.Description.OneToOne)}catch(n){return n instanceof u.DuplicateError?Object(h.default)(h.default.NOTICE,"%s: Refusing to create chat for mailboxId=%s: %s",x,t.id,n):(Object(h.default)(h.default.ERROR,"%s: Failed to create chat for mailboxId=%s: %s",x,t.id,n),e.leaveChatFunction(t.id).catch(e=>{Object(h.default)(h.default.ERROR,"%s: Failed to leave mailboxId=%s: %s",x,t.id,e)})),Promise.reject(n)}if(e.kmsMode){Object(h.default)(h.default.INFO,"%s: Storing chat key in KMS",x);const n=e.messengerData.keyManager;return void 0===t.protectedKey||void 0===t.protectedKey.payload||void 0===t.protectedKey.mac||void 0===t.protectedKey.nonce||void 0===n.mgmtKey?e.leaveChatFunction(t.id).then(()=>Promise.reject(new Error("Leaving chat with id="+t.id+"; no protectedKey found"))):Object(g.authDecrypt)({content:t.protectedKey.payload,tag:t.protectedKey.mac},t.protectedKey.nonce,n.mgmtKey).then(l=>(n.setChatKey(t.id,l),e.messengerData.db.findChat(t.id).state=r.a.State.WaitingForRestore,B(e,t,l))).catch(n=>(Object(h.default)(h.default.WARNING,"%s: Failed to store chat key in KMS: %s",x,n),e.leaveChatFunction(t.id).then(()=>Promise.reject(new Error("Leaving chat with id="+t.id+"; failed to decrypt protectedKey: "+n.message)))))}return e.messengerData.keyManager.getChatKey(t.id).catch(n=>{if(n instanceof u.NotFoundError)throw Object(h.default)(h.default.INFO,"%s: Failed to recover key for chatId=%s; automatically leaving chat",x,t.id),e.leaveChatFunction(t.id).catch(function(e){Object(h.default)(h.default.ERROR,"%s: Failed to leave chatId=%s; error=%s",x,t.id,e)}),new u.Error("Failed to create chat");return Object(h.default)(h.default.NOTICE,"%s: Could not get chat key for chatId=%s; proceeding without subject or application data; error=%s",x,t.id,n),null}).then(n=>{const l=e.messengerData.db.findChat(t.id);if(l.state!==r.a.State.WaitingForKey)throw new u.Error(`Chat data state changed to ${l.state} while storing for `+`chatId=${t.id}`);return l.state=r.a.State.WaitingForRestore,B(e,t,n)}).catch(e=>(Object(h.default)(h.default.ERROR,"%s: Chat id=%s was not created; error=%s",x,t.id,e),Promise.reject(e)))}(e,t).catch(n=>{throw n instanceof u.DuplicateError&&e.leaveChatFunction(t.id),n}).then(t=>(function(e,t){if(Object(h.default)(h.default.DEBUG1,"%s: Resolving 1:1 conflicts for %s",x,t),!1===t.isOneToOne||t.state===r.a.State.Defunct)return Object(h.default)(h.default.DEBUG1,"%s: No need to resolve conflicts for %s that isn't 1:1 or non-Defunct",x,t),Promise.resolve(t);const n=t.getPeerRegId(e.messengerData.registrationInfo.regId),l=e.messengerData.db.getPeerChatId(n);if(!l)return e.messengerData.db.addPeerChatId(n,t.mailboxId),Object(h.default)(h.default.DEBUG1,"%s: No existing 1:1 with regId=%s found to conflict with %s",x,n,t),Promise.resolve(t);if(l===t.mailboxId)return Object(h.default)(h.default.DEBUG1,"%s: %s is already the current 1:1 with regId=%s",x,t,n),Promise.resolve(t);const i=e.messengerData.db.getChat(l);let s,o;Object(R.default)(void 0!==i),i.creationTime.getTime()>t.creationTime.getTime()?(o=i,s=t):(o=t,s=i,e.messengerData.db.addPeerChatId(n,t.mailboxId));return Object(h.default)(h.default.INFO,"%s: Found duplicate 1:1 chat for peer regId=%s; leaving %s (%s) and keeping %s (%s)",x,n,s,s.creationTime,o,o.creationTime),e.leaveChatFunction(s.mailboxId).catch(e=>(Object(h.default)(h.default.ERROR,"Failed to leave %s: %s",x,s,e),t)).then(()=>{if(s.mailboxId===t.mailboxId)throw new u.DuplicateError;return t})})(e,t)).then(e=>e.view):e.messengerData.keyManager.getChatKey(t.id).catch(e=>{Object(h.default)(h.default.WARNING,"%s: Could not get chat key for Chat %s; protected fields will not be updated; error=%s",x,t.id,e)}).then(n=>void 0===n?(Object(h.default)(h.default.DEBUG1,"%s: Key not found for chatId=%s",x,t.id),[void 0,void 0]):Promise.all([e.messengerData.rim_im.unprotectServerSubject(t,n),void 0===t.data?Promise.resolve(void 0):e.messengerData.rim_im.unprotectServerData(t,n),void 0===t.privateData?Promise.resolve(void 0):e.messengerData.rim_im.unprotectServerPrivateData(t)])).then(i=>{const s=i[0],o=i[1],u=i[2],d=n.getParticipantViews(),g=t.members.sort((e,t)=>e.regId<t.regId?-1:e.regId>t.regId?1:0);function f(t){Object(h.default)(h.default.INFO,"%s: Found new participant for chatId=%s with regId=%s; adding",x,n.mailboxId,t.regId),C({messengerData:e.messengerData,emitFunc:e.emitFunction},n,void 0,t.regId,a.a.State.Active,t.admin,!0,...L(t,n))}function m(t){t.regId!==e.messengerData.registrationInfo.regId?t.state===a.a.View.State.Active&&(Object(h.default)(h.default.INFO,"%s: Participant for chatId=%s with regId=%s is no longer in the chat; removing",x,n.mailboxId,t.regId),C({messengerData:e.messengerData,emitFunc:e.emitFunction},n,void 0,t.regId,a.a.State.Left,void 0,!0)):Object(h.default)(h.default.ERROR,"%s: Refusing to mark local regId=%s as having left chatId=%s",x,t.regId,n.mailboxId)}for(let t=0,l=0,r=d.length,i=g.length;t<r||l<i;){const s=d[t],o=g[l];t!==r?l!==i?s.regId!==o.regId?s.regId>o.regId?(f(o),++l):(m(s),++t):(C({messengerData:e.messengerData,emitFunc:e.emitFunc},n,void 0,s.regId,a.a.State.Active,o.admin,!0,...L(o,n)),++t,++l):(m(s),++t):(f(o),++l)}!0===n.viewDirty&&Object(h.default)(h.default.INFO,"%s: Updating %s: Local and mailbox participant lists differ; an update will be issued",x,n);try{const r=M(n,t.description,e.messengerData.registrationInfo.regId);if(n.isOneToOne&&!r){Object(h.default)(h.default.INFO,"%s: Updating %s: Converting 1:1 to MPC",x,n),n.isOneToOne=!1;const r=l.participants[0].regId===e.messengerData.registrationInfo.regId?l.participants[1].regId:l.participants[0].regId;e.messengerData.db.removePeerChatId(r,t.id)}}catch(l){throw Object(h.default)(h.default.ERROR,"%s: Failed to determine chat type for chatId=%s: %s",x,t.id,l),e.leaveChatFunction(t.id).catch(function(e){Object(h.default)(h.default.ERROR,"%s: Failed to leave %s: %s",x,n,e)}),l}if(void 0!==s&&n.subject!==s&&(Object(h.default)(h.default.INFO,"%s: Updating %s: Saving new subject",x,n),n.subject=s),t.invitePolicy!==p.a.InvitePolicy.Anyone){const e=t.invitePolicy===p.a.InvitePolicy.AdminOnly?r.a.View.InvitePolicy.AdminsOnly:r.a.View.InvitePolicy.ParticipantsOnly;n.invitePolicy!==e&&(Object(h.default)(h.default.INFO,"%s: Updating %s: Saving new invite policy=%s",x,n,e),n.invitePolicy=e)}else Object(h.default)(h.default.NOTICE,"%s: Ignoring unknown or unsupported invite policy %s for mailboxId=%s",x,t.invitePolicy,t.id);if(void 0!==o)try{Object(A.a)(n.appData,o)||(Object(h.default)(h.default.INFO,"%s: Updating %s: Saving new app data",x,n),n.appData=o)}catch(e){Object(h.default)(h.default.NOTICE,"%s: Ignoring invalid app data in metadata for mailboxId=%s: %s",x,t.id,e)}if(void 0!==u)try{Object(A.a)(n.appPrivateData,u)||(Object(h.default)(h.default.INFO,"%s: Updating %s: Saving new app private data",x,n),n.appPrivateData=u)}catch(e){Object(h.default)(h.default.NOTICE,"%s: Ignoring invalid app private data in metadata for mailboxId=%s: %s",x,t.id,e)}const y=new Date(t.createdTime);return y.getTime()!==n.creationTime.getTime()&&(Object(h.default)(h.default.INFO,"%s: Updating %s: Saving new creation time=%s",x,n,y),n.creationTime=y),n.viewDirty&&(Object(h.default)(h.default.INFO,"%s: Updating %s: Generating and emitting new view",x,n),l=n.view,e.messengerData.chatCache.set(l),e.emitFunction("chatUpdated",new c.ChatUpdated(l))),$(e,n)&&e.mailboxesNeedingSignatureUpdate.add(n.mailboxId),l}).catch(function(e){return Object(h.default)(h.default.ERROR,"%s: Failed to update chatId=%s; error=%s",x,t.id,e),l})}function B(e,t,n){const l=e.messengerData.db.findChat(t.id);if(l.state!==r.a.State.WaitingForRestore)throw new u.Error(`Chat data state changed to ${l.state} while storing for `+`chatId=${t.id}`);let i;return i=null===n?["",{}]:[e.messengerData.rim_im.unprotectServerSubject(t,n),void 0===t.data?Promise.resolve({}):e.messengerData.rim_im.unprotectServerData(t,n),void 0===t.privateData?Promise.resolve({}):e.messengerData.rim_im.unprotectServerPrivateData(t)],Promise.all(i).then(n=>{const l=e.messengerData.db.findChat(t.id);if(l.state!==r.a.State.WaitingForRestore)throw new u.Error(`Chat data state changed to ${l.state} while unprotecting `+`metadata to create mailbox for chatId=${t.id}`);const i=void 0===n[0]?"":n[0],s=n[1],o=n[2];if(Object(h.default)(h.default.DEBUG2,"%s: Parsed subject='%s' for chatId=%s",x,i,t.id),Object(h.default)(h.default.DEBUG2,"%s: Parsed data='%s' for chatId=%s",x,JSON.stringify(s),t.id),Object(h.default)(h.default.DEBUG2,"%s: Parsed private data='%s' for chatId=%s",x,JSON.stringify(o),t.id),"chat"!==t.type){const n=`Ignoring chatId=${t.id} with unknown `+`type=${t.type}`;throw Object(h.default)(h.default.ERROR,"%s: %s",x,n),e.removeChatFunction(t.id),new u.Error(n)}try{const n=M(l,t.description,e.messengerData.registrationInfo.regId);l.creationTime=new Date(t.createdTime),l.isOneToOne=n,l.subject=i,l.invitePolicy=t.invitePolicy===p.a.InvitePolicy.AdminOnly?r.a.View.InvitePolicy.AdminsOnly:r.a.View.InvitePolicy.ParticipantsOnly,l.appData=s,l.appPrivateData=o;const a=l.view;return e.messengerData.chatCache.set(a),e.emitFunction("chatAdded",new c.ChatAdded(a)),$(e,l)&&e.mailboxesNeedingSignatureUpdate.add(l.mailboxId),l}catch(n){throw e.leaveChatFunction(t.id).catch(function(e){Object(h.default)(h.default.ERROR,"%s: Failed to leave chatId=%s; error=%s",x,t.id,e)}),n}}).catch(function(e){throw Object(h.default)(h.default.ERROR,"%s: Chat id=%s was not created; error=%s",x,t.id,e),new u.Error("Failed to create chat")})}function L(e,t){const n=void 0===t?void 0:t.getParticipantSignatureData(e.regId);return void 0!==e.membershipSignature?void 0===n||n.signature!==e.membershipSignature?[a.a.SignatureState.Uncomputed,e.membershipSignature]:[void 0,void 0]:[a.a.SignatureState.Unavailable,""]}function $(e,t,n=!1){if(void 0===t)return!1;switch(t.state){case r.a.State.Joining:case r.a.State.WaitingForKey:case r.a.State.Leaving:case r.a.State.Defunct:return!1;default:if(n)return!0}switch(t.getParticipantSignatureData(e.messengerData.registrationInfo.regId).state){case a.a.SignatureState.Unavailable:case a.a.SignatureState.Unknown:return!0;default:return!1}}function q(e,t){if(void 0!==e.mailboxFilter&&!e.mailboxFilter.has(t))return!1;const n=e.messengerData.db.getChat(t);if(!$(e,n))return!1;Object(h.default)(h.default.INFO,"%s: Exporting membership signature for join request for chatId=%s",x,t);const l=new Promise((n,l)=>{w.signMembership(e.messengerData.keyManager.getCachedChatKey(t),e.messengerData.registrationInfo.regId,e.messengerData.registrationInfo.regId).then(n,l)}).then(n=>e.requestManager.retryableRequest(()=>{const l=e.messengerData.db.getChat(t);if(!$(e,l))return Object(h.default)(h.default.INFO,"%s: Membership signature for chatId=%s already exported",x,t),Promise.resolve();const r=n.toString();return e.messengerData.managementClient.join(t,r).then(()=>{const n=e.messengerData.db.getChat(t);void 0!==n?(Object(R.default)(void 0!==e.currentJoinRequest),e.currentJoinRequest.chat===n?$(e,n,!0)?(C({messengerData:e.messengerData,emitFunc:e.emitFunction},n,void 0,e.messengerData.registrationInfo.regId,void 0,void 0,!1,a.a.SignatureState.Verified,r),Object(h.default)(h.default.INFO,"%s: Successfully updated membership signature for chatId=%s",x,t)):Object(h.default)(h.default.NOTICE,"%s: Ignoring successful membership signature update for chatId=%s; unexpected chat state=%s",x,t,n.state):Object(h.default)(h.default.NOTICE,"%s: Ignoring successful membership signature update for chatId=%s; chat instance has changed",x,t)):Object(h.default)(h.default.NOTICE,"%s: Ignoring successful membership signature update for chatId=%s; chat no longer exists",x,t)})})).then(()=>{e.mailboxesNeedingSignatureUpdate.delete(t),e.currentJoinRequest=void 0,H(e)}).catch(n=>{Object(h.default)(h.default.ERROR,"%s: Failed to update membership signature in chatId=%s; error=%s",x,t,n),h.default.logErrorForDebugging(n),e.currentJoinRequest=void 0;try{e.handleNetworkErrorFunction(t,n)}catch(n){}});return e.currentJoinRequest={chat:n,promise:l},!0}function H(e){if(void 0===e.outstandingFetchAll)if(e.fetchAndStoreAllMailboxesNeeded)void 0===e.mailboxFilter?X(e):G(e);else if(void 0===e.currentJoinRequest)for(const t of e.mailboxesNeedingSignatureUpdate.values()){if(q(e,t))return;e.mailboxesNeedingSignatureUpdate.delete(t)}else Object(h.default)(h.default.DEBUG2,"%s: Existing join request outstanding; not issuing another",x);else Object(h.default)(h.default.DEBUG2,"%s: Existing request to fetch all mailboxes outstanding; %s",x,"not issuing another")}function W(e,t){return void 0===e.mailboxFilter||e.mailboxFilter.has(t.id)?(Object(h.default)(h.default.INFO,"%s: Storing mailboxId=%s",x,t.id),k(e,t)):(Object(h.default)(h.default.NOTICE,"%s: Refusing to store mailbox id=%s that isn't in the filter",x,t.id),Promise.reject(new u.Error("mailbox not in filter")))}function X(e){Object(R.default)(void 0===e.mailboxFilter),Object(h.default)(h.default.INFO,"%s: Fetching and storing all mailboxes",x),e.fetchAndStoreAllMailboxesNeeded=!1;const{out:t,finalize:n}=U(!0,()=>e.outstandingFetchAll,t=>{e.outstandingFetchAll=t},()=>{e.outstandingFetchAll=void 0},()=>{X(e)},n=>{e.fetchAndStoreAllMailboxesNeeded=!0,t.reject(n)});return Object(R.default)(void 0!==t),n?(e.requestManager.retryableRequest(()=>{const t=e.outstandingFetchAll;return t.queued=!1,t.inProgress=!0,e.messengerData.managementClient.getAllMailboxes().catch(t=>{if(t instanceof u.TemporaryFailure){const t=e.outstandingFetchAll;t.queued=!0,t.inProgress=!1,t.again=!1}throw t})}).then(t=>{const l=e.outstandingFetchAll;if(Object(h.default)(h.default.INFO,"%s[%s]: Processing all mailboxes response with %d mailboxes",x,N(l),t.length),!0===l.store&&!1===l.again){const r=new Set(e.messengerData.db.chats.keys());let i=0;const s=Promise.all(t.map(t=>(r.delete(t.id),k(e,t).then(e=>(++i,e)).catch(e=>{Object(h.default)(h.default.INFO,"%s[%s]: Failed to store mailboxId=%s from all mailboxes response; error=%s",x,N(l),t.id,e)}))));for(const t of r)e.removeChatFunction(t);return s.then(t=>{Object(h.default)(h.default.INFO,"%s[%s]: Stored %d mailboxes from all mailboxes response",x,N(l),i),n(e,t)})}n(e,t)}).catch(t=>{const l=e.outstandingFetchAll;Object(h.default)(h.default.WARNING,"%s[%s]: Fetch %sfor all mailboxes failed: %s",x,N(l),l.store?"and store ":"",t),n(e,void 0,t)}),t.promise):t.promise}function G(e){Object(R.default)(void 0!==e.mailboxFilter),Object(h.default)(h.default.INFO,"%s: Fetching all %d filtered mailboxes",x,e.mailboxFilter.size),e.fetchAndStoreAllMailboxesNeeded=!1;const{out:t,finalize:n}=U(!0,()=>e.outstandingFetchAll,t=>{e.outstandingFetchAll=t},()=>{e.outstandingFetchAll=void 0},()=>{G(e)},n=>{e.fetchAndStoreAllMailboxesNeeded=!0,t.reject(n)});if(Object(R.default)(void 0!==t),!n)return t.promise;const l=new Set(e.messengerData.db.chats.keys()),r=[],i=[];for(const t of e.mailboxFilter)i.push(F(e,t,!0).then(e=>{r.push(e)}).catch(()=>{})),l.delete(t);for(const t of l)e.removeChatFunction(t);return Promise.all(i).then(()=>{Object(h.default)(h.default.INFO,"%s: Fetched %d/%d filterered mailboxes",x,r.length,i.length),n(e,r)})}var V=class{constructor(e,t,n,l,r,i,s,o){const a={messengerData:e,requestManager:t,mailboxFilter:n,kmsMode:l,emitFunction:r,leaveChatFunction:i,removeChatFunction:s,handleNetworkErrorFunction:o,outstanding:new Map,mailboxesNeedingSignatureUpdate:new Set,fetchAndStoreAllMailboxesNeeded:!1,outstandingFetchAll:void 0};D.privateData(this,a)}fetch(e){return F(D.get(this),e)}store(e){return W(D.get(this),e)}fetchAndStore(e,t=!1){const n=D.get(this);return!1===t?F(n,e,!0):void F(n,e,!0).then(()=>{}).catch(t=>{Object(h.default)(h.default.WARNING,"%s: Failed to fetch and store mailboxId=%s: %s; ignoring",x,e,t)})}fetchAndStoreAllMailboxes(){const e=D.get(this);void 0===e.mailboxFilter?X(e).catch(()=>{}):G(e).catch(()=>{})}fetching(e){return D.get(this).outstanding.has(e)}doServerRequests(){H(D.get(this))}},K=n(29),z=n(44),Y=n(7);class J{constructor(e,t){Object.defineProperty(this,"messageStorageFactory",{value:e}),Object.defineProperty(this,"regId",{value:t}),Object.defineProperty(this,"chats",{value:new Map}),Object.defineProperty(this,"identityMailboxId",{value:`id.${t}`}),Object.defineProperty(this,"identityBookmarkData",{value:new z.a}),Object.defineProperty(this,"peerPromises",{value:new Map}),Object.defineProperty(this,"peerChatIds",{value:new Map})}createChat(e,t,n=[],l=!1){if(this.chats.has(e))throw new u.DuplicateError(`Chat with mailboxId=${e} already exists`);let i=!1,s=!1;for(const e of n)e.regId===this.regId?i=!0:s=!0;if(n.length>0&&!i)throw new u.Error("Participants must include the local user");if(l){if(2!==n.length||!i||!s)throw new u.Error("1:1 chats must include the local user and one other peer");const e=n[0].regId===this.regId?n[1].regId:n[0].regId;if(this.peerPromises.has(e))throw new u.DuplicateError(`1:1 chat with regId=${e} already being created`)}const o=new r.a(this.messageStorageFactory,e,t,l);for(const e of n)o.setParticipant(e.regId,e.state,e.admin,e.signatureState,e.signature);return this.chats.set(e,o),o}addPeerPromise(e,t){this.peerPromises.set(e,t)}getPeerPromise(e){return this.peerPromises.get(e)}removePeerPromise(e){this.peerPromises.delete(e)}addPeerChatId(e,t){this.peerChatIds.set(e,t)}getPeerChatId(e){return this.peerChatIds.get(e)}removePeerChatId(e,t){void 0!==t&&this.peerChatIds.get(e)!==t||this.peerChatIds.delete(e)}findChat(e){var t=this.chats.get(e);if(!t)throw new u.NotFoundError("Could not find chat with chatId="+e);return t}getChat(e){return this.chats.get(e)}removeChat(e){this.chats.delete(e)}findBookmarkData(e){if(e.startsWith("id.")){if(e===this.identityMailboxId)return this.identityBookmarkData;throw new u.NotFoundError("No such bookmark: "+e)}return this.findChat(e).bookmarkData}updateChatAndParticipantStateData(e,t){let n,l,r=!1;for(const n of t){const t=n.regId,l=n.status;t===this.regId&&n.messageId.isGreaterThan(e.statusMessageId)&&(e.statusMessageId=n.messageId);const i=void 0!==l.r?new Y.a(l.r):void 0,s=void 0!==l.d?new Y.a(l.d):i;let o=e.getParticipantMessageInfo(t);if(void 0===o&&(e.setParticipant(t,a.a.State.Left,!1),o=e.getParticipantMessageInfo(t)),s){const l=o.deliveredMsgId;l.isLessThan(s)&&(o.deliveredMsgId=s,o.deliveredTimestamp=n.timestamp),r||t===this.regId||(r=s.isGreaterThan(e.partialDeliveredMsgId)||l.isLessThanOrEqual(e.fullDeliveredMsgId))}if(i){const l=o.readMsgId;l.isLessThan(i)&&(o.readMsgId=i,o.readTimestamp=n.timestamp),r||t===this.regId||(r=i.isGreaterThan(e.partialReadMsgId)||l.isLessThanOrEqual(e.fullReadMsgId))}}if(r){for(const t of e.getParticipantMessageInfos(this.regId,!0)){const r=t.msgInfo.deliveredMsgId,i=t.msgInfo.readMsgId;(void 0===n||n.isGreaterThan(r))&&(n=r),r.isGreaterThan(e.partialDeliveredMsgId)&&(e.partialDeliveredMsgId=r),(void 0===l||l.isGreaterThan(i))&&(l=i),i.isGreaterThan(e.partialReadMsgId)&&(e.partialReadMsgId=i)}n&&(e.fullDeliveredMsgId=n),l&&(e.fullReadMsgId=l)}}}var Z=n(32),Q=n(24),ee=n(16),te=n.n(ee);function ne(e){this.binary=e}function le(e,t,n,l,r,i){if(!(e instanceof Y.a)||0==e.length)throw new u.Error("MessageData requires the messageId parameter be a non-empty instance of bbm.mailbox.MessageId: messageId="+e);if(this.messageId=e,"string"!=typeof t||0==t.length)throw new u.Error("MessageData requires the userId parameter be a non-empty string: userId="+t);if(this.userId=t,!n||!Number.isInteger(n))throw new u.Error("MessageData requires the timestamp parameter be an integer larger than 0: timestamp="+n);if(this.timestamp=n,!(l instanceof ne))throw new u.Error("MessageData requires the message parameter be an instance of bbm.mailbox.Message: message="+l);this.message=l,this.fromPull=!0===r,this.onlineOnly=!0===i}ne.prototype.toString=function(){return Object(f.array2hex)(this.binary)},le.prototype.toString=function(){return"MessageData{M="+this.messageId+" r="+this.userId+" t="+this.timestamp+(this.fromPull?" pulled":"")+(this.onlineOnly?" online":"")+"}"};const re=new j.a,ie="ContentClient",se=u.PermanentFailure,oe=u.TemporaryFailure,ae=u.Forbidden,ue=u.NotFound;var ce=class{constructor(e){re.privateData(this,{sipTransport:e})}post(e,t,n){n=Object.assign({onlineOnly:!1,pushAsStatus:!1,replaces:[],replacesAll:void 0},n),Object(R.default)("string"==typeof e&&e.length>0,"Bad argument: mailboxId"),Object(R.default)(t instanceof Uint8Array&&t.length>0,"Bad argument: message"),Object(R.default)("boolean"==typeof n.onlineOnly,"Bad argument: options.onlineOnly"),Object(R.default)("boolean"==typeof n.pushAsStatus,"Bad argument: options.pushAsStatus"),Object(R.default)(Array.isArray(n.replaces),"Bad argument: options.replaces"),Object(R.default)(void 0===n.replacesAll||n.replacesAll instanceof Y.a,"Bad argument: options.replacesAll");const l=re.get(this);return Object(h.default)(h.default.INFO,"%s: Posting message size=%d to m=%s",ie,t.length,e),new Promise((r,i)=>{let s,o;try{const l=new te.a.PostRequest,r=new te.a.PostRequest.MetaData;n.onlineOnly&&r.setOnlineOnly(!0),n.pushAsStatus&&r.setPushAsStatus(!0);for(const e of n.replaces)Object(R.default)(e instanceof Y.a&&!e.isEmpty(),"Bad argument: options.replaces"),r.addReplaces(e.binary);void 0!==n.replacesAll&&r.setReplacesAll(n.replacesAll.binary),l.setMetaData(r),l.setMessageData(t),o=l.serializeBinary()}catch(t){return i(new se(`Failed to create post for chatId=${e}; error=${t}`)),void h.default.logErrorForDebugging(t)}try{s=l.sipTransport.mcpPost(e,o)}catch(t){return void i(new oe(`Failed to send post for mailboxId=${e}; error=${t}`))}s.then(n=>{const l=e=>{i(new se(e+`; response=${d.e(n)}`))};try{if(!n)return void l(`Bad post response for mailboxId=${e}`);if(!n.mbx_id||n.mbx_id!=e)return void l("MailboxId mismatch; expected post response for mailboxId="+e);if(200!=n.status_code)return void l(`Unexpected failure in post response for mailboxId=${e}`);const i=te.a.PostResponse.deserializeBinary(n.body),s=new Y.a(i.getMessageId_asU8());if(0===s.length)return void l(`No MessageId in post response for mailboxId=${e}`);let o;Object(h.default)(h.default.INFO,"%s: Posted message size=%d to m=%s with M=%s",ie,t.length,e,s),i.hasBookmarkSyncDelay()&&(o=i.getBookmarkSyncDelay()),r({messageId:s,syncDelay:o})}catch(t){l(`Failed to parse post response for mailboxId=${e}; error=`+t)}}).catch(t=>{if(!t||!t.status_code)return void i(new se(`Post for mailboxId=${e} failed; response=`+d.e(t)));let n=se;401==t.status_code||408==t.status_code||480==t.status_code||t.status_code>=500&&t.status_code<600?n=oe:403==t.status_code&&(n=ae),i(new n(`Post for mailboxId=${e} failed; cause=${t.cause}; `+`code=${t.status_code}`))})})}pull(e,t,n,l){Object(R.default)("string"==typeof e&&e.length>0,"Bad argument: mailboxId"),Object(R.default)(void 0===t||t instanceof Y.a,"Bad argument: pullPoint"),Object(R.default)(void 0===n||n instanceof Y.a,"Bad argument: stopPoint"),Object(R.default)(void 0===l||"boolean"==typeof l,"Bad argument: isForwardPull");const r=re.get(this);return t=t||new Y.a,n=n||new Y.a,Object(h.default)(h.default.DEBUG1,"%s: Pulling %s from m=%s; p=%s s=%s",ie,l?"forward":"in reverse",e,t,n),new Promise((i,s)=>{let o,a;try{const r=new te.a.PullRequest;l||r.setReadDirection(te.a.PullRequest.ReadDirection.REVERSE),t.isEmpty()||r.setMessageId(t.binary),n.isEmpty()||r.setStopMessageId(n.binary),a=r.serializeBinary()}catch(t){return void s(new se(`Failed to create pull for mailboxId=${e}; error=${t}`))}try{o=r.sipTransport.mcpPull(e,a)}catch(t){return void s(new oe(`Failed to send pull for mailboxId=${e}; error=${t}`))}o.then(r=>{const o=e=>{s(new se(e+`; response=${d.e(r)}`))};Object(h.default)(h.default.DEBUG1,"%s: Received pull %s response for m=%s; p=%s s=%s",ie,l?"forward":"in reverse",e,t,n);try{if(!r)return void o(`Bad pull response for mailboxId=${e}`);if(!r.mbx_id||r.mbx_id!=e)return void o("MailboxId mismatch; expected pull response for mailboxId="+e);if(200!=r.status_code)return void o(`Unexpected failure in pull response for mailboxId=${e}`);const s=te.a.PullResponse.deserializeBinary(r.body),a={messages:[],nextPullPoint:void 0,serverBookmark:void 0,syncDelay:void 0,gap:!1};let u=new Y.a,c=new Y.a;const d=s.getEntryList();for(const r of d){const i=r.getMetaData(),s=new le(new Y.a(i.getMessageId_asU8()),i.getUserId(),i.getTimestamp(),new ne(r.getMessageData_asU8()),!0,!1);if(u.isEmpty()&&(u=s.messageId),s.messageId.isLessThan(c))return void o("Messages are out of order in pull response for mailboxId="+e);c=s.messageId,(l?(t.isEmpty()||c.isGreaterThanOrEqual(t))&&(n.isEmpty()||c.isLessThan(n)):(n.isEmpty()||c.isGreaterThan(n))&&(t.isEmpty()||c.isLessThanOrEqual(t)))?a.messages.push(s):Object(h.default)(h.default.WARNING,"%s: Discarding %s from m=%s; not in %s pull range p=%s s=%s",ie,s,e,l?"forward":"reverse",t,n)}const p=new Y.a(s.getNextMessageId_asU8());!1===p.isEmpty()&&((l?0!==d.length&&!p.isGreaterThan(c)||!t.isEmpty()&&!p.isGreaterThan(t):0!==d.length&&!p.isLessThan(u)||!t.isEmpty()&&!p.isLessThan(t))?Object(h.default)(h.default.WARNING,"%s: Discarding np=%s; value is too %s",ie,p,l?"small":"large"):a.nextPullPoint=p);const g=new Y.a(s.getServerBookmark_asU8());if(0===g.length)return void o(`No ServerBookmark in pull response for mailboxId=${e}`);a.serverBookmark=g,s.hasBookmarkSyncDelay()&&(a.syncDelay=s.getBookmarkSyncDelay()),a.gap=s.getGap(),i(a)}catch(t){o(`Failed to parse pull response for mailboxId=${e}; error=`+t)}}).catch(r=>{if(Object(h.default)(h.default.DEBUG1,"%s: Failed pull %s response for m=%s; p=%s s=%s",ie,l?"forward":"in reverse",e,t,n),!r||!r.status_code)return void s(new se(`Pull for mailboxId=${e} failed; response=`+d.e(r)));let i=oe;403==r.status_code?i=ae:404==r.status_code&&(i=ue),s(new i(`Pull for mailboxId=${e} failed; cause=${r.cause}; `+`code=${r.status_code}`))})})}sync(e){Object(R.default)(Array.isArray(e),"Bad argument: mailboxes");const t=re.get(this);return new Promise((n,l)=>{let r,i;const s={serverBookmark:void 0,mailboxes:{}};try{const t=new te.a.SyncRequest;for(const n of e)try{const e=new te.a.SyncRequest.Mailbox;Object(R.default)("string"==typeof n.mailboxId&&0!==n.mailboxId.length),Object(R.default)(n.bookmark instanceof Y.a),Object(R.default)(void 0===n.maxMessageId||n.maxMessageId instanceof Y.a),e.setMailboxId(n.mailboxId),e.setClientBookmark(n.bookmark.binary),void 0===n.maxMessageId||n.maxMessageId.isEmpty()||e.setMaxMessageId(n.maxMessageId.binary),t.addMailboxes(e),s.mailboxes[n.mailboxId]={error:void 0,nextPullPoint:void 0,ids:void 0,gap:!1}}catch(e){Object(h.default)(h.default.WARNING,"%s: Ignoring mailbox to sync; error=%s: %s",ie,e,JSON.stringify(n))}i=t.serializeBinary()}catch(t){throw new se(`Failed to create sync for ${e.length} mailbox(es); error=`+t)}if(0!==i.length){try{r=t.sipTransport.mcpSync(i)}catch(t){throw new oe(`Failed to send sync for ${e.length} mailbox(es); error=`+t)}r.then(e=>{const t=t=>{l(new se(`${t}; response=${d.e(e)}`))};try{if(!e)return void t("Bad sync response");if(!e.mbx_id||"sync"!=e.mbx_id)return void t("MailboxId mismatch; expected sync response with mailboxId=sync");if(200!=e.status_code)return void t("Unexpected failure in sync response");const l=te.a.SyncResponse.deserializeBinary(e.body),r=new Y.a(l.getServerBookmark_asU8());if(0===r.length)return void t("No ServerBookmark in sync response");s.serverBookmark=r;for(const e of l.getErrorList()){const n=e.getMailboxId(),l=s.mailboxes[n];if(!l)return void t(`Received MailboxError for mailboxId=${n} that was `+"not in sync request");if(l.error)return void t(`Received duplicate MailboxError for mailboxId=${n}`);switch(e.getError()){case te.a.SyncResponse.MailboxError.Error.NOTSUBSCRIBED:l.error=new u.Forbidden;break;case te.a.SyncResponse.MailboxError.Error.NOTFOUND:l.error=new u.NotFound;break;default:return void t(`Received unknown MailboxError for mailboxId=${n}: `+e.getError())}l.gap=void 0}for(const e of l.getMailboxesList()){const n=e.getMailboxId(),l=s.mailboxes[n];if(!l)return void t(`Received Mailbox result for mailboxId=${n} that was `+"not in sync request");if(l.error)return void t("Received MailboxError and Mailbox result for mailboxId="+n);if(l.nextPullPoint||l.ids)return void t(`Received duplicate Mailbox result for mailboxId=${n}`);const r=new Y.a(e.getNextMessageId_asU8());r.length>0&&(l.nextPullPoint=r);const i=e.getIdList_asU8();i.length>0&&(l.ids=[]);let o=new Y.a;for(const e of i){const r=new Y.a(e);if(r.isEmpty())return void t("Received empty id in Mailbox result for mailboxId="+n);o.isLessThan(r)?(l.ids.push(r),o=r):t("Received id list with messageIds out of order for mailboxId="+n)}l.gap=e.getGap()}n(s)}catch(e){t(`Failed to parse sync response; error=${e}`),h.default.logErrorForDebugging(e)}}).catch(e=>{e&&e.status_code?l(new oe(`Sync for ${Object.keys(s.mailboxes).length} mailbox(es) `+`failed; cause=${e.cause}; code=${e.status_code}`)):l(new se(`Sync for ${Object.keys(s.mailboxes).length} mailbox(es) `+`failed; response=${d.e(e)}`))})}else n({})})}receiveOnlineMessage(e,t){const n=e.mbx_id;if("string"!=typeof n||0===n.length)throw new u.Error("Received online message for an invalid mailboxId="+n);try{const l=te.a.OnlineMessage.deserializeBinary(e.body),r=l.getEntryList();let i;l.hasBookmarkSyncDelay()&&(i=l.getBookmarkSyncDelay());for(const e of r){const l=e.getMetaData();t({mailboxId:n,messageData:new le(new Y.a(l.getMessageId_asU8()),l.getUserId(),l.getTimestamp(),new ne(e.getMessageData_asU8()),!1,l.getOnlineOnly()),syncDelay:i})}}catch(t){let l=e.body;throw l instanceof Uint8Array&&(l=new ne(l)),new u.Error("Failed to parse online message received from mailboxId="+n+"; error="+t+"; "+l)}}},de=n(18),pe=n(20),ge=n.n(pe),he=n(15),fe=n(17),me=n.n(fe);const ye="ManagementClient",be=de.default.Method;function ve(e,t,n){this.busClient=e,this.domain=t,this.regId=n}ve.prototype.createMailbox=function(e,t,n,l,r,i,s,o,a,c){Object(R.default)("chat"===e,"Bad argument: type"),Object(R.default)(t instanceof p.a.AppData,"Bad argument: subject"),Object(R.default)(!0===n,"Bad argument: isProtected"),Object(R.default)(p.a.UpdatePolicy.hasOwnProperty(l),"Bad argument: updatePolicy"),Object(R.default)(p.a.InvitePolicy.hasOwnProperty(r),"Bad argument: invitePolicy"),Object(R.default)(p.a.Description.hasOwnProperty(i),"Bad argument: description"),Object(R.default)("string"==typeof s,"Bad argument: membershipSignature"),Object(R.default)(void 0===o||o instanceof p.a.AppData,"Bad argument: data"),Object(R.default)(void 0===a||a instanceof Uint8Array,"Bad argument: privateData"),Object(R.default)(void 0===c||c instanceof Object&&!Array.isArray(c),"Bad argument: protectedKey");const g=`/domains/${this.domain}/user/mailboxes?caller=${this.regId}`,m={type:e,subject:t.toString(),protected:n,updatePolicy:l,invitePolicy:r,description:i,membershipSignature:s,data:o?o.toString():void 0,privateData:a?f.array2b(a):void 0,protectedKey:c?f.array2b(d.d(c)):void 0};return this.busClient.request(g,this.busClient.requestOptions(be.POST),m).then(e=>{if(h.default.debug(h.default.DEBUG1,"%s: Received create mailbox response entity: %s",ye,he.stringify(e)),!e)throw new u.PermanentFailure("Failed to create mailbox; bad response");if("string"!=typeof e.id||0===e.id.length)throw new u.PermanentFailure("Failed to create mailbox; bad mailboxId in response="+he.stringify(e));if("number"!=typeof e.createdTime)throw new u.PermanentFailure("Failed to create mailbox; bad createdTime in response="+he.stringify(e));return{id:e.id,createdTime:e.createdTime}})},ve.prototype.updateMailbox=function(e,t){Object(h.default)(h.default.INFO,"%s: Updating mailboxId=%s",ye,e),Object(R.default)(void 0===t.subject||t.subject instanceof p.a.AppData),Object(R.default)(void 0===t.invitePolicy||p.a.InvitePolicy.hasOwnProperty(t.invitePolicy)),Object(R.default)(void 0===t.data||t.data instanceof p.a.AppData),Object(R.default)(void 0===t.privateData||t.privateData instanceof Uint8Array&&0!==t.privateData.length);const n=`/domains/${this.domain}/user/mailboxes/${e}?caller=${this.regId}`,l={};return t.invitePolicy&&(l.invitePolicy=t.invitePolicy),t.subject&&(l.subject=t.subject.toString()),t.data&&(l.data=t.data.toString()),t.privateData&&(l.privateData=f.array2b(t.privateData)),0==Object.keys(l).length?(Object(h.default)(h.default.WARNING,"%s: Rejecting empty update for mailboxId=%s",ye,e),Promise.reject(new u.PermanentFailure("Empty update requested"))):this.busClient.request(n,this.busClient.requestOptions(be.PUT),l)},ve.prototype.getMailbox=function(e){Object(R.default)("string"==typeof e&&e.length>0);const t=`/domains/${this.domain}/user/mailboxes/${e}?caller=${this.regId}`;return this.busClient.request(t).then(e=>new p.a(e))},ve.prototype.getAllMailboxes=function(){Object(h.default)(h.default.INFO,"%s: Getting all mailboxes",ye);const e=`/domains/${this.domain}/user/mailboxes?caller=${this.regId}`+"&size=0",t=[],n=l=>this.busClient.request(e+l).then(e=>{if(!Array.isArray(e.mailboxes))throw new u.PermanentFailure("Received invalid response while getting all mailboxes: response="+he.stringify(e));const r=t.length;if(e.mailboxes.reduce((e,t)=>{try{e.push(new p.a(t))}catch(e){Object(h.default)(h.default.ERROR,"%s: Ignoring mailbox in response; error=%s",ye,e)}return e},t),Object(h.default)(h.default.INFO,"%s: Successfully processed %d mailboxes; accumulated size=%d; %smore available",ye,t.length-r,t.length,e.hasMore?"":"no "),e.hasMore){if(t.length===r)return Object(h.default)(h.default.NOTICE,"%s: Get all mailboxes response indicated more mailboxes are available but contained no valid mailboxes; returning incomplete list"),t;let e;if(0===t.length||(e=`&from=${t[t.length-1].id}`)===l)throw new u.PermanentFailure("Failed to get all mailboxes; no valid mailboxes in response");return n(e)}return t});return n("")},ve.prototype.grant=function(e,t,n,l){Object(R.default)("string"==typeof e&&e.length>0,"Bad argument: mailboxId"),Object(R.default)("string"==typeof t&&t.length>0,"Bad argument: regId"),Object(R.default)("string"==typeof n,"Bad argument: membershipSignature");const r=`/domains/${this.domain}/user/mailboxes/${e}/members/${t}`+`?caller=${this.regId}`,i={membershipSignature:n,grant:void 0};return l&&(Object(R.default)(l instanceof Uint8Array&&l.length>0,"Bad argument: grantData"),i.grant=ge.a.base64Uint8Array(l)),this.busClient.request(r,this.busClient.requestOptions(be.PUT),i)},ve.prototype.join=function(e,t,n){Object(R.default)("string"==typeof e&&e.length>0,"Bad argument: mailboxId"),Object(R.default)(void 0===t||"string"==typeof t,"Bad argument: membershipSignature"),Object(R.default)(void 0===n||"object"==typeof n,"Bad argument: protectedKey");const l=`/domains/${this.domain}/user/mailboxes/${e}/members/${this.regId}`+`?caller=${this.regId}`,r={membershipSignature:t||void 0,protectedKey:n?f.array2b(d.d(n)):void 0};return this.busClient.request(l,this.busClient.requestOptions(be.PUT),r)},ve.prototype.removeMember=function(e,t){var n="/domains/"+this.domain+"/user/mailboxes/"+e+"/members/"+t+"?caller="+this.regId;return this.busClient.request(n,this.busClient.requestOptions(be.DELETE))},ve.prototype.addAdmin=function(e,t){var n="/domains/"+this.domain+"/user/mailboxes/"+e+"/admins/"+t+"?caller="+this.regId;return this.busClient.request(n,this.busClient.requestOptions(be.PUT))},ve.prototype.removeAdmin=function(e,t){var n="/domains/"+this.domain+"/user/mailboxes/"+e+"/admins/"+t+"?caller="+this.regId;return this.busClient.request(n,this.busClient.requestOptions(be.DELETE))},ve.prototype.getAllMailboxGrants=function(){var e=this,t="/domains/"+e.domain+"/user/mailboxgrants?caller="+e.regId,n=[];return new Promise(function(l,r){!function i(){const s=t+"&size=0"+(0===n.length?"":"&from="+n[n.length-1].mailboxId);let o=!1;e.busClient.request(s).then(e=>{if(!Array.isArray(e.grants))throw new u.PermanentFailure("Request to get all grants returned an invalid response: "+he.stringify(e));e.grants.forEach(function(e,t){var l;if("string"==typeof e.mailboxId&&0!==e.mailboxId.length)if(("number"==typeof e.inviter||e.inviter instanceof me.a)&&(l=e.inviter.toString()),l)if("string"==typeof e.grant&&0!==e.grant.length)try{n.push({mailboxId:e.mailboxId,sender:l,data:ge.a.unbase64Array(e.grant)}),o=!0}catch(n){Object(h.default)(h.default.WARNING,"%s: Ignoring grant that failed to decode for mailboxId=%s for inviter=%s at index=%s; grant=%s; error=%s",ye,e.mailboxId,e.inviter,t,e.grant,n)}else Object(h.default)(h.default.WARNING,"Received grant for mailboxId="+e.mailboxId+" with invalid grant="+e.grant+" at index="+t);else Object(h.default)(h.default.WARNING,"Received grant for mailboxId="+e.mailboxId+" with invalid inviter="+e.inviter+" at index="+t);else Object(h.default)(h.default.WARNING,"Received grant with invalid mailboxId="+e.mailboxId+" at index="+t)}),e.hasMore&&o?i():l(n)}).catch(function(e){r(e)})}()})};const Ee=new j.a,Ie="SyncManager";class Se{constructor(e,t,n,l,r){Object(R.default)(null!==e&&"object"==typeof e,"Bad argument: contentClient"),Object(R.default)("function"==typeof e.post,"Bad argument: contentClient.post"),Object(R.default)("function"==typeof e.pull,"Bad argument: contentClient.pull"),Object(R.default)("function"==typeof e.sync,"Bad argument: contentClient.sync"),Object(R.default)(t instanceof J,"Bad argument: db"),Object(R.default)("function"==typeof n,"Bad argument: receiveFunction"),Object(R.default)("function"==typeof r,"Bad argument: gapDetectedFunction"),Ee.privateData(this,new Pe(e,t,n,l,r))}startReconnectSync(){const e=Ee.get(this);if(0===e.trackedMailboxes.size)return void Object(h.default)(h.default.INFO,"%s: No mailboxes tracked; reconnect sync will not be started",Ie);Object(h.default)(h.default.INFO,"%s: Starting reconnect sync for %d mailbox(es)",Ie,e.trackedMailboxes.size);let t=++e.requestId,n=[];for(let l of e.trackedMailboxes){let r,i,s;n.length>=Se.maxMailboxesPerSync&&(e.sendSync(t,n),n=[],t=++e.requestId);try{r=e.db.findBookmarkData(l)}catch(t){t instanceof u.NotFoundError?(Object(h.default)(h.default.NOTICE,"%s: Ignoring reconnect sync for m=%s; no bookmark data",Ie,l),e.trackedMailboxes.delete(l)):(Object(h.default)(h.default.ERROR,"%s: Ignoring reconnect sync for m=%s; error=%s",Ie,l,t),h.default.logErrorForDebugging(t));continue}r.bookmark.isEmpty()?(Object(h.default)(h.default.NOTICE,"%s: Missing bookmark for m=%s; most recent content will be pulled",Ie,l),i=new Oe(l,++e.requestId),s=(()=>{e.sendPull(i)})):(Object(h.default)(h.default.DEBUG1,"%s: Starting reconnect sync for m=%s",Ie,l),i=new we(l,t),s=(()=>{n.push({mailboxId:l,bookmark:r.bookmark,maxMessageId:r.maxMessageId})})),e.insert(i)&&s()}0!==n.length?e.sendSync(t,n):Object(h.default)(h.default.INFO,"%s: Not sending empty reconnect sync request",Ie)}transportDisconnected(){const e=Ee.get(this);Object(h.default)(h.default.INFO,"%s: Transport has disconnected; aborting %d requests",Ie,e.requestMap.size);for(const t of e.requestMap.values())t.clearTimers(),t.reject&&t.reject(new u.TemporaryFailure("Connection disconnected"));e.requestMap.clear(),e.syncDelay=Se.syncDelay}mailboxHasBeenLeft(e){const t=Ee.get(this);if(e.startsWith("id."))return void Object(h.default)(h.default.TRACE,"%s: Refusing to abort requests for m=%s",Ie,e);t.trackedMailboxes.delete(e);const n=t.requestMap.get(e);if(void 0!==n){const e="Chat has been left";t.syncAbort(h.default.INFO,e,n,new u.PermanentFailure(e))}}post(e,t,n){const l=Ee.get(this),r=n&&!0===n.onlineOnly;return Object(h.default)(h.default.DEBUG1,"%s: Sending post for m=%s%s",Ie,e,r?" online only":""),l.contentClient.post(e,t,n).then(t=>(Object(h.default)(h.default.DEBUG1,"%s: Received post response for m=%s with M=%s%s",Ie,e,t.messageId,r?" online only":""),l.setSyncDelay(t.syncDelay),!0!==r&&l.recordMessageId(e,t.messageId),t.messageId)).catch(t=>{throw Object(h.default)(h.default.ERROR,"%s: Failed to post to m=%s; error=%s",Ie,e,t),t})}reconcileFromPost(e,t){const n=Ee.get(this);try{n.db.findBookmarkData(e)}catch(t){return Object(h.default)(h.default.ERROR,"%s: Cannot send reconciliation post for m=%s; error=%s",Ie,e,t),Promise.reject(t)}return Object(h.default)(h.default.INFO,"%s: Sending reconciliation post for m=%s",Ie,e),n.contentClient.post(e,t).then(t=>{const l=t.messageId;try{return n.db.findBookmarkData(e).setBookmark(l),Object(h.default)(h.default.INFO,"%s: Using reconciliation post bookmark=%s for m=%s",Ie,l,e),n.recordMessageId(e,l,!0),l}catch(t){throw Object(h.default)(h.default.ERROR,"%s: Cannot set reconciliation post bookmark for m=%s; error=%s",Ie,e,t),t}}).catch(t=>{throw Object(h.default)(h.default.ERROR,"%s: Failed to send reconciliation post to m=%s; error=%s",Ie,e,t),t})}handleOnlineMessage(e){const t=Ee.get(this);return t.setSyncDelay(e.syncDelay),e.messageData.onlineOnly||t.recordMessageId(e.mailboxId,e.messageData.messageId),t.receiveFunction({mailboxId:e.mailboxId,messageData:e.messageData})}restore(e,t,n,l){Object(R.default)(!t||t instanceof Y.a,"Parameter 2 inconcistent with expectations"),Object(R.default)(!n||"function"==typeof n,"Parameter 3 inconcistent with expectations"),Object(R.default)(!l||"function"==typeof l,"Parameter 3 inconcistent with expectations");const r=Ee.get(this);return r.trackedMailboxes.add(e),new Promise((i,s)=>{try{r.db.findBookmarkData(e)}catch(t){return Object(h.default)(h.default.ERROR,"%s: Cannot restore content for m=%s; error=%s",Ie,e,t),void s(t)}let o,a;const c=new Me(e,++r.requestId,t,n,function(e,t){return a=e,o=t,l&&l(t)},function(){if(i(),Object(R.default)(a,"last bookmark data must be set"),o&&a.bookmark.isEmpty()){const t=new Oe(e,++r.requestId,o);r.insert(t)?r.sendPull(t):Object(R.default)(!1,"unexpected request outstanding")}},s);if(!r.insert(c))return Object(h.default)(h.default.ERROR,"%s: Cannot initiate restore for m=%s; restore already ongoing",Ie,e),void s(new u.TemporaryFailure("Request outstanding"));r.sendPull(c)})}retrySingleRequest(){Ee.get(this).retrySingleRequest()}}Object.defineProperty(Se,"maxMailboxesPerSync",{value:50,writable:!1}),Object.defineProperty(Se,"initialBackoff",{value:5e3,writable:!1}),Object.defineProperty(Se,"maxBackoff",{value:18e5,writable:!1}),Object.defineProperty(Se,"userRetryInterval",{value:5e3}),Object.defineProperty(Se,"syncDelay",{value:3e4}),Object.defineProperty(Se,"staleThreshold",{value:216e5});class _e{constructor(e,t){this.mailboxId=e,this.requestId=t,this.isSync=!0,this.requestType="Sync",this.isInSyncCycle=!0,this.startPoint=new Y.a,this.stopPoint=new Y.a;let n=null;Object.defineProperty(this,"retryData",{get:()=>n,set:e=>{n=Te.assign(n,e)}}),this.retryBackoff=Se.initialBackoff;let l=null;Object.defineProperty(this,"reconciliationData",{get:()=>l,set:e=>{l=Te.assign(l,e)}}),this.pullPoint=new Y.a,this.isBookmarkedPull=!1,this.completeFunction=null,this.isForward=!0,this.receiveFunction=null,this.resolve=null,this.reject=null}clearTimers(){this.retryData=null,this.reconciliationData=null}}class Te{constructor(e,t,n){this.fired=!1,this.id=setTimeout(()=>{this.fired=!0,e()},n),this.refCount=0,this.cancelledCallback=t}addRef(){return++this.refCount,this}delRef(){return--this.refCount,!this.fired&&this.refCount<=0&&(clearTimeout(this.id),this.cancelledCallback()),null}static assign(e,t){return e===t?e:null===t?(Object(R.default)(e instanceof Te,"left must be a TimerData instance"),e.delRef()):null===e?(Object(R.default)(t instanceof Te,"right must be a TimerData instance"),t.addRef()):(Object(R.default)(!1,"Unknown data types being assigned"),null)}}class we extends _e{constructor(e,t){super(e,t),this.requestType="Reconnect Sync"}}class Re extends _e{constructor(e,t){super(e,t),this.isSync=!1,this.requestType="Reconnect Pull"}}class Ae extends we{constructor(e,t){super(e,t),this.requestType="Reconciliation Sync",this.isInSyncCycle=!1}}class Oe extends Re{constructor(e,t,n){super(e,t),this.requestType="Reconciliation Pull",this.isInSyncCycle=!1,this.pullPoint=n||new Y.a,this.isForward=!1,this.completeFunction=(e=>!e.bookmark.isEmpty())}}class Ce extends Re{constructor(e,t,n,l){super(e,t),this.requestType="Recovery Pull",this.isInSyncCycle=!1,this.pullPoint=n,this.isBookmarkedPull=!0,this.startPoint=n,this.stopPoint=l}}class Me extends Re{constructor(e,t,n,l,r,i,s){super(e,t),this.requestType="Restore Pull",this.isInSyncCycle=!0,this.pullPoint=n||new Y.a,this.completeFunction=r,this.isBookmarkedPull=!1,this.isForward=!1,this.receiveFunction=l||null,this.resolve=i,this.reject=s}}class Pe{constructor(e,t,n,l,r){this.contentClient=e,this.db=t,this.receiveFunction=n,this.errorFunction=l,this.gapDetectedFunction=r,this.trackedMailboxes=new Set,this.requestMap=new Map,this.requestId=0,this.syncDelay=Se.syncDelay,this.requestsAwaitingRetry=new Set}setSyncDelay(e){e>0&&e!==this.syncDelay&&(this.syncDelay=e,Object(h.default)(h.default.INFO,"%s: Using sync delay=%sms received from server",Ie,e))}insert(e){const t=this.requestMap.get(e.mailboxId);if(void 0!==t){if(t.isInSyncCycle||!e.isInSyncCycle)return Object(h.default)(h.default.INFO,"%s: Not starting %s for m=%s while %s is outstanding",Ie,e.requestType,e.mailboxId,t.requestType),!1;Object(h.default)(h.default.NOTICE,"%s: Starting %s for m=%s; outstanding %s rId=%d will be ignored",Ie,e.requestType,e.mailboxId,t.requestType,t.requestId),t.clearTimers()}return this.requestMap.set(e.mailboxId,e),!0}sendSync(e,t,n){Object(R.default)(0!==t.length),Object(h.default)(h.default.INFO,"%s: Sending sync request with rId=%d for %d mailbox(es)%s%s",Ie,e,t.length,...n?[" to reconcile m=",n]:["",""]),h.default.debug(h.default.DEBUG2,"%s: Sync request contains:\n  %s",Ie,t.map(e=>`${e.mailboxId}: b=${e.bookmark} max=${e.maxMessageId||""}`).join("\n  ")),this.contentClient.sync(t).then(t=>{this.handleSyncResults(e,t),this.retrySingleRequest()}).catch(t=>{h.default.logErrorForDebugging(t),this.handleSyncResults(e,null,t)}).catch(e=>{h.default.logErrorForDebugging(e)})}handleSyncResults(e,t,n){if(Object(h.default)(h.default.INFO,"%s: Sync result for rId=%d contains %d mailbox(es)%s%s",Ie,e,t?Object.keys(t.mailboxes).length:0,...n?[" with error=",n]:["",""]),void 0!==n){const t=++this.requestId;return Object(h.default)(h.default.ERROR,"%s: Failed to send sync request rId=%d; error=%s; %s%d",Ie,e,n,"request will be retried with rId=",t),void this.scheduleRetry(e,t)}h.default.debug(h.default.DEBUG2,"%s: sync results\n  sb=%s\n  %s",Ie,t.serverBookmark,Object.keys(t.mailboxes).map(e=>{const n=t.mailboxes[e];return`${e}: p=${n.nextPullPoint||""} g=${n.gap||""} `+`ids=${n.ids||""}`}).join("\n  ")),this.setSyncDelay(t.syncDelay);const l=t.serverBookmark;Object(R.default)(!l.isEmpty(),"Server bookmark must not be empty");const r=Object.keys(t.mailboxes),i=r.length;let s=i;for(const i of r){const r=t.mailboxes[i],o=this.requestMap.get(i);if(void 0===o){Object(h.default)(h.default.NOTICE,"%s: No outstanding sync request for m=%s; ignoring result",Ie,i);continue}if(!0!==o.isSync||o.requestId!==e){Object(h.default)(h.default.WARNING,"%s: Ignoring sync result for m=%s with rId=%d; %s rId=%d outstanding",Ie,i,e,o.requestType,o.requestId);continue}let a;try{a=this.db.findBookmarkData(i)}catch(n){n instanceof u.NotFoundError?this.syncAbort(h.default.NOTICE,"Ignoring pull response for unknown mailbox",o):this.syncAbort(h.default.ERROR,"Failed to load bookmark data",o,n);continue}if(r.error){(r.error instanceof u.NotFound||r.error instanceof u.Forbidden)&&this.errorFunction(o.mailboxId,r.error),this.syncAbort(h.default.ERROR,"Mailbox sync error",o,r.error);continue}if(l.isLessThan(a.bookmark)){this.regressBookmark(o,a,l);continue}let c=r.nextPullPoint||new Y.a;if(o.isInSyncCycle||c.isEmpty()||(Object(h.default)(h.default.NOTICE,"%s: Ignoring unexpected pullPoint=%s for m=%s in %s",Ie,c,i,o.requestType),c=new Y.a),!c.isEmpty()&&a.maxMessageId.isGreaterThan(c)){this.syncAbort(h.default.ERROR,"Pull point="+c+"is at or before known max="+a.maxMessageId,o);continue}if(r.gap&&(a.bookmark.isEmpty()?Object(h.default)(h.default.NOTICE,"%s, Ignoring gap in content detected in %s for m=%s b=",Ie,o.requestType,i):a.onlyFastForwarded?Object(h.default)(h.default.DEBUG1,"%s: Ignoring gap in content detected in %s for m=%s; ff-only=true",Ie,o.requestType,i):(Object(h.default)(h.default.DEBUG1,"%s: Gap in content detected in %s for m=%s b=%s",Ie,o.requestType,i,a.bookmark),this.gapDetectedFunction(i,a.bookmark))),this.reconcileMessageIds(o,r,l,c,a),c.isEmpty()){this.syncComplete(o,a,l),a.isUpToDate()||(Object(R.default)(s>0,"mbxUptToDateCount must not be zero"),--s);continue}Object(R.default)(s>0,"mbxUpToDateCount must not be zero"),--s;const d=new Re(o.mailboxId,++this.requestId);d.pullPoint=c,d.startPoint=o.startPoint,d.stopPoint=o.stopPoint,d.isBookmarkedPull=a.isUpToDate()&&c.isLessThanOrEqual(l),Object(R.default)(d.pullPoint.isGreaterThan(a.bookmark),"Pulling content that has been reconciled"),this.requestMap.set(d.mailboxId,d),this.sendPull(d)}Object(R.default)((()=>{let t=!1;return this.requestMap.forEach(n=>{n.requestId===e&&(Object(h.default)(h.default.ERROR,"%s: Request rId=%d for mailboxId=%s not cleaned up",Ie,e,n.mailboxId),t=!0)}),!t})(),"Not all mailboxes synced in response"),Object(h.default)(h.default.INFO,"%s: Completed sync for rId=%d for %d mailbox(es); %d %s up-to-date; sb=%s",Ie,e,i,s,1===s?"is":"are",l)}sendPull(e){Object(R.default)(!e.isSync,"Cannot send sync request as pull");const t=e.requestId,n=e.mailboxId;Object(h.default)(h.default.INFO,"%s: Sending %sbookmarked %s with rId=%d for m=%s from M=%s%s%s%s%s%s",Ie,e.isBookmarkedPull?"":"non-",e.requestType,t,n,e.pullPoint,...e.startPoint.isEmpty()&&e.stopPoint.isEmpty()?["","","","",""]:[" [",e.startPoint,", ",e.stopPoint,")"]),this.contentClient.pull(e.mailboxId,e.pullPoint,e instanceof Ce?e.stopPoint:new Y.a,e.isForward).then(e=>{this.handlePullResults(t,n,e),this.retrySingleRequest()}).catch(e=>{h.default.logErrorForDebugging(e),this.handlePullResults(t,n,null,e)}).catch(e=>{h.default.logErrorForDebugging(e)})}handlePullResults(e,t,n,l){const r=this.requestMap.get(t);if(void 0===r)return void Object(h.default)(h.default.NOTICE,"%s: Ignoring pull response for m=%s with rId=%d with no request data",Ie,t,e);if(Object(R.default)(t===r.mailboxId,"MailboxId mismatch; expected m={0}; got m={1}",t,r.mailboxId),!1!==r.isSync||r.requestId!==e)return void Object(h.default)(h.default.NOTICE,"%s: Ignoring pull response for m=%s with rId=%d; %s rId=%s outstanding",Ie,t,e,r.requestType,r.requestId);if(void 0!==l){if(l instanceof u.TemporaryFailure){const n=++this.requestId;return Object(h.default)(h.default.ERROR,"%s: Failed to send %s rId=%d for m=%s; %s%d; error=%s",Ie,r.requestType,e,t,"request will be retried later with rId=",n,l),void this.scheduleRetry(e,n)}return(l instanceof u.NotFound||l instanceof u.Forbidden)&&this.errorFunction(r.mailboxId,l),void this.syncAbort(h.default.ERROR,"Reconciliation pull failed",r,l)}this.setSyncDelay(n.syncDelay);const i=n.nextPullPoint||new Y.a;let s;Object(h.default)(h.default.INFO,"%s: Received pull results rId=%d for m=%s with %d mesages(s)",Ie,e,t,n.messages.length),h.default.debug(h.default.DEBUG2,"%s: Pull results\n  sb=%s g=%s n=%s%s",Ie,n.serverBookmark,n.gap,i,n.messages.reduce((e,t)=>e+`\n  ${t}`,""));try{s=this.db.findBookmarkData(t)}catch(l){return void(l instanceof u.NotFoundError?this.syncAbort(h.default.NOTICE,"Ignoring pull response for unknown mailbox",r,l):this.syncAbort(h.default.ERROR,"Failed to load bookmark data",r,l))}Object(R.default)(0===n.messages.length||r.pullPoint.isEmpty()||(r.isForward?n.messages[0].messageId.isGreaterThanOrEqual(r.pullPoint):n.messages[n.messages.length-1].messageId.isLessThanOrEqual(r.pullPoint)),"Pull results inconsistent with expectations"),Object(R.default)(!(r instanceof Ce)||0===n.messages.length||r.stopPoint.isEmpty()||n.messages[n.messages.length-1].messageId.isLessThan(r.stopPoint),"Pull results inconsistent with expectaions"),Object(R.default)(!n.messages.some((e,t,n)=>0!==t&&!n[t-1].messageId.isLessThan(e.messageId)),"Pull results inconsistent with expectations"),Object(R.default)(i.isEmpty()||r.pullPoint.isEmpty()||(r.isForward?i.isGreaterThan(r.pullPoint):i.isLessThan(r.pullPoint)),"Pull results inconsistent with expectations"),Object(R.default)(i.isEmpty()||0===n.messages.length||(r.isForward?n.messages[n.messages.length-1].messageId.isLessThan(i):n.messages[0].messageId.isGreaterThan(i)),"Pull results inconsistent with expectations");const o=n.serverBookmark;if(Object(R.default)(o&&!o.isEmpty(),"Pull results inconsistent with expectations"),o.isLessThan(s.bookmark))return void this.regressBookmark(r,s,o);n.gap&&(r.pullPoint.isEmpty()?Object(h.default)(h.default.NOTICE,"%s: Ignoring gap in content detected in %s for m=%s p=",Ie,r.requestType,t):(Object(h.default)(h.default.DEBUG1,"%s: Gap in content detected in %s for m=%s p=%s",Ie,r.requestType,t,r.pullPoint),this.gapDetectedFunction(t,r.pullPoint))),r.isForward||(r.isBookmarkedPull=this.isReversePullBookmarked(t,s,n));const a=r.receiveFunction?r.receiveFunction:this.receiveFunction;for(const e of n.messages)a({mailboxId:t,messageData:e}),s.recordMessageId(e.messageId),r.isBookmarkedPull&&e.messageId.isLessThanOrEqual(o)&&s.setBookmark(e.messageId);if(s.maxMessageId.isEmpty()&&!s.bookmark.isEmpty()&&(Object(R.default)(0===n.messages.length),s.recordMessageId(s.bookmark)),!(null!==r.completeFunction&&r.completeFunction(s,i.isEmpty()?void 0:i)||i.isEmpty()))return r.requestId=++this.requestId,r.pullPoint=i,r.retryBackoff=Se.initialBackoff,r.isBookmarkedPull=r.isForward&&(r instanceof Ce||s.isUpToDate()&&r.pullPoint.isLessThanOrEqual(o)),void this.sendPull(r);r.isInSyncCycle||r.startPoint.isEmpty()||(s.bookmark.isLessThan(r.startPoint)&&(Object(h.default)(h.default.NOTICE,"%s: %s for messages[%s, %s) in m=%s failed to advance bookmark; %s",Ie,r.requestType,r.startPoint,r.stopPoint,t,"treating startPoint as reconciled"),s.setBookmark(r.startPoint)),r.startPoint=new Y.a,r.stopPoint=new Y.a),this.syncComplete(r,s,o)}isReversePullBookmarked(e,t,n){const l=n.serverBookmark;if(Object(R.default)(l&&!l.isEmpty(),"Pull results inconsistent with expectations"),!t.bookmark.isEmpty())return 0!==n.messages.length&&n.messages[n.messages.length-1].messageId.isGreaterThan(t.bookmark)&&n.messages[0].messageId.isLessThanOrEqual(t.bookmark);if(!t.canBeReconciled(l))return Object(h.default)(h.default.DEBUG2,"%s: Using sb=%s to begin reconciliation for m=%s",Ie,l,e),t.setBookmark(l,0===n.messages.length||n.messages[0].messageId.isGreaterThan(l)),!1;const r=n.messages.length>0&&n.messages[0].messageId.isLessThanOrEqual(l);if(r&&!t.canBeReconciled(n.messages[0].messageId))return Object(h.default)(h.default.DEBUG2,"%s: Using first M=%s to begin reconciliation for m=%s",Ie,n.messages[0].messageId,e),t.setBookmark(n.messages[0].messageId),!0;const i=n.nextPullPoint||new Y.a;return i.isEmpty()||!i.isLessThanOrEqual(l)||t.canBeReconciled(i)?(Object(h.default)(h.default.DEBUG2,"%s: No bookmark position to begin reconciliation for m=%s",Ie,e),!1):(Object(h.default)(h.default.DEBUG2,"%s: Using nextPullPoint=%s to begin reconciliation for m=%s",Ie,i,e),t.setBookmark(i),r)}scheduleRetry(e,t){let n;for(let l of this.requestMap.values())l.requestId===e&&(void 0===n&&(Object(h.default)(h.default.DEBUG1,"%s: Scheduling retry for rId=%d to be after %d ms",Ie,t,l.retryBackoff),n=new Te(()=>{this.retryByRequestId(t,!0)},()=>{Object(h.default)(h.default.DEBUG1,"%s: Cancelled retry for rId=%d",Ie,t),this.requestsAwaitingRetry.delete(t)},l.retryBackoff),this.requestsAwaitingRetry.add(t)),l.requestId=t,l.retryData=n);void 0===n?Object(h.default)(h.default.NOTICE,"%s: No outstanding request for rId=%d; retry not scheduled",Ie,e):Object(h.default)(h.default.DEBUG1,"%s: Scheduled retry for rId=%d for %d mailbox(es)",Ie,t,n.refCount)}retrySingleRequest(){this.requestsAwaitingRetry.size>0&&this.retryByRequestId(this.requestsAwaitingRetry[Symbol.iterator]().next().value)}retryByRequestId(e,t){let n,l,r,i;Object(h.default)(h.default.DEBUG1,"%s: Retrying rId=%d; fromTimer=%s",Ie,e,!0===t),this.requestsAwaitingRetry.delete(e);let s=[],o=0;for(let a=this.requestMap.values(),c=a.next();!c.done;c=a.next()){const d=c.value;if(d.requestId!==e)continue;if(void 0===l&&(r=(l=d.retryData).refCount,i=d.requestType),Object(R.default)(d.requestType===i,"requestType mismatch"),d.clearTimers(),Object(R.default)(l.refCount<r,"bad ref count"),!0===t&&(n||(n=Se.maxBackoff/2>=d.retryBackoff?2*d.retryBackoff:Se.maxBackoff),d.retryBackoff=n),!d.isSync)return Object(h.default)(h.default.INFO,"%s: Retrying %s with rId=%d for m=%s",Ie,i,e,d.mailboxId),Object(R.default)(1===r&&0===s.length&&0===o,"Only one pull request should be retried at a time"),Object(R.default)((()=>{for(c=a.next();!c.done;c=a.next())if(c.value.requestId===e)return!1;return!0})(),"Extra mailbox associated with pull requestId"),void this.sendPull(d);let p;try{p=this.db.findBookmarkData(d.mailboxId)}catch(e){++o,e instanceof u.NotFoundError?this.syncAbort(h.default.NOTICE,"Ignoring retry attempt for unknown mailbox",d,e):this.syncAbort(h.default.ERROR,"Failed to load bookmark data",d,e);continue}const g={mailboxId:d.mailboxId,bookmark:p.bookmark};d.isInSyncCycle&&(g.maxMessageId=p.maxMessageId),s.push(g)}Object(R.default)(void 0!==r&&r>0,"Retry timer fired for non-existant request"),Object(R.default)(r===s.length+o,"Sync retry processed an unexpected number of mailboxes"),Object(R.default)(r>=o,"Sync retry fewer mailboxes than bookmark lookup failures"),0!==s.length?(Object(h.default)(h.default.INFO,"%s: Retrying %s with rId=%d for %d mailbox(es)",Ie,i,e,s.length),this.sendSync(e,s)):Object(h.default)(h.default.DEBUG1,"%s: Not retrying rId=%d; no mailboxes in %s",Ie,e,i)}advanceBookmark(e,t,n,l){if(Object(R.default)(t.bookmark.isLessThanOrEqual(n),"Bookmark is not advancing"),t.bookmark.isGreaterThanOrEqual(n))return;const r=t.isUpToDate()?n:t.maxMessageId.isLessThan(n)?t.maxMessageId:n,i=t.onlyFastForwarded&&!0===l&&!t.canBeReconciled(r);t.setBookmark(r,i),Object(h.default)(h.default.DEBUG1,"%s: Advanced bookmark for m=%s to b=%s%s; mailbox %s",Ie,e,t.bookmark,i?" ff-only":"",t.isUpToDate()?"is up-to-date":"needs reconciliation")}reconcileMessageIds(e,t,n,l,r){const i=t.ids||[];if(Object(R.default)(!i.some((e,t,n)=>0!==t&&!n[t-1].isLessThan(e)),"Sync results inconsistent with expectations"),0===i.length)return l.isEmpty()||l.isGreaterThan(n)?void this.advanceBookmark(e.mailboxId,r,n,!0):r.maxMessageId.isEmpty()?void Object(R.default)(r.onlyFastForwarded,"bookmark has not been only fast-forwarded"):void this.advanceBookmark(e.mailboxId,r,r.maxMessageId,!0);if(e.isInSyncCycle&&r.isUpToDate()&&!r.maxMessageId().isEmpty())return void Object(h.default)(h.default.NOTICE,"%s: Server sent ids for up-to-date m=%s b=%s max=%s; discarding: %s",Ie,e.mailboxId,r.bookmark,r.maxMessageId,i);if(Object(R.default)(i.length>0,"Server IDs must not be empty"),i[0].isLessThanOrEqual(r.bookmark)){const t=i.findIndex(e=>e.isGreaterThan(r.bookmark));if(Object(h.default)(h.default.NOTICE,"%s: Discarding previously reconciled ids; b=%s for m=%s: %s",Ie,r.bookmark,e.mailboxId,i.splice(0,t<0?i.length:t)),0===i.length)return}const s=e.isInSyncCycle&&!r.maxMessageId.isEmpty()?n.isLessThan(r.maxMessageId)?n:r.maxMessageId:n;if(Object(R.default)(i.length>0,"Server IDs must not be empty"),i[i.length-1].isGreaterThan(s)){let t;for(t=i.length-1;t>0&&i[t-1].isGreaterThan(s);--t);if(Object(h.default)(h.default.NOTICE,"%s: Discarding ids after %s=%s for m=%s: %s",Ie,e.isInSyncCycle&&r.maxMessageId.isLessThanOrEqual(n)?"max":"sb",s,e.mailboxId,i.splice(t,i.length-t)),0===i.length)return}Object(R.default)(i.length>0,"Server IDs must not be empty");const o=i.findIndex(e=>!r.needsReconciliation(e));if(-1===o){const t=i[i.length-1];return Object(h.default)(h.default.DEBUG1,"%s: Updating bookmark for m=%s to largest server M=%s",Ie,e.mailboxId,t),void this.advanceBookmark(e.mailboxId,r,t,!1)}let a;for(e.startPoint=i[o],Object(h.default)(h.default.DEBUG2,"%s: Set recovery startPoint=%s",Ie,e.startPoint),a=i.length-1;a>=o&&r.needsReconciliation(i[a]);--a);if(Object(R.default)(-1!==a,"Missing message must be found"),Object(R.default)(a<=i.length-1),a<i.length-1)e.stopPoint=i[a+1],Object(h.default)(h.default.DEBUG2,"%s: Set recovery stop point to known messageId; stopPoint=%s",Ie,e.stopPoint);else{const t=i[a];l.isEmpty()||!t.isEqual(n)&&!l.isLessThanOrEqual(n)?t.isLessThan(n)?(e.stopPoint=n,Object(h.default)(h.default.DEBUG2,"%s: Set recovery stop point to server bookmark; stopPoint=%s",Ie,e.stopPoint)):Object(h.default)(h.default.DEBUG2,"%s: No recovery stop point has been set; stopPoint=%s",Ie,e.stopPoint):(e.stopPoint=l,Object(h.default)(h.default.DEBUG2,"%s: Set recovery stop point to pull point; stopPoint=%s",Ie,e.stopPoint))}if(Object(R.default)(!e.startPoint.isEmpty(),"startPoint must be set"),o>0){const t=i[o-1];return Object(h.default)(h.default.DEBUG1,"%s: Updating bookmark for m=%s to M=%s preceding first missing M=%s",Ie,e.mailboxId,t,e.stopPoint),void this.advanceBookmark(e.mailboxId,r,t,!1)}}regressBookmark(e,t,n){t.setBookmark(n,!0);const l=e.isInSyncCycle;let r=e.mailboxId;this.syncAbort(h.default.NOTICE,"Bookmark for mailbox has regressed; restarting cycle",e);const i={mailboxId:r,bookmark:t.bookmark};l?(e=new we(r,++this.requestId),i.maxMessageId=t.maxMessageId,r=void 0):e=new Ae(r,++this.requestId),this.requestMap.set(e.mailboxId,e),this.sendSync(e.requestId,[i],r)}recordMessageId(e,t,n){try{const l=this.db.findBookmarkData(e);if(this.trackedMailboxes.add(e),!l.recordMessageId(t)&&!n)return void Object(h.default)(h.default.WARNING,"%s: Received M=%s for m=%s that is a duplicate or before b=%s; %s",Ie,t,e,l.bookmark,"message will not be reconciled");let r,i=this.requestMap.get(e);return void 0!==i?void Object(h.default)(h.default.DEBUG1,"%s: Skipping reconciliation for m=%s; %s rId=%d outstanding",Ie,e,i.requestType,i.requestId):(l.bookmark.isEmpty()?(i=new Oe(e,++this.requestId),r=Pe.prototype.sendPull):(i=new Ae(e,++this.requestId),r=Pe.prototype.scheduleReconciliation),void(this.insert(i)&&r.call(this,i)))}catch(n){if(n instanceof u.NotFoundError)return void Object(h.default)(h.default.DEBUG1,"%s: Not recording M=%s for unknown m=%s; won't reconcile",Ie,t,e);Object(h.default)(h.default.WARNING,"%s: Not recording M=%s for m=%s; won't reconcile; error=%s",Ie,t,e,n),h.default.logErrorForDebugging(n)}}scheduleReconciliation(e){Object(R.default)(void 0!==e,"RequestData must not be undefined"),Object(R.default)(null===e.reconciliationData,"RequestData must not have reconciliationTimer set");const t=e.mailboxId,n=e.requestId;Object(R.default)("string"==typeof t&&t.length>0,"mailboxId must be a non-empty string"),e.reconciliationData=new Te(()=>{this.reconcileBookmarkByMailboxId(t,n)},()=>{Object(h.default)(h.default.DEBUG1,"%s: Cancelled reconcilation for m=%s for rId=%d",Ie,t,n)},this.syncDelay),Object(h.default)(h.default.DEBUG1,"%s: Scheduled reconciliation for m=%s for rId=%d",Ie,t,n)}reconcileBookmarkByMailboxId(e,t){Object(h.default)(h.default.DEBUG1,"%s: Reconciliation sync timer for m=%s with rId=%d has fired",Ie,e,t);const n=this.requestMap.get(e);if(void 0!==n&&n.requestId===t)if(Object(R.default)(null!==n.reconciliationData,"Reconciliation data was not set for m={0}",e),n.reconciliationData=null,!1===n.isInSyncCycle)try{this.sendReconcilationSync(e,this.db.findBookmarkData(e),n.requestId)}catch(e){this.syncAbort(h.default.ERROR,"Failed to load bookmark data",n,e)}else Object(h.default)(h.default.ERROR,"%s: Cannot send %s request for m=%s while a request is outstanding",Ie,n.requestType,e);else Object(h.default)(h.default.ERROR,"%s: Cannot send reconciliation request for m=%s with rId=%d; %s",Ie,e,t,n?"no request data":n.requestType+" with rId="+n.requestId+" outstanding")}sendReconcilationSync(e,t,n){Object(h.default)(h.default.DEBUG1,"%s: Starting reconciliation sync for m=%s rId=%d b=%s",Ie,e,n,t.bookmark);const l=[];l.push({mailboxId:e,bookmark:t.bookmark}),this.sendSync(n,l,e)}syncComplete(e,t,n){const l=!e.startPoint.isEmpty(),r=!t.isUpToDate();if(Object(h.default)(h.default.INFO,"%s: Completing %s for m=%s b=%s%s%s%s%s%s",Ie,e.requestType,e.mailboxId,t.bookmark,...l?[" and must recover [",e.startPoint,", ",e.stopPoint,")"]:r?[" and must reconcile","","","",""]:[" and is up-to-date","","","",""]),Object(R.default)(null===e.reconciliationData,"Reconciliation data still set"),Object(R.default)(null===e.retryData,"Retry data still set"),this.requestMap.delete(e.mailboxId),!e.resolve||(e.resolve(),!this.requestMap.has(e.mailboxId)))return l?(e=new Ce(e.mailboxId,++this.requestId,e.startPoint,e.stopPoint),this.requestMap.set(e.mailboxId,e),Object(h.default)(h.default.INFO,"%s: Starting pull for m=%s to recover messageIds [%s, %s)",Ie,e.mailboxId,e.startPoint,e.stopPoint),void this.sendPull(e)):r?(e=new Ae(e.mailboxId,++this.requestId),this.requestMap.set(e.mailboxId,e),void(t.canBeReconciled(n)?this.sendReconcilationSync(e.mailboxId,t,e.requestId):this.scheduleReconciliation(e))):void 0}syncAbort(e,t,n,l){Object(h.default)(e,"%s: Aborting %s request for m=%s: %s%s%s",Ie,n.requestType,n.mailboxId,t,...l?["; error=",l]:["",""]),h.default.logErrorForDebugging(l),n.clearTimers(),n.reject&&n.reject(l||new u.TemporaryFailure(t)),this.requestMap.delete(n.mailboxId)}}var je=Se,De=n(46),xe=n(19),Ne=n.n(xe),Ue=n(25),Fe=n.n(Ue);n.d(t,"default",function(){return Be}),n.d(t,"setup",function(){return Le}),n.d(t,"shutdown",function(){return $e});const ke={maxApplicationDataSize:71680};function Be(){Fe.a.apply(this),He(this)}function Le(e,t){const n=t.configuration,s=t.messengerData,y=t.persistentData,v="Messenger";return Object(h.default)(h.default.INFO,"%s: Starting setup for e=%s",v,y.endpointId),s.lastUpload=Promise.resolve(),s.db=new J(n.messageStorageFactory?new n.messageStorageFactory:new De.a,s.registrationInfo.regId),s.managementClient=new ve(s.busClient,n.domain,s.registrationInfo.regId),s.contentClient=new ce(s.transport),s.syncManager=new je(s.contentClient,s.db,e=>{try{!function(e){const t=e.mailboxId,n=e.messageData.messageId,i=e.messageData.userId,o=e.messageData.timestamp,u=e.messageData.message.binary;s.lastOnlineMessage=s.lastOnlineMessage.then(()=>s.rim_im.receive(t,i,n,u)).then(e=>{if(!1===e.verified)throw new Q.a.ProtectionError("unverified chat message",e.retry);return e}).catch(e=>{if(e instanceof Q.a.ProtectionError)return s.keyManager.removePublicKeys(i),e.retry().then(e=>(e.verified&&E("userKeysChanged",new c.UserKeysChanged(i)),e));throw e}).then(u=>{function d(e){const l=s.db.findChat(t),r=l.messages.insert(e);switch(r){case K.a.InsertionResult.Rejected:Object(h.default)(h.default.INFO,"%s: Rejected duplicate messageId=%s in chatId=%s",v,n,t);break;case K.a.InsertionResult.Updated:Object(h.default)(h.default.INFO,"%s: Received updated messageId=%s in chatId=%s",v,n,t),G(e,!1);break;case K.a.InsertionResult.Inserted:Object(h.default)(h.default.INFO,"%s: Received new messageId=%s in chatId=%s",v,n,t),G(e,!0);break;default:Object(R.default)(!1,"Unexpected message insertion result: "+r)}B(t,n).catch(e=>{Object(h.default)(h.default.ERROR,"%s: Failed to post delivery notification for  messageId=%s: %s",v,n,e)})}function p(){switch(u.name){case"content":case"subject":case"join":case"leave":case"shred":case"remove":case"admin":S(n,t,i,o,u).withFileSize().then(d);break;default:throw new TypeError('Received unsupported identity message "'+u.name+'"')}}if(Object(h.default)(h.default.INFO,'%s: Received "%s": %s in chatId=%s v=%s',v,u.name,e.messageData,t,u.verified||!1),t.startsWith("id.")){if("system"===i){switch(u.name){case"chatRemoved":F(u.body,i);break;case"appMessage":E("appMessageReceived",new c.AppMessageReceived(new l.a(u.body)));break;case"chatChanged":!function(e){Object(h.default)(h.default.INFO,"%s: Received chatChanged message for mailboxId=%s changes=%s; scheduling a metadata refresh",v,e.mailboxId,e.changes||""),s.mailboxFetcher.fetchAndStore(e.mailboxId,!0)}(u.body);break;default:Object(h.default)(h.default.WARNING,'%s: Ignoring unknown identity message from system user "%s"',v,u.name)}return}switch(u.name){case"invite":U(u.body,i,n.binary).catch(e=>{Object(h.default)(h.default.ERROR,"%s: Failed to accept invite in chatId=%s from regId=%s; error=%s",v,u.body.mailboxId,i,e)});break;case"chatCreated":!function(e){if(e.endpointId===y.endpointId)return void Object(h.default)(h.default.INFO,"%s: Ignoring chatCreated message from our own endpointId=%s for chatId=%s",v,e.endpointId,e.mailboxId);if(y.filter&&!y.filter.has(e.mailboxId))return void Object(h.default)(h.default.INFO,"%s: Ignoring chatId=%s created on endpointId=%s which is not in the filter list",v,e.mailboxId,e.endpointId);if(!(e.symmetricKey instanceof Uint8Array)||0===e.symmetricKey.length)return void Object(h.default)(h.default.ERROR,"%s: Failed to handle chatCreated message for chatId=%s on endpointId=%s with bad symmetricKey=%s",v,e.mailboxId,e.endpointId,e.symmetricKey);let t=s.chatCache.get(e.mailboxId);if(void 0!==t)return void Object(h.default)(h.default.INFO,"%s: Ignoring chatCreated message for chatId=%s that is already known",v,e.mailboxId);Object(h.default)(h.default.INFO,"%s: Adding chatId=%s that was created by endpointId=%s",v,e.mailboxId,e.endpointId);const n=void 0!==e.peer&&void 0!==e.peer.regId;if(n){const t=e.peer.regId,n=s.chatCache.get(s.db.getPeerChatId(t));if(n&&(Object(h.default)(h.default.INFO,"%s: Leaving %s to use chatId=%s created by endpointId=%s with peer=%s",v,n,e.mailboxId,e.endpointId,t),$(n.chatId).catch(e=>{Object(h.default)(h.default.ERROR,"%s: Failed to leave %s; error=%s",v,n,e)})),void 0!==s.db.getPeerPromise(t))return Object(h.default)(h.default.NOTICE,"%s: Already creating 1:1 chat with regId=%s; leaving existing 1:1 chat mailboxId=%s created by endpointId=%s",v,t,e.mailboxId,e.endpointId),void $(e.mailboxId).catch(t=>{Object(h.default)(h.default.ERROR,"%s Failed to leave mailboxId=%s: %s",v,e.mailboxId,t)})}s.keyManager.setChatKey(e.mailboxId,e.symmetricKey);const l=[];l.push({regId:s.registrationInfo.regId,state:a.a.State.Active,admin:!0}),n&&l.push({regId:e.peer.regId,state:a.a.State.PendingJoin,admin:!1});const i=s.db.createChat(e.mailboxId,r.a.State.WaitingForRestore,l,n);i.subject=f.truncate(e.subject,128),i.lastActivity=new Date,t=i.view,s.chatCache.set(t),t.isOneToOne&&s.db.addPeerChatId(e.peer.regId,t.chatId);E("chatAdded",new c.ChatAdded(t)),s.mailboxFetcher.fetchAndStore(t.chatId,!0)}(u.body);break;case"chatLeft":!function(e){if(e.endpointId===y.endpointId)return void Object(h.default)(h.default.INFO,"%s: Ignoring chatLeft message from our own endpointId=%s for chatId=%s",v,e.endpointId,e.mailboxId);const t=s.chatCache.get(e.mailboxId),n=s.db.getChat(e.mailboxId);if(void 0===t)return Object(h.default)(h.default.INFO,"%s: Received chatLeft message for unknown chatId=%s",v,e.mailboxId),void q(e.mailboxId);s.mailboxFetcher.fetchAndStore(e.mailboxId,!0);let l=!0;e.remove||void 0===n||n.messages.isEmpty()||(l=!1);!0===l?(Object(h.default)(h.default.INFO,"%s: Received chatLeft message from endpointId=%s for chatId=%s; removing chat",v,e.endpointId,e.mailboxId),q(e.mailboxId)):(Object(h.default)(h.default.INFO,"%s: Received chatLeft message from endpointId=%s for chatId=%s that has content; marking as defunct",v,e.endpointId,e.mailboxId),n.state=r.a.State.Defunct,L(n,t))}(u.body);break;case"chatRemoved":F(u.body,i);break;case"restoreMarker":Object(h.default)(h.default.INFO,"%s: Ignoring restore marker for endpointId=%s",v,u.body.endpointId);break;default:Object(h.default)(h.default.NOTICE,'%s: Ignoring unknown identity message "%s"',v,u.name)}return}let g=s.db.getChat(t);if(void 0===g)return Object(h.default)(h.default.NOTICE,'%s: Ignoring "%s" message for unknown chat mailboxId=%s',v,u.name,t),void s.mailboxFetcher.fetchAndStore(t,!0);let m=N(t);if("system"===i){if("metadataChanged"===u.name){const e=void 0===u.body.changes?"":u.body.changes;Object(h.default)(h.default.INFO,"%s: Handling metadataChanged[%s] from system for %s",v,e,m),s.mailboxFetcher.fetchAndStore(g.mailboxId,!0)}else Object(h.default)(h.default.NOTICE,'%s: Ignoring "%s" message from system',v,u.name);return}let b=g.getParticipantView(i);if(void 0===b||b.state!==a.a.View.State.Active){if("typing"!==u.name){const e=g.getPeerRegId(s.registrationInfo.regId);m=C({messengerData:s,emitFunc:E},g,m,i,a.a.State.Active),g.isOneToOne&&g.getParticipantCount()>2&&(g.isOneToOne=!1,m=g.view,s.chatCache.set(m),E("chatUpdated",new c.ChatUpdated(m)),Object(R.default)(e),s.db.removePeerChatId(e,m.chatId)),b=g.getParticipantView(i)}"join"!==u.name&&s.mailboxFetcher.fetchAndStore(t,!0)}switch(u.name){case"content":{g.typingUsers.has(i)&&(clearTimeout(g.typingUsers.get(i)),g.typingUsers.delete(i),E("chatTyping",new c.ChatTyping(t,i,!1)));let e=g.recalledMessages.get(n.binary.toString()),l=g.shredMessages.get(i);e&&-1!==e.indexOf(i)||l&&l.isGreaterThanOrEqual(n)?(Object(h.default)(h.default.INFO,"Received messageId=%s was recalled",n),d(S(n,t,i,o,u).recalled())):g.deletedMessages.has(n.binary.toString())?(Object(h.default)(h.default.INFO,"Received messageId=%s was deleted",n),d(S(n,t,i,o,u).deleted())):p();break}case"subject":{const e=f.truncate(u.body.subject,128);if(g.subject!==e){g.subject=e;const t=g.view;s.chatCache.set(t),E("chatUpdated",new c.ChatUpdated(t))}p();break}case"status":{const e=k(g,[{messageId:n,regId:i,status:u.body,timestamp:o}]);if(e.length>0){m=N(t);for(const t of e)E("chatMessageUpdated",new c.ChatMessageUpdated(m,t))}break}case"join":{let e=S(n,t,i,o,u);try{let l=g.messages.insertOne(e,u.body.inviteId);B(t,n).catch(function(e){Object(h.default)(h.default.ERROR,"%s: Failed to post delivery notification for  messageId=%s: %s",v,n,e)}),l&&E("chatMessageUpdated",new c.ChatMessageUpdated(N(t),l)),G(e,!0)}catch(e){Object(h.default)(h.default.INFO,'%s: Ignoring "join" message for chatId=%s; error=%s',v,t,e)}break}case"leave":if(i==s.registrationInfo.regId){Object(h.default)(h.default.DEBUG1,"%s: Ignoring leave message from our own regId",v);break}m.isOneToOne?(Object(h.default)(h.default.INFO,"%s: Leaving %s because peer has left",v,m),$(m.chatId).catch(e=>{Object(h.default)(h.default.ERROR,"%s: Failed to leave %s; error=%s",v,m,e)})):m=C({messengerData:s,emitFunc:E},g,m,i,a.a.State.Left),p();break;case"typing":{if(i===s.registrationInfo.regId){Object(h.default)(h.default.DEBUG1,"%s: Ignoring typing notification from our own regId",v);break}if(void 0===b){Object(h.default)(h.default.INFO,"%s: Ignoring typing notification from inactive userId=%s",v,i);break}const e=3e4,n=u.body.tag,l=u.body.messageId?new Y.a(u.body.messageId):void 0;let r=!1;if(g.typingUsers.has(i)){const s=g.typingUsers.get(i);n===s.tag?(r=l?void 0===s.messageId||!l.isEqual(s.messageId):void 0!==s.messageId)||Object(h.default)(h.default.DEBUG2,"%s: Received typing notification for regId=%s in chatId=%s who is already typing; resetting timeout",v,i,g.mailboxId):r=!0,r&&(s.tag=n,s.messageId=l,E("chatTyping",new c.ChatTyping(t,i,!0,n,l))),clearTimeout(s.timeout),s.timeout=setTimeout(()=>{g.typingUsers.delete(i),E("chatTyping",new c.ChatTyping(t,i,!1))},e)}else{const r={tag:n,messageId:l,timeout:setTimeout(()=>{g.typingUsers.delete(i),E("chatTyping",new c.ChatTyping(t,i,!1))},e)};g.typingUsers.set(i,r),E("chatTyping",new c.ChatTyping(t,i,!0,n,l))}break}case"recall":_(t,u.body.ids,i);break;case"shred":M(t,n,i),p();break;case"delete":T(t,u.body.ids,i);break;case"remove":if(u.body.regId==s.registrationInfo.regId){Object(h.default)(h.default.DEBUG1,"%s: Ignoring remove message for our own regId",v);break}(function(e,t){if(t===s.registrationInfo.regId)return Object(h.default)(h.default.ERROR,"%s: Not allowed to remove local user from chatId=%s",v,e.chatId),!1;if(e.isOneToOne)return Object(h.default)(h.default.ERROR,"%s: Not allowed to remove participants from 1:1 chatId=%s",v,e.chatId),!1;let n=s.db.findChat(e.chatId);if(void 0===n.getParticipantView(t))return!0;return C({messengerData:s,emitFunc:E},n,e,t,a.a.State.Left),!0})(m,u.body.regId)&&(m=N(m.chatId),p());break;case"admin":{let e=s.db.findChat(m.chatId);if(i===u.body.regId)return void Object(h.default)(h.default.ERROR,"%s: Ignoring self-promotion attempt from %s",v,i);void 0===e.getParticipantView(u.body.regId)&&s.mailboxFetcher.fetchAndStore(t,!0),m=C({messengerData:s,emitFunc:E},e,m,u.body.regId,a.a.State.Active,!0===u.body.promotion),p();break}case"metadataChanged":{const e=void 0===u.body.changes?"":u.body.changes;Object(h.default)(h.default.INFO,"%s: Handling metadataChanged[%s] from regId=%s for %s",v,e,i,m),s.mailboxFetcher.fetchAndStore(g.mailboxId,!0);break}case"event":E("chatEvent",new c.ChatEvent(m,i,u.body.tag,u.body.data));break;default:p()}}).catch(e=>{Object(h.default)(h.default.ERROR,"%s: Failed to handle a received message for chatId=%s: %s",v,t,e)})}(e)}catch(e){Object(h.default)(h.default.ERROR,"%s: Failed to handle message: %s",v,e)}},(e,t)=>{if(!e.startsWith("id."))try{H(e,t)}catch(t){}},(e,t)=>{if(e===`id.${s.registrationInfo.regId}`)return Object(h.default)(h.default.INFO,"%s: Gap detected in identity mailbox m=%s on messageId=%s",v,e,t),s.mailboxFetcher.fetchAndStoreAllMailboxes(),void x().then(()=>{Object(h.default)(h.default.INFO,"%s: Successfully processed all mailbox grants",v)}).catch(e=>{Object(h.default)(h.default.ERROR,"%s: Failed to fetch all grants; error=%s",v,e)});Object(h.default)(h.default.INFO,"%s: Gap detected in message history of chatId=%s on messageId=%s",v,e,t)}),s.transportCallbacks.receive=function(e){s.contentClient.receiveOnlineMessage(e,e=>{Object(h.default)(h.default.INFO,"%s: Ignoring online message for m=%s: %s",v,e.mailboxId,e.messageData)})},s.transportCallbacks.connected=function(){s.syncManager.startReconnectSync(),y.retryServerRequests()},s.transportCallbacks.disconnected=function(){s.syncManager.transportDisconnected()},s.mailboxFetcher=new V(s,y.requestManager,y.filter,y.kmsMode,E,$,q,W),s.retryServerRequestFunctions.push(()=>{s.syncManager.retrySingleRequest()},()=>{s.mailboxFetcher.doServerRequests()}),y.requestManager.retryableRequest(function(){return s.throwIfSipRegistrationFailed(),s.syncManager.reconcileFromPost(s.db.identityMailboxId,s.rim_im.restoreMarker(y.endpointId))}).then(()=>{if(void 0===y.filter)return Object(h.default)(h.default.INFO,"%s: Restoring all mailboxes",v),y.requestManager.retryableRequest(()=>(s.throwIfSipRegistrationFailed(),s.managementClient.getAllMailboxes().catch(e=>(Object(h.default)(h.default.ERROR,"%s: Failed to retrieve mailboxes: ",v,e.message),Promise.reject(e)))));{Object(h.default)(h.default.INFO,"%s: Restoring %d filtered mailboxes",v,y.filter.size);let e=[],t=[];for(const n of y.filter){const l=s.mailboxFetcher.fetch(n).then(t=>{e.push(t)}).catch(e=>{Object(h.default)(h.default.WARNING,"%s: Failed to retrieve mailboxId=%s: %s; ignoring",v,n,e)});t.push(l)}return Promise.all(t).then(()=>e)}}).then(function(e){s.throwIfSipRegistrationFailed(),Object(h.default)(h.default.INFO,"%s: Restoring %d fetched mailboxes",v,e.length),s.chatCache=new i;var t=[];for(const n of e)t.push(s.mailboxFetcher.store(n).catch(function(){return null}));return Promise.all(t).then(()=>{Object(h.default)(h.default.INFO,"%s: Finished restoring %d fetched mailboxes resulting in %d chats",v,e.length,s.chatCache.size())})}).then(function(){return s.throwIfSipRegistrationFailed(),x()}).then(function(){function l(e,t,n){const l=s.db.findChat(e);if(t===s.registrationInfo.regId)return Promise.reject(new u.Error("Not allowed to change admin status for local user in chatId="+e));{const t=l.getParticipantView(s.registrationInfo.regId);if(void 0===t||!1===t.isAdmin)return Promise.reject(new u.Error("Non-admin user not allowed to change admin status for other users in chatId="+e))}return N(e).isOneToOne?Promise.reject(new u.Error("Not allowed to change admin status for non conference in chatId="+e)):y.requestManager.retryableRequest(()=>n?s.managementClient.addAdmin(e,t):s.managementClient.removeAdmin(e,t)).then(()=>j(e,s.rim_im.admin(t,n))).then(l=>{const r=s.db.findChat(e),i=N(e),a=new o.a(r.mailboxId,l,s.registrationInfo.regId,new Date,o.a.ReservedTag.Admin,!1,!1,{value:o.a.StateValue.Sent,isPartial:!1},!1,!1,void 0,{regId:t,promotion:n});X(e,a),C({messengerData:s,emitFunc:E},r,i,t,void 0,n)}).catch(l=>(Object(h.default)(h.default.ERROR,"%s: Failed to change admin=%s for regId=%s in chatId=%s; error=%s",v,n,t,e,l),H(e,l)))}s.throwIfSipRegistrationFailed(),Object(h.default)(h.default.INFO,"%s: Setup complete for e=%s r=%s",v,y.endpointId,s.registrationInfo.regId),s.transportCallbacks.receive=function(e){s.contentClient.receiveOnlineMessage(e,function(e){s.syncManager.handleOnlineMessage(e)})},s.mailboxFetcher.doServerRequests(),e.chatStart=function(e){var t;if("object"!=typeof e)throw new TypeError("options must be an object");if(void 0!==e.subject&&"string"!=typeof e.subject)throw new TypeError("options.subject must be a string");let n;if(void 0===e.invitees)n=[];else if("string"==typeof e.invitees)n=[e.invitees];else{if(!Array.isArray(e.invitees))throw new TypeError("options.invitees must be an array of regIds or a string");n=e.invitees}if(e.isOneToOne&&1!==n.length)throw new ReferenceError("options.invitees must contain exactly one regId when options.isOneToOne is true");const l=!!e.isOneToOne;if(void 0!==e.invitePolicy&&!r.a.View.InvitePolicy.hasOwnProperty(e.invitePolicy))throw new ReferenceError("options.invitePolicy must be a valid Chat.InvitePolicy or "+`undefined. It is: ${e.invitePolicy}`);let i;if(l){if((i=n[0])===s.registrationInfo.regId)throw new ReferenceError("options.invitees for OneToOne chat cannot contain own regId");const t=s.db.getPeerPromise(i);if(void 0!==t)return Object(h.default)(h.default.NOTICE,"%s: Already creating 1:1 chat for regId=%s; returning existing promise",v,i),t;const l=s.chatCache.get(s.db.getPeerChatId(i));if(l&&l.state!==r.a.View.State.Defunct){Object(h.default)(h.default.NOTICE,"%s: Found existing OneToOne chatId=%s with peerRegId=%s; a new chat will not be started",v,l.chatId,i),Object(R.default)(void 0!==e.invitees);const t="string"==typeof e.invitees?Promise.resolve(i):[Promise.resolve(i)];return Promise.resolve({chat:l,invites:t})}}l?Object(h.default)(h.default.INFO,"%s: Creating new 1:1 chat with regId=%s",v,i):Object(h.default)(h.default.INFO,"%s: Creating new chat with regIds=%s",v,n);const o=e.subject?f.truncate(e.subject,128):"";let u,m;if(void 0!==e.data){try{u=new d.b(e.data)}catch(e){throw new TypeError(`Unsupported type in options.data: ${e}`)}if(0===u.length||123!==u.data[0])throw new TypeError("options.data must be a JSON Object or undefined");if(u.length>ke.maxApplicationDataSize)throw new ReferenceError(`options.data must not exceed ${ke.maxApplicationDataSize} `+`bytes; size=${u.length}`)}if(void 0!==e.privateData){try{m=new d.b(e.privateData)}catch(e){throw new TypeError(`Unsupported type in options.privateData: ${e}`)}if(0===m.length||123!==m.data[0])throw new TypeError("options.privateData must be a JSON Object or undefined");if(m.length>ke.maxApplicationDataSize)throw new ReferenceError("options.privateData must not exceed "+`${ke.maxApplicationDataSize} bytes; size=`+m.length)}const b={regId:s.registrationInfo.regId,state:a.a.State.Active,admin:!0,signatureState:void 0,signature:void 0},I=g.generateChatKey().then(e=>{t=e;let n=Promise.resolve();if(y.kmsMode){const e=g.generateBytes(12);n=g.authEncrypt(t,e,s.keyManager.mgmtKey).then(t=>({payload:t.content,mac:t.tag,nonce:e}))}return Promise.all([s.rim_im.protectServerSubject(o,t),w.signMembership(t,s.registrationInfo.regId,s.registrationInfo.regId),u?s.rim_im.protectServerData(u.data,t):Promise.resolve(),m?s.rim_im.protectServerPrivateData(m.data):Promise.resolve(),n])}).then(t=>(b.signature=t[1].toString(),b.signatureState=a.a.SignatureState.Verified,y.requestManager.retryableRequest(()=>s.managementClient.createMailbox("chat",t[0],!0,p.a.UpdatePolicy.MembersOnly,e.invitePolicy===r.a.View.InvitePolicy.AdminsOnly?p.a.InvitePolicy.AdminOnly:p.a.InvitePolicy.MembersOnly,l?p.a.Description.OneToOne:p.a.Description.Conference,b.signature,t[2],t[3],t[4])))).then(u=>{if(Object(h.default)(h.default.INFO,"%s: Successfully created mailboxId=%s",v,u.id),l){const t=s.chatCache.get(s.db.getPeerChatId(i));if(t&&t.state!==r.a.View.State.Defunct){return Object(h.default)(h.default.NOTICE,"%s: Found existing OneToOne chatId=%s with peerRegId=%s; new chatId=%s will be discarded",v,t.chatId,i,u.id),$(u.id),Object(R.default)(void 0!==e.invitees),{chat:t,invites:"string"==typeof e.invitees?Promise.resolve(i):[Promise.resolve(i)]}}}s.keyManager.setChatKey(u.id,t);const d=[];d.push(b),i&&(d.push({regId:i,state:a.a.State.PendingInvite,admin:!1}),s.db.removePeerPromise(i));const p=s.db.createChat(u.id,r.a.State.Restored,d,l);p.subject=o,p.invitePolicy=e.invitePolicy===r.a.View.InvitePolicy.AdminsOnly?r.a.View.InvitePolicy.AdminsOnly:r.a.View.InvitePolicy.ParticipantsOnly,p.appData=e.data?e.data:{},p.appPrivateData=e.privateData?e.privateData:{},p.creationTime=new Date(u.createdTime),p.lastActivity=new Date;const g=p.view;s.chatCache.set(g),l&&s.db.addPeerChatId(i,u.id),y.filter&&y.filter.add(p.mailboxId),Object(h.default)(h.default.INFO,"%s: Created %s with view %s",v,p,g),E("chatAdded",new c.ChatAdded(g)),D(s.registrationInfo.regId,s.rim_im.chatCreated(y.endpointId,p.mailboxId,t,o,l?{regId:i}:void 0)).catch(function(e){Object(h.default)(h.default.ERROR,"%s: Failed to notify other endpoints of new %s: %s",v,p,e)});let f=P({messengerData:s,requestManager:y.requestManager,postFunc:D,emitFunc:E,errorFunc:W},p,t,n);if("string"==typeof e.invitees&&(Object(R.default)(1===f.length),f=f[0]),l){const e=e=>{throw Object(h.default)(h.default.ERROR,"%s: Failed to invite the participant with regId=%s to OneToOne chatId=%s; leaving chat; error=%s",v,i,p.mailboxId,e),$(p.mailboxId).catch(function(e){Object(h.default)(h.default.ERROR,"%s: Failed to leave chatId=%s; error=%s",v,p.mailboxId,e)}),e};Array.isArray(f)?(Object(R.default)(1===f.length),f[0]=f[0].catch(e)):f=f.catch(e)}return{chat:g,invites:f}}).catch(e=>(l&&s.db.removePeerPromise(i),Promise.reject(e)));return l&&s.db.addPeerPromise(i,I),I},e.chatInvite=((e,t)=>{const n=s.db.findChat(e);if(n.invitePolicy===r.a.View.InvitePolicy.AdminsOnly){const e=n.getParticipantView(s.registrationInfo.regId);if(void 0===e||!1===e.isAdmin)return Promise.reject(new u.Error(`local user must be an admin to invite users to ${n}`))}if(n.state===r.a.State.Leaving||n.state===r.a.State.Defunct)return Promise.reject(new u.Error(`cannot invite users to ${n} in state=${n.state}`));let l=!1;const i=void 0===t;if(n.isOneToOne){if(void 0!==t)throw new TypeError("invitees must be undefined when the chat is a 1:1");const e=n.getPeerRegId(s.registrationInfo.regId);if(void 0===e)return Promise.reject(new u.Error(`cannot re-issue invite for ${n} without peer`));const r=n.getParticipantState(e);if(r!==a.a.State.PendingGrant&&r!==a.a.State.PendingInvite&&r!==a.a.State.PendingJoin)return Object(h.default)(h.default.INFO,"%s: Ignoring invite in %s for regId=%s in state=%s",v,n,e,r),Promise.resolve(e);t=[e],l=!0,Object(h.default)(h.default.INFO,"%s: Re-issuing invite to user regId=%s in %s",v,t[0],n)}else if(i){t=[];for(const e of n.getParticipantViews())e.regId!==s.registrationInfo.regId&&e.state===a.a.View.State.Pending&&t.push(e.regId);Object(h.default)(h.default.INFO,"%s: Re-issuing invites to %d yet-to-join users in %s",v,t.length,n)}else if("string"==typeof t)l=!0,t=[t],Object(h.default)(h.default.INFO,"%s: Inviting user regId=%s to %s",v,t[0],n);else{if(!Array.isArray(t))throw new TypeError("invitees must be a string or array");Object(h.default)(h.default.INFO,"%s: Inviting %d users to %s",v,t.length,n)}return Object(R.default)(Array.isArray(t)),s.keyManager.getChatKey(n.mailboxId).then(e=>P({messengerData:s,requestManager:y.requestManager,postFunc:D,emitFunc:E,errorFunc:W},n,e,t)).then(e=>l?(Object(R.default)(1===e.length),e[0]):e)}),e.chatUpdate=function(e,t){return function(e,t,n){Object(h.default)(h.default.INFO,"%s: Processing update for chatId=%s",O,t);const l=e.messengerData.db.getChat(t);if(void 0===l)throw new u.Error("No chat known with id: "+t);if("object"!=typeof n)throw new u.Error("update must be an object");const i=[Promise.resolve(),Promise.resolve(),Promise.resolve()];let s,a,g,m,y=!1;if(void 0!==n.subject){if("string"!=typeof n.subject)throw new u.Error("subject must be a string");const r=f.truncate(n.subject,128);r!==l.subject&&(y=!0,s=r,h.default.debug(h.default.DEBUG1,"%s: Protecting subject=%s",O,s),i[0]=e.messengerData.keyManager.getChatKey(t).then(t=>e.messengerData.rim_im.protectServerSubject(s,t)))}if(void 0!==n.invitePolicy)if(l.isOneToOne)Object(h.default)(h.default.NOTICE,"%s: Ignoring invite policy update for %s",O,l);else{if(!r.a.View.InvitePolicy.hasOwnProperty(n.invitePolicy))throw new u.Error("invitePolicy must be a valid Chat.InvitePolicy");n.invitePolicy!==l.invitePolicy&&(a=n.invitePolicy,y=!0)}if(void 0!==n.data){let r,s=!1;try{s=Object(A.a)(n.data,l.appData)}catch(e){throw Object(h.default)(h.default.WARNING,"%s: Refusing to update chatId=%s; data is not a JSON object: %s",O,t,e),new u.Error("data must be a valid JSON Object")}if(!s){g=n.data,y=!0;try{r=new d.b(n.data)}catch(e){throw new u.Error(`Unsupported type in data: ${e}`)}if(0===r.length||123!==r.data[0])throw new u.Error("data must be a JSON Object");if(r.length>e.maxApplicationDataSize)throw new u.Error(`data must not exceed ${e.maxApplicationDataSize} bytes; `+`size=${r.length}`);i[1]=e.messengerData.keyManager.getChatKey(t).then(t=>e.messengerData.rim_im.protectServerData(r.data,t))}}if(void 0!==n.privateData){let r,s=!1;try{s=Object(A.a)(n.privateData,l.appPrivateData)}catch(e){throw Object(h.default)(h.default.WARNING,"%s: Refusing to update chatId=%s; privateData is not a JSON object: %s",O,t,e),new u.Error("privateData must be a valid JSON Object")}if(!s){m=n.privateData,y=!0;try{r=new d.b(n.privateData)}catch(e){throw new u.Error(`Unsupported type in privateData: ${e}`)}if(0===r.length||123!==r.data[0])throw new u.Error("privateData must be a JSON Object");if(r.length>e.maxApplicationDataSize)throw new u.Error(`privateData must not exceed ${e.maxApplicationDataSize} `+`bytes; size=${r.length}`);i[2]=e.messengerData.rim_im.protectServerPrivateData(r.data)}}return y?Promise.all(i).then(n=>{const l=n[0],i=n[1],s=n[2],o={};return void 0!==l&&(o.subject=l),void 0!==i&&(o.data=i),void 0!==s&&(o.privateData=s),void 0!==a&&(o.invitePolicy=a===r.a.View.InvitePolicy.ParticipantsOnly?p.a.InvitePolicy.MembersOnly:p.a.InvitePolicy.AdminOnly),Object(R.default)(Object.keys(o).length>0),e.requestManager.retryableRequest(()=>e.messengerData.managementClient.updateMailbox(t,o))}).then(()=>(Object(h.default)(h.default.INFO,"%s: Successfully updated chatId=%s",O,t),void 0!==s?e.postFunc(t,e.messengerData.rim_im.subject(s)):Promise.resolve(void 0))).then(n=>{const l=e.messengerData.db.findChat(t);if(void 0!==n){const l=new o.a(t,n,e.messengerData.registrationInfo.regId,new Date,o.a.ReservedTag.Subject,!1,!1,{value:o.a.StateValue.Sent,isPartial:!1},!1,!1,s);e.newMessageFunc(t,l)}if(void 0!==s&&l.subject!==s&&(Object(h.default)(h.default.INFO,"%s: Recording updated subject in %s",O,l),l.subject=s),void 0!==a&&l.invitePolicy!==a&&(Object(h.default)(h.default.INFO,"%s: Recording updated invite policy=%s in %s",O,a,l),l.invitePolicy=a),void 0!==g)try{Object(A.a)(l.appData,g)||(Object(h.default)(h.default.INFO,"%s: Recording updated app data in %s",O,l),l.appData=g)}catch(e){Object(h.default)(h.default.WARNING,"%s: Ignoring invalid app data in update for %s",O,l)}if(void 0!==m)try{Object(A.a)(l.appPrivateData,m)||(Object(h.default)(h.default.INFO,"%s: Recording updated app private data in %s",O,l),l.appPrivateData=m)}catch(e){Object(h.default)(h.default.WARNING,"%s: Ignoring invalid app private data in update for %s",O,l)}const r=l.viewDirty,i=l.view;return!0===r&&(e.messengerData.chatCache.set(i),e.emitFunc("chatUpdated",new c.ChatUpdated(i))),i}).catch(n=>{Object(h.default)(h.default.ERROR,"%s: Failed to update chatId=%s; error=%s",O,t,n);try{e.errorFunc(t,n)}catch(e){}return Promise.reject(n)}):(Object(h.default)(h.default.INFO,"%s: Nothing to update in chatId=%s",O,l.chatId),Promise.resolve(l.view))}({messengerData:s,requestManager:y.requestManager,postFunc:j,emitFunc:E,newMessageFunc:X,errorFunc:W,maxApplicationDataSize:ke.maxApplicationDataSize},e,t)},e.getChat=function(e){return N(e)},e.getChats=function(){return s.chatCache.getAll()},e.chatLeave=function(e){return N(e),$(e,!0).catch(function(t){throw Object(h.default)(h.default.ERROR,"%s: Failed to leave chatId=%s; error=%s",v,e,t),t})},e.participantRemove=function(e,t){if(t===s.registrationInfo.regId)throw new u.Error(`Not allowed to remove local user from chatId=${e}`);const n=N(e),l=s.db.findChat(e);if(n.isOneToOne)throw new u.Error("Not allowed to remove participants from 1:1 chatId="+e);{const t=l.getParticipantView(s.registrationInfo.regId);if(void 0===t||!1===t.isAdmin)throw new u.Error(`Not allowed to remove participants from chatId=${e} `+"when not an admin")}return Object(h.default)(h.default.DEBUG1,"%s: Removing regId=%s from chatId=%s",v,t,e),y.requestManager.retryableRequest(()=>s.managementClient.removeMember(e,t)).catch(t=>{W(e,t,!0)}).then(()=>{Object(h.default)(h.default.INFO,"%s: Removed regId=%s from chatId=%s",v,t,e);const n=s.db.findChat(e);let l=N(e);C({messengerData:s,emitFunc:E},n,l,t,a.a.State.Left),Object(h.default)(h.default.DEBUG1,"%s: Sending remove message to chatId=%s for regId=%s",v,e,t);const r=j(e,s.rim_im.remove(t)).then(l=>{Object(h.default)(h.default.INFO,"%s: Sent remove message to chatId=%s for regId=%s",v,e,t);const r=new o.a(n.mailboxId,l,s.registrationInfo.regId,new Date,"Remove",!1,!1,{value:o.a.StateValue.Sent,isPartial:!1},!1,!1,void 0,{regId:t});return X(e,r),Promise.resolve()}).catch(n=>(Object(h.default)(h.default.WARNING,"%s: Failed to send remove message to chatId=%s for regId=%s %s",v,e,t,n),Promise.resolve()));Object(h.default)(h.default.DEBUG1,"%s: Sending chatRemoved message to regId=%s",v,t);const i=s.keyManager.getChatKey(e).then(t=>(Object(h.default)(h.default.DEBUG1,"%s: Retrieved chat key for chatId=%s",v,e),g.generateAuthCode(t))).then(n=>(Object(h.default)(h.default.DEBUG1,"%s: Generated auth code for chatId=%s",v,e),D(t,s.rim_im.chatRemoved(e,n.hash,n.encryptedCode)))).then(()=>(Object(h.default)(h.default.INFO,"%s: Sent chatRemoved message to regId=%s",v,t),Promise.resolve())).catch(e=>(Object(h.default)(h.default.WARNING,"%s: Failed to send chatRemoved to regId=%s: %s",v,t,e),Promise.resolve()));return Promise.all([r,i])}).then(()=>(Object(h.default)(h.default.INFO,"%s: Removed regId=%s from chatId=%s",v,t,e),Promise.resolve())).catch(n=>(Object(h.default)(h.default.ERROR,"%s: Failed to remove regId=%s from chatId=%s: %s",v,t,e,n),Promise.reject(new u.Error)))},e.participantPromote=function(e,t){return l(e,t,!0)},e.participantDemote=function(e,t){return l(e,t,!1)},e.isAdmin=function(e,t){const n=s.db.findChat(e).getParticipantView(t);if(void 0===n)throw new u.NotFoundError("No participant for regId");return n.isAdmin},e.getChatMessages=function(e){return N(e),s.db.findChat(e).messages.get()},e.fetchChatMessages=function(e,t){N(e);const l=s.db.findChat(e),i=l.getParticipantMessageInfo(s.registrationInfo.regId);if(void 0===i)throw new u.NotFoundError("Local user not a participant");let o;const a=function(e){return e&&void 0!==e.syncMode?e.syncMode:void 0!==n.syncMode?n.syncMode:Be.SyncMode.SyncToRead}(t);if(l.state===r.a.State.WaitingForRestore&&(l.state=r.a.State.Restoring,t&&(a===Be.SyncMode.SyncToDelivered||a===Be.SyncMode.SyncToRead))){let e,t;switch(a){case Be.SyncMode.SyncToDelivered:e="deliveredMsgId";break;case Be.SyncMode.SyncToRead:e="readMsgId"}o=function(){if(e){if((t=i[e]).isEmpty())return!1;e=void 0}const n=l.messages.earliestMessageId();return n&&n.isLessThanOrEqual(t)}}let c,d,p;if(t&&void 0!==t.minFetchCount){const e=l.messages.length+t.minFetchCount;c=function(){return l.messages.length>=e}}return t&&t.minMessageId&&(d=function(){var e=l.messages.earliestMessageId();return e&&e.isLessThanOrEqual(t.minMessageId)}),void 0!==c&&(p=(()=>{let e=[];if(o){if(!o())return!1;e.push("syncTarget")}if(c){if(!c())return!1;e.push("minFetchCount")}if(d){if(!d())return!1;e.push("minMessageId")}return Object(h.default)(h.default.INFO,"%s: fetchChatMessages completed due to: %s",v,e),!0})),I(l,p)},e.getChatMessageState=function(e,t){let n=[];const l=s.db.findChat(e);for(const e of l.getParticipantMessageInfos(s.registrationInfo.regId,!0)){const l={regId:e.regId};t.isLessThanOrEqual(e.msgInfo.readMsgId)?l.state=o.a.StateValue.Read:t.isLessThanOrEqual(e.msgInfo.deliveredMsgId)&&(l.state=o.a.StateValue.Delivered),n.push(l)}return Promise.resolve(n)},e.getChatMessage=function(e,t){N(e);var n=s.db.findChat(e),l=n.messages.getPosition(t);return l.isDuplicate?Promise.resolve(n.messages.lookup(l.index)):y.requestManager.retryableRequest(function(){return s.contentClient.pull(e,t)}).then(function(n){if(!n.messages&&n.messages.isEmpty())return Promise.reject(new u.NotFoundError("Cannot find message "+t));var l=n.messages[n.messages.length-1];return l.messageId.isEqual(t)?s.rim_im.receive(e,l.userId,l.messageId,l.message.binary).then(function(n){return S(t,e,l.userId,l.timestamp,n).withFileSize()}):Promise.reject(new u.NotFoundError("Cannot find message "+t))}).catch(function(t){return H(e,t)})},e.chatMessageSend=function(e,t){Object(h.default)(h.default.INFO,"%s: Sending a message for chatId=%s",v,e);var n=s.db.findChat(e);if(n.state===r.a.State.Leaving||n.state===r.a.State.Defunct)throw new u.Error("Invalid chat state "+n.state);if(void 0===t)throw new u.Error("Missing mandatory message param");if("string"!=typeof t.tag)throw new u.Error("message.tag must be a string, not "+typeof t.tag);if(t.tag.length<1)throw new u.Error("Invalid empty message.tag");if(!qe(t.tag))throw new u.Error("Invalid reserved message.tag: "+t.tag);var l,i,a=0,c=0,p=0;if(t.content){if("string"!=typeof t.content)throw new u.Error("message.content must be a string, not "+typeof t.content);a=(l=m.encode(t.content)).length}if(t.data){if("object"!=typeof t.data)throw new u.Error("message.data must be a JSON object, not "+typeof t.data);if(123!==(i=new d.b(t.data)).data[0])throw new TypeError("message.data not a JSON object first char is "+i.data[0]);c=i.length}if(t.thumbData){if(!(t.thumbData instanceof Uint8Array||"node"!==Ne.a&&t.thumbData instanceof Blob))throw new u.Error("message.thumbData must be a Uint8Array or Blob, not "+typeof t.thumbData);if(t.thumbData.length>56320)throw new u.Error("message.thumbData must have size no more than 56320 bytes, it is "+t.thumbData.length);p=t.thumbData.length}if(t.thumbName&&"string"!=typeof t.thumbName)throw new u.Error("message.thumbName must be a string, not "+typeof t.thumbName);var f=a+c+p;if(f>ke.maxApplicationDataSize)throw new u.Error("The combined length of the message content, data, and thumbData "+`must not exceed ${ke.maxApplicationDataSize}; `+`content=${a} data=${c} thumbData=${p} `+`total=${f}`);let y,b;if(t.fileData){if("object"!=typeof t.fileData)throw new u.Error("message.fileData must be an object");if(!(t.fileData.data instanceof Uint8Array||"node"!==Ne.a&&t.fileData.data instanceof Blob))throw new u.Error("message.fileData.data must be a Uint8Array or Blob, not "+typeof t.fileData.data);if((y=t.fileData.data instanceof Uint8Array?t.fileData.data.byteLength:t.fileData.data.size)>Be.MaxFileSize)throw new u.Error(`message.fileData.data exceeds ${Be.MaxFileSize} bytes; `+`size=${y}`);if(t.fileData.progress&&"function"!=typeof t.fileData.progress)throw new u.Error("message.fileData.progress must be a function");if(t.fileData.name&&"string"!=typeof t.fileData.name)throw new u.Error("message.fileData.name must be a string, not "+typeof t.fileData.name)}if(t.hasOwnProperty("ref")){if(!(t.ref instanceof Array))throw new u.Error("message ref must be an array");const e=new Set;for(const n of t.ref){if(e.has(n.tag))throw new u.Error('message ref contains multiple "'+n.tag+'" tags');if(!(n.messageId instanceof Y.a))throw new u.Error("message ref messageId must be an instance of MessageId");e.add(n.tag)}}if(t.fileData){const e=new Promise(e=>{if("node"!==Ne.a&&t.fileData.data instanceof Blob){const n=new FileReader;n.onload=(()=>{e(new Uint8Array(n.result))}),n.readAsArrayBuffer(t.fileData.data)}else e(t.fileData.data)});b=Promise.all([e.then(e=>g.encryptFile(e)),s.lastUpload]).then(e=>{const n=e[0];return Object(R.default)(n.data instanceof Uint8Array),Object(R.default)(y===n.data.byteLength),s.busClient.uploadFile(s.registrationInfo.regId,n.data,t.fileData.progress).then(e=>{const l={url:e,key:n.key,hash:n.hash,size:y};return void 0!==t.fileData.name&&(l.name=t.fileData.name),l})}),s.lastUpload=b}else b=Promise.resolve();var E;return E=t.thumbData?new Promise(function(e){if("node"!==Ne.a&&t.thumbData instanceof Blob){var n=new FileReader;n.onload=function(){e(new Uint8Array(n.result))},n.readAsArrayBuffer(t.thumbData)}else e(t.thumbData)}):Promise.resolve(),b.then(function(r){return E.then(function(i){var a=s.rim_im.content(t.tag,l,t.data,i,t.thumbName,r,t.ref);return j(e,a).then(l=>{const a=new o.a(n.mailboxId,l,s.registrationInfo.regId,new Date,t.tag,!1,!1,{value:o.a.StateValue.Sent,isPartial:!1},!1,!1,t.content,t.data,i,t.thumbName,r,t.ref);return X(e,a),a}).catch(t=>{throw Object(h.default)(h.default.ERROR,"%s: Failed to send message in chatId=%s; error=%s",v,e,t),t})})})},e.chatEventSend=((e,t,n)=>{const l=s.chatCache.get(e);if(void 0===l)throw new u.Error(`unknown chatId=${e}`);return j(e,s.rim_im.event(t,n),{onlineOnly:!0}).then(()=>{Object(h.default)(h.default.INFO,"%s: Sent event tag=%s to %s",v,t,l)}).catch(e=>{throw Object(h.default)(h.default.WARNING,"%s: Failed to send event tag=%s to %s: %s",v,t,l,e),Object(Z.default)(e)})}),e.chatMessageRead=function(e,t){if(Object(h.default)(h.default.INFO,"%s: Marking messageId=%s in chatId=%s as read",v,t,e),!s.db.chats.has(e))throw new u.NotFoundError("Refusing to post read status to unknown chatId="+e);if(!(t instanceof Y.a)||0===t.length)throw TypeError("messageId must be a non-empty instance of MessageId");return B(e,void 0,t)},e.getUnreadCount=function(e){N(e);const t=s.db.findChat(e),n=t.getParticipantMessageInfo(s.registrationInfo.regId);if(void 0===n)throw new u.NotFoundError("Local user not a participant");return I(t,()=>{const e=t.messages.earliestMessageId();return!n.readMsgId.isEmpty()&&e&&e.isLessThanOrEqual(n.readMsgId)}).then(()=>{let e=0;const l=t.messages.getPosition(n.readMsgId);let r=t.messages.getMessages();for(let e=0;e<l.index;++e)r.next();l.isDuplicate&&r.next();for(let t of r)t.isIncoming&&++e;return e})},e.chatMessageWatch=function(e,t,n){s.db.findChat(e).messages.setWatcher(t,n)},e.chatMessageUnwatch=function(e,t,n){s.db.findChat(e).messages.unsetWatcher(t,n)},e.chatMessageDestroy=function(e,t){if(void 0===s.chatCache.get(e))throw new u.NotFoundError(`Refusing to destroy messages in unknown chatId=${e}`);let n,l;try{n=s.db.findChat(e)}catch(t){throw new u.NotFoundError(`Refusing to destroy messages in unknown chatId=${e}: ${t}`)}Object(R.default)(void 0!==n);let r={};if(void 0!==t){if(!(t instanceof Y.a))throw new u.Error(`Refusing to destroy invalid messageId=${t} in `+`${n}`);const e=n.messages.getMessage(t);if(void 0===e)throw new u.NotFoundError(`Refusing to destroy unknown messageId=${t} in `+`${n}`);if(e.isIncoming)throw new u.Error(`Refusing to destroy inbound messageId=${t} in `+`${n}`);if(!qe(e.tag))throw new u.Error(`Refusing to destroy non-content messageId=${t} `+`with tag=${e.tag} in ${n}`);l=s.rim_im.recall([t.binary]),r.replaces=[t]}else{l=s.rim_im.shred();const e=n.shredMessages.get(s.registrationInfo.regId);r.replacesAll=void 0!==e?e:new Y.a}return j(e,l,r).then(n=>{const l=s.db.getChat(e);if(void 0===l)return Promise.resolve();if(void 0!==t){const n=l.messages.getMessage(t);if(void 0===n)return Promise.resolve();const r=n.recalled();l.messages.replace(r),E("chatMessageUpdated",new c.ChatMessageUpdated(N(e),r))}else{M(e,n,s.registrationInfo.regId);const t=new o.a(l.mailboxId,n,s.registrationInfo.regId,new Date,o.a.ReservedTag.Shred,!1,!1,{value:o.a.StateValue.Sent,isPartial:!1},!1,!1);X(e,t)}return Promise.resolve()}).catch(e=>(Object(h.default)(h.default.WARNING,"Failed to destroy "+`${t?"messageId="+t:"all messages"} `+`in ${n}: ${e}`),Promise.reject(e)))},e.chatMessageRecall=function(e,t){if(void 0===s.chatCache.get(e))throw new u.NotFoundError("Refusing to recall from unknown chatId="+e);var n=s.db.findChat(e),l=n.messages.getPosition(t);if(!l.isDuplicate)throw new u.NotFoundError("Cannot recall unknown message="+t+" from chatId="+e);var r=n.messages.lookup(l.index);if(r.isIncoming)throw new u.Error("Ignoring request to recall inbound message="+t);if(!qe(r.tag))throw new u.Error("Cannot recall message with tag="+r.tag);return j(e,s.rim_im.recall([t.binary])).then(function(){var t=r.recalled();n.messages.replace(t),E("chatMessageUpdated",new c.ChatMessageUpdated(N(e),t))}).catch(n=>(Object(h.default)(h.default.ERROR,"%s: Failed to recall messageId=%s in chatId=%s; error=%s",v,t,e,n),Promise.reject(n)))},e.chatMessageDelete=function(e,t){var n=s.db.findChat(e),l=n.messages.getPosition(t);if(!l.isDuplicate)throw new u.NotFoundError("Cannot delete unknown message="+t+" from chatId="+e);var r=n.messages.lookup(l.index).deleted();return n.messages.replace(r,l.index),E("chatMessageUpdated",new c.ChatMessageUpdated(N(e),r)),j(e,s.rim_im.delete([t.binary])).then(()=>{}).catch(n=>(Object(h.default)(h.default.ERROR,"%s: Failed to delete messageId=%s in chatId=%s; error=%s",v,t,e),Promise.reject(n)))},e.chatShred=function(e){if(void 0===s.chatCache.get(e))throw new u.NotFoundError("Refusing to shred from unknown chatId="+e);var t=s.db.findChat(e);return j(e,s.rim_im.shred()).then(n=>{M(e,n,s.registrationInfo.regId);var l=new o.a(t.mailboxId,n,s.registrationInfo.regId,new Date,o.a.ReservedTag.Shred,!1,!1,{value:o.a.StateValue.Sent,isPartial:!1},!1,!1);X(e,l)}).catch(t=>(Object(h.default)(h.default.ERROR,"%s: Failed to shred chatId=%s; error=%s",v,e,t),Promise.reject(t)))},e.getTypingUsers=function(e){if(void 0===s.chatCache.get(e))throw new u.Error("No chat known with id: "+e);const t=s.db.findChat(e),n=[];return t.typingUsers.forEach((l,r)=>{try{const l=t.getParticipantView(r);void 0!==l&&n.push(l)}catch(t){Object(h.default)(h.default.WARNING,"%s: Failed to add typing user for regId=%s in chatId=%s; error=%s",v,r,e,t)}}),n},e.chatTyping=function(e,t,n){if(void 0===s.chatCache.get(e))throw new u.Error(`No chat known with id: ${e}`);if("string"==typeof t){if(n&&(!(n instanceof Y.a)||0===n.length))throw TypeError("messageId must be a non-empty instance of MessageId")}else if(t)throw TypeError("tag must be a string");const l=n?n.binary:void 0;return j(e,s.rim_im.typing(t,l),{onlineOnly:!0}).then(()=>{}).catch(t=>(Object(h.default)(h.default.ERROR,"%s: Failed to send typing notification in chatId=%s; error=%s",v,e,t),Promise.reject(t)))};var i=Promise.resolve();return e.filterAdd=function(e){if(!y.filter)throw new u.Error("Cannot add to filter list when not in filtered mode");y.filter.add(e);{const t=s.chatCache.get(e);if(void 0!==t)return Promise.resolve(t)}return new Promise(function(t,n){s.mailboxFetcher.fetchAndStore(e).then(e=>{t(e)}).catch(l=>{l instanceof u.Forbidden||l instanceof u.NotFound?(Object(h.default)(h.default.NOTICE,"%s: User is not yet a participant in chatId=%s; checking for outstanding grants",v,e),i=i.then(function(){var r=s.chatCache.get(e);return void 0!==r?(t(r),Promise.resolve()):x().then(function(){const r=s.chatCache.get(e);void 0===r?(Object(h.default)(h.default.NOTICE,"%s: There was no grant outstanding for chatId=%s; user has not yet been invited to join the chat",v,e),n(l)):t(r)}).catch(function(e){Object(h.default)(h.default.ERROR,"%s: Failed to get outstanding grants: %s",v,e),n(e)})})):n(l)})})},e.filterRemove=function(e){if(!y.filter)throw new u.Error("Cannot remove from filter list when not in filtered mode");y.filter.has(e)&&(y.filter.delete(e),q(e))},e.getMessageStorageFactory=function(){return s.db.messageStorageFactory},e.chatParticipantTimesGet=function(e,t){const n=s.db.findChat(e),l=[];if(void 0!==t){if(!Array.isArray(t))throw new TypeError("The regIds argument must be an array of strings");for(const e of t)if("string"!=typeof e)throw new TypeError("The regIds argument must be an array of strings")}function r(e){return 0===e?void 0:new Date(1e3*e)}for(const e of n.getParticipantMessageInfos(void 0,!1,t))l.push({regId:e.regId,delivered:r(e.msgInfo.deliveredTimestamp),read:r(e.msgInfo.readTimestamp)});return l},t});function E(t,n){h.default.debug(h.default.DEBUG2,"%s: Emitting %s: %s",v,t,JSON.stringify(n));try{e.emit(t,n),Object(h.default)(h.default.INFO,"%s: Emitted %s event",v,t)}catch(e){Object(h.default)(h.default.ERROR,"%s: Error emitting %s event: %s",v,t,e)}}function I(e,t){if(e.synced)return Promise.resolve(e.messages.get());var n=e.mailboxId;function l(){let e;try{(e=s.db.findChat(n)).state!==r.a.State.Leaving&&e.state!==r.a.State.Defunct||(e=void 0)}catch(e){}return e}var i=Promise.resolve();return function r(){var o=[];return s.syncManager.restore(n,e.nextPullPoint,function(e){o.push(s.rim_im.receive(e.mailboxId,e.messageData.userId,e.messageData.messageId,e.messageData.message.binary).then(t=>({envelope:e.messageData,message:t})).catch(t=>{Object(h.default)(h.default.ERROR,"%s: Failed to restore messageId=%s in chatId=%s; error=%s",v,e.messageData.messageId,e.mailboxId,t)}))},function(e){let n=l();if(void 0===n)return!0;var r=o;return i=i.then(function(){return Promise.all(r).then(function(e){let t=l();return void 0===t?Promise.reject(new u.PermanentFailure("Chat has been left")):function(e,t){Object(h.default)(h.default.INFO,"%s: Processing %d pulled messages",v,t.length);let n=[];for(const l of t){if(!l)continue;const t=l.envelope,r=l.message.body;switch(Object(h.default)(h.default.INFO,'%s: Received "%s": %s in chatId=%s v=%s',v,l.message.name,t,e.mailboxId,l.message.verified||!1),l.message.name){case"status":{let n={messageId:t.messageId,regId:t.userId,status:r,timestamp:t.timestamp};for(const t of k(e,[n]))E("chatMessageUpdated",new c.ChatMessageUpdated(N(e.mailboxId),t));continue}case"join":try{let n=S(t.messageId,e.mailboxId,t.userId,t.timestamp,l.message),r=e.messages.insertOne(n,l.message.body.inviteId);r&&E("chatMessageUpdated",new c.ChatMessageUpdated(N(e.mailboxId),r))}catch(t){Object(h.default)(h.default.ERROR,'%s: Ignoring "join" message for chatId=%s; error=%s',v,e.mailboxId,t)}void 0===e.getParticipantView(t.userId)&&e.setParticipant(t.userId,a.a.State.Left,!1);continue;case"recall":_(e.mailboxId,r.ids,t.userId);continue;case"shred":M(e.mailboxId,t.messageId,t.userId);break;case"delete":T(e.mailboxId,r.ids,t.userId);continue;case"metadataChanged":{const n=void 0===l.message.body.changes?"":l.message.body.changes;Object(h.default)(h.default.INFO,"%s: Handling metadataChanged[%s] from regId=%s for %s",v,n,t.userId,e),s.mailboxFetcher.fetchAndStore(e.mailboxId,!0);continue}}const i=S(t.messageId,e.mailboxId,t.userId,t.timestamp,l.message);n.push(i),e.processPulledReferences(i,n)}return n=n.map(function(t){if(e.deletedMessages.has(t.messageId.binary.toString()))return Object(h.default)(h.default.INFO,"Received messageId=%s was deleted",t.messageId),t.deleted();const n=e.recalledMessages.get(t.messageId.binary.toString()),l=e.shredMessages.get(t.sender);return qe(t.tag)&&(n&&-1!==n.indexOf(t.sender)||l&&!l.isLessThan(t.messageId))?(Object(h.default)(h.default.INFO,"Received messageId=%s was recalled",t.messageId),t.recalled()):t}),Promise.all(n.map(e=>e.withFileSize())).then(n=>{k(e,[],n[Symbol.iterator]()),e.messages.union(n,!1),E("chatMessageListUpdated",new c.ChatMessageListUpdated(N(e.mailboxId),e.messages.get())),Object(h.default)(h.default.INFO,"%s: Processed %d pulled messages; %d control, %d non-control",v,t.length,t.length-n.length,n.length)}).catch(e=>{Object(h.default)(h.default.ERROR,"%s: Failed to process all %d pulled messages; some may have been processed: %s",v,t.length,e)})}(t,e)})}),o=[],n.nextPullPoint=e,void 0===n.nextPullPoint&&(n.synced=!0),!!t}).then(function(){return t?i.then(function(){let e=l();return void 0===e?Promise.reject(new u.PermanentFailure("Chat has been left")):t()||void 0===e.nextPullPoint?Promise.resolve():r()}):Promise.resolve()})}().then(function(){return i}).then(function(){let e=l();if(void 0===e)return Promise.reject(new u.PermanentFailure("Chat has been left"));if(e.state===r.a.State.Restored)return e.messages.get();e.state=r.a.State.Restored,L(e);var t=e.messages.latestMessageId();return t&&B(n,t).catch(function(e){Object(h.default)(h.default.ERROR,"%s: Failed to post delivery notification for  messageId=%s: %s",v,t,e)}),e.messages.get()}).catch(function(e){throw Object(h.default)(h.default.ERROR,"%s: Failed to fetch all messages for chatId=%s; error=%s",v,n,e),e})}function S(e,t,n,l,r){const i=n!==s.registrationInfo.regId;let a,c,d,p,g,h,f=null;const m=s.db.findChat(t),y=r.body;switch(r.name){case"content":if(f=y.tag,a=y.content,c=y.data,d=y.thumb,p=y.thumbName,g=y.attach,y.ref){h=[];for(const e of y.ref)h.push({tag:e.tag,messageId:new Y.a(e.messageId)})}break;case"subject":f=o.a.ReservedTag.Subject,a=y.subject;break;case"join":f=o.a.ReservedTag.Join;break;case"leave":f=o.a.ReservedTag.Leave;break;case"shred":f=o.a.ReservedTag.Shred;break;case"remove":f=o.a.ReservedTag.Remove,c=y;break;case"admin":f=o.a.ReservedTag.Admin,c=y;break;default:throw new u.Error('Received unsupported non-identity message "'+r.name+'"')}return new o.a(m.mailboxId,e,n,new Date(1e3*l),f,i,!r.verified,{value:i?o.a.StateValue.Delivered:o.a.StateValue.Sent,isPartial:!1},!1,!1,a,c,d,p,g,h)}function _(e,t,n){var l=s.db.findChat(e);t.forEach(function(t){var r=new Y.a(t);if(l){var i=l.messages.getPosition(r);if(i.isDuplicate){var s=l.messages.lookup(i.index);if(qe(s.tag)&&s.sender===n){var o=l.messages.lookup(i.index).recalled();l.messages.replace(o),E("chatMessageUpdated",new c.ChatMessageUpdated(N(e),o))}}l.recalledMessages.has(r.binary.toString()),l.recalledMessages.set(r.binary.toString(),n)}})}function T(e,t,n){if(n===s.registrationInfo.regId){var l=s.db.findChat(e);t.forEach(function(t){var n=new Y.a(t),r=l.messages.getPosition(n);if(r.isDuplicate){var i=l.messages.lookup(r.index);if(i.isDeleted)Object(h.default)(h.default.INFO,"%s: Ignoring delete for messageId=%s; already deleted",v,t);else{var s=i.deleted();l.messages.replace(s),E("chatMessageUpdated",new c.ChatMessageUpdated(N(e),s))}}else Object(h.default)(h.default.INFO,"%s: Ignoring delete for messageId=%s; not found",v,t);l.deletedMessages.add(n.binary.toString())})}else Object(h.default)(h.default.INFO,"%s: Ignoring delete message received from another identity",v)}function M(e,t,n){var l=s.db.findChat(e),r=l.shredMessages.get(n);if(!r||r.isLessThan(t)){l.shredMessages.set(n,t);var i=[];for(let e of l.messages.getMessages())e.sender===n&&qe(e.tag)&&i.push(e.recalled());l.messages.union(i,!0),E("chatMessageListUpdated",new c.ChatMessageListUpdated(N(e),l.messages.get()))}}function j(e,t,n){const l=m.decode(t.subarray(1,t.findIndex(e=>58===e)));Object(h.default)(h.default.DEBUG1,"%s: Sending %s message to chatId=%s",v,l,e);const r=s.rim_im.protectChat(e,t);function i(){return r.then(t=>s.syncManager.post(e,t,n))}return(n&&!0===n.onlineOnly?i():y.requestManager.retryableRequest(i)).then(n=>(Object(h.default)(h.default.INFO,"%s: Sent %s message to m=%s M=%s",v,l,e,n),h.default.debug(h.default.DEBUG2,"%s: Sent to m=%s M=%s: %s",v,e,n,d.e(t)),n)).catch(t=>(Object(h.default)(h.default.ERROR,"%s: Failed to post protected %s message to chatId=%s; error=%s",v,l,e,t),H(e,t)))}function D(e,t){const n=m.decode(t.subarray(1,t.findIndex(e=>58===e)));Object(h.default)(h.default.DEBUG1,"%s: Sending identity %s message to regId=%s",v,n,e);const l=s.rim_im.protectUser(e,t);return y.requestManager.retryableRequest(()=>l.then(t=>{const n="id."+e;return s.syncManager.post(n,t)})).then(l=>(Object(h.default)(h.default.INFO,"%s: Sent identity %s message to regId=%s M=%s",v,n,e,l),h.default.debug(h.default.DEBUG2,"%s: Sent to regId=%s M=%s: %s",v,e,l,d.e(t)),l)).catch(t=>{throw Object(h.default)(h.default.ERROR,"%s: Failed to post protected identity %s message to regId=%s; error=%s",v,n,e,t),t})}function x(){return y.filter&&0===y.filter.size?Promise.resolve():y.requestManager.retryableRequest(function(){return s.throwIfSipRegistrationFailed&&s.throwIfSipRegistrationFailed(),s.managementClient.getAllMailboxGrants()}).then(function(e){var t=[];return e.forEach(function(e){!y.filter||y.filter.has(e.mailboxId)?t.push(b.a.digest(b.a.DigestAlgorithm.SHA512,e.data).then(t=>s.rim_im.receive("id."+s.registrationInfo.regId,e.sender,new Y.a(t),e.data).then(n=>"invite"!==n.name?(Object(h.default)(h.default.ERROR,"%s: Dropping grant for chatId=%s with an unsupported messageType=%s",v,e.mailboxId,n.name),Promise.resolve()):(Object(h.default)(h.default.INFO,"%s: Processing grant invite=%s",v,JSON.stringify(n)),U(n.body,e.sender,t))).catch(t=>{Object(h.default)(h.default.ERROR,"%s: Failed to process grant for chatId=%s from regId=%s: %s",v,e.mailboxId,e.sender,t)}))):Object(h.default)(h.default.INFO,"%s: Ignoring grant for chatId=%s that is not in filter set",v,e.mailboxId)}),Promise.all(t)})}function N(e){var t=s.chatCache.get(e);if(void 0===t)throw new u.NotFoundError('Cannot getChat: chatId="'+e+'" not found');return t}function U(e,t,n){if(!(e.symmetricKey instanceof Uint8Array)||0===e.symmetricKey.length)return Promise.reject(new u.Error("Bad symmetricKey="+e.symmetricKey));var l=s.chatCache.get(e.mailboxId);if(void 0!==l)return Object(h.default)(h.default.INFO,"%s: Ignoring invite to join known %s",v,l),Promise.resolve();if(y.filter&&!y.filter.has(e.mailboxId))return Object(h.default)(h.default.INFO,"%s: Ignoring invite to join chatId=%s which is not in filter list",v,e.mailboxId),Promise.resolve();if(Object(h.default)(h.default.INFO,"%s: Accepting invite to join %schatId=%s from regId=%s",v,e.isConference?"":"OneToOne ",e.mailboxId,t),!e.isConference){const n=s.chatCache.get(s.db.getPeerChatId(t));if(n&&n.state!==r.a.View.State.Defunct&&(Object(h.default)(h.default.INFO,"%s: Leaving %s in favour of chatId=%s from peer=%s",v,n,e.mailboxId,t),$(n.chatId).catch(e=>{Object(h.default)(h.default.ERROR,"%s: Failed to leave %s; error=%s",v,n,e)})),void 0!==s.db.getPeerPromise(t))return Object(h.default)(h.default.NOTICE,"%s: Already creating 1:1 chat with regId=%s; ignoring invite for duplicate 1:1 chat mailboxId=%s",v,t,e.mailboxId),Promise.reject(new u.Error("Duplicate 1:1"))}const i=s.db.createChat(e.mailboxId,r.a.State.Joining,[{regId:s.registrationInfo.regId,state:a.a.State.PendingJoin,admin:!1},{regId:t,state:a.a.State.Active,admin:!1}],!e.isConference);i.subject=f.truncate(e.subject,128),i.lastActivity=new Date,i.inviteId=void 0!==e.inviteId?e.inviteId:n,Object(R.default)(void 0!==i.inviteId,"chatData.inviteId must be defined");return(()=>{if(y.kmsMode){const t=g.generateBytes(12);return g.authEncrypt(e.symmetricKey,t,s.keyManager.mgmtKey).then(n=>y.requestManager.retryableRequest(()=>s.managementClient.join(e.mailboxId,void 0,{payload:n.content,mac:n.tag,nonce:t})))}return y.requestManager.retryableRequest(()=>s.managementClient.join(e.mailboxId))})().then(function(){const t=s.db.findChat(e.mailboxId);return t.state=r.a.State.WaitingForRestore,s.keyManager.setChatKey(e.mailboxId,e.symmetricKey),Object(h.default)(h.default.INFO,'%s: Posting "join" message after successfully joining chatId=%s',v,t.mailboxId),j(e.mailboxId,s.rim_im.join(t.inviteId))}).then(function(){const n=s.db.findChat(e.mailboxId);if(C({messengerData:s,emitFunc:E},n,void 0,s.registrationInfo.regId,a.a.State.Active),!e.isConference){var i=s.chatCache.get(s.db.getPeerChatId(t));if(i&&i.state!==r.a.View.State.Defunct)return i.chatId===e.mailboxId?void Object(R.default)(!1):(Object(h.default)(h.default.INFO,"%s: Found existing OneToOne chatId=%s with peer=%s; invite to chatId=%s will be discarded",v,i.chatId,t,e.mailboxId),void $(e.mailboxId))}n.inviteId=new Uint8Array([]),l=n.view,s.chatCache.set(l),l.isOneToOne&&s.db.addPeerChatId(t,l.chatId),Object(h.default)(h.default.INFO,'%s: Successfully posted "join" to %s',v,l),E("chatAdded",new c.ChatAdded(l)),s.mailboxFetcher.fetchAndStore(e.mailboxId,!0)})}function F(e,t){function n(e){Object(h.default)(h.default.INFO,"%s: Received chatRemoved message for mailboxId=%s; removing chat",v,e),q(e),s.mailboxFetcher.fetchAndStore(e,!0)}"system"===t?n(e.mailboxId):s.keyManager.getChatKey(e.mailboxId).then(t=>g.verifyAuthCode(e.encryptedAuthCode,e.authCode,t)).then(l=>{l?n(e.mailboxId):Object(h.default)(h.default.INFO,"%s: Ignoring chatRemoved for chatId=%s from regId=%s; authCode mismatch",v,e.mailboxId,t)}).catch(n=>{Object(h.default)(h.default.ERROR,"%s: Failed to verify authCode for chatRemoved message for chatId=%s from regId=%s; error=%s",v,e.mailboxId,t,n)})}function k(e,t,n){Object(h.default)(h.default.DEBUG1,"%s: Processing %d status messages for %s",v,t.length,e);const l=[];try{s.db.updateChatAndParticipantStateData(e,t)}catch(e){return Object(h.default)(h.default.ERROR,"%s: Failed to update state data: %s",v,e),l}const r=e.getParticipantMessageInfo(s.registrationInfo.regId);function i(e,t){e.state.value===t.value&&e.state.isPartial===t.isPartial||l.push(e.withNewState(t))}n||(n=e.messages.getMessages());for(const t of n)if((t.state.value!==o.a.StateValue.Read||!1!==t.state.isPartial)&&t.state.value!==o.a.StateValue.Failed)if(t.isIncoming){if(t.messageId.isLessThanOrEqual(r.readMsgId)){i(t,{value:o.a.StateValue.Read,isPartial:!1});continue}i(t,{value:o.a.StateValue.Delivered,isPartial:!1})}else t.messageId.isLessThanOrEqual(e.fullReadMsgId)?i(t,{value:o.a.StateValue.Read,isPartial:!1}):t.messageId.isLessThanOrEqual(e.partialReadMsgId)?i(t,{value:o.a.StateValue.Read,isPartial:!0}):t.messageId.isLessThanOrEqual(e.fullDeliveredMsgId)?i(t,{value:o.a.StateValue.Delivered,isPartial:!1}):t.messageId.isLessThanOrEqual(e.partialDeliveredMsgId)&&i(t,{value:o.a.StateValue.Delivered,isPartial:!0});return e.messages.union(l,!0),l}function B(e,t,n){const l=s.db.findChat(e);if(l.state!==r.a.State.Restored)return Promise.resolve();const i=l.getParticipantMessageInfo(s.registrationInfo.regId);if(void 0===i)throw new u.NotFoundError("local user not a participant");let o=i.deliveredMsgId,a=i.readMsgId;return k(l,[{messageId:new Y.a,regId:s.registrationInfo.regId,status:{d:t?t.binary:t,r:n?n.binary:n},timestamp:s.getCurrentTimestamp()}]).forEach(function(e){E("chatMessageUpdated",new c.ChatMessageUpdated(l.view,e))}),o.isEqual(i.deliveredMsgId)&&a.isEqual(i.readMsgId)?(Object(h.default)(h.default.DEBUG1,'%s: Skipping "status" message send for chatId=%s; messageIds did not change',v,e),Promise.resolve()):(o=i.deliveredMsgId,a=i.readMsgId,Object(h.default)(h.default.INFO,'%s: Sending "status" message for chatId=%s d=%s r=%s',v,e,t,n),j(e,s.rim_im.status(a.isGreaterThanOrEqual(o)||0===o.length?void 0:o.binary,0===a.length?void 0:a.binary),{pushAsStatus:!0,replaces:0===l.statusMessageId.length?[]:[l.statusMessageId]}).then(function(e){l.statusMessageId=e}))}function L(e,t){if(void 0!==s.chatCache.get(e.mailboxId)&&(void 0===t||e.getViewState()!==t.state)){let t=e.view;if(t.state===r.a.View.State.Defunct&&t.isOneToOne){const n=t.participants[0].regId===s.registrationInfo.regId?t.participants[1].regId:t.participants[0].regId;s.db.removePeerChatId(n,e.mailboxId)}if(t.state===r.a.View.State.Ready){const n=e.messages.latestMessage();n&&(e.lastActivity=n.timestamp,t=e.view)}E("chatUpdated",new c.ChatUpdated(t)),s.chatCache.set(t)}}function $(e,t=!1){if(e.startsWith("id"))return Promise.reject(new u.Error("Refusing to leave identity mailbox="+e));let n=t;const l=s.db.getChat(e);let i;void 0!==l&&(l.state=r.a.State.Leaving,void 0===(i=s.chatCache.get(e))?n=!0:(L(l,i),l.messages.isEmpty()&&(n=!0))),Object(h.default)(h.default.INFO,"%s: Leaving %schat mailboxId=%s",v,!0===n?"and removing ":"",e);var o=s.rim_im.protectChat(e,s.rim_im.leave());return y.requestManager.retryableRequest(function(){return o.catch(function(t){if(t instanceof u.NotFoundError)return Object(h.default)(h.default.INFO,"%s: Cannot protect leave message for chatId=%s; posting message unprotected; key not found",v,e),s.rim_im.leave();throw t}).then(function(t){return Object(h.default)(h.default.INFO,'%s: Sending "leave" message for chatId=%s',v,e),s.syncManager.post(e,t).then(t=>{Object(h.default)(h.default.INFO,'%s: Sent "leave" message for chatId=%s M=%s',v,e,t)})})}).catch(function(t){t instanceof u.NotFound||t instanceof u.Forbidden||Object(h.default)(h.default.ERROR,"%s: Failed to post leave notification to chatId=%s; error=%s",v,e,t)}).then(function(){return y.requestManager.retryableRequest(function(){return s.managementClient.removeMember(e,s.registrationInfo.regId)})}).catch(function(t){t instanceof u.NotFound||t instanceof u.Forbidden||Object(h.default)(h.default.ERROR,"%s: Failed to leave chatId=%s; error=%s",v,e,t)}).then(function(){return s.syncManager.mailboxHasBeenLeft(e),D(s.registrationInfo.regId,s.rim_im.chatLeft(y.endpointId,e,!!t||void 0)).catch(t=>{Object(h.default)(h.default.ERROR,"%s: Failed to notify other endpoints that chatId=%s has been left; error=%s",v,e,t)}),Object(h.default)(h.default.INFO,"%s: Successfully left chatId=%s",v,e),!0===n&&q(e),void 0===l?void 0:l.view})}function q(e){Object(h.default)(h.default.INFO,"%s: Removing local data for chatId=%s",v,e);const t=s.db.getChat(e);if(void 0!==t){if(t.isOneToOne){const n=t.getPeerRegId(s.registrationInfo.regId);s.db.removePeerChatId(n,e)}if(void 0!==s.chatCache){const t=s.chatCache.get(e);void 0!==t&&(s.chatCache.remove(e),E("chatRemoved",new c.ChatRemoved(t)))}s.db.removeChat(e)}s.syncManager.mailboxHasBeenLeft(e),s.keyManager.removeChatKey(e)}function H(e,t){if(t instanceof u.Forbidden)throw s.mailboxFetcher.fetchAndStore(e,!0),t;W(e,t)}function W(e,t,n=!1){if(e.startsWith("id."))throw t;switch(t.name){case"BBMEnterprise.Error.Forbidden":if(n)throw s.mailboxFetcher.fetchAndStore(e,!0),t;case"BBMEnterprise.Error.NotFound":{const n=s.chatCache.get(e),l=s.db.findChat(e);n&&l&&!l.messages.isEmpty()?(Object(h.default)(h.default.INFO,"%s: Marking chatId=%s defunct due to network error=%s",v,e,t),l.state=r.a.State.Defunct,L(l,n)):(Object(h.default)(h.default.INFO,"%s: Removing chatId=%s due to network error=%s",v,e,t),q(e));break}}throw t}function X(e,t){G(t,s.db.findChat(e).messages.replace(t)===K.a.InsertionResult.Inserted)}function G(t,n){let l=N(t.chatId);const r=s.db.getChat(t.chatId),i=r.lastActivity;if(r.lastActivity=t.timestamp,r.lastActivity!==i&&(l=r.view,s.chatCache.set(l),E("chatUpdated",new c.ChatUpdated(l))),n){E("chatMessageAdded",new c.ChatMessageAdded(l,t));const n=r.processSingleReferences(t);for(const t of n){const n=r.messages.getMessage(t);e.emit("chatMessageUpdated",new c.ChatMessageUpdated(l,n))}}else E("chatMessageUpdated",new c.ChatMessageUpdated(l,t))}}function $e(e){He(e)}function qe(e){switch(e){case o.a.ReservedTag.Join:case o.a.ReservedTag.Leave:case o.a.ReservedTag.Subject:case o.a.ReservedTag.Shred:case o.a.ReservedTag.Gap:case o.a.ReservedTag.Admin:case o.a.ReservedTag.Remove:return!1}return!0}function He(e){We.forEach(t=>{(t=>{e[t]=(()=>{throw new u.Error("Cannot call "+t+": setup is not complete")})})(t)})}Object.freeze(ke),Be.prototype=Object.create(Fe.a.prototype),Be.AppMessage=l.a,Be.Chat=r.a.View,Be.ChatMessage=o.a,Be.MessageId=Y.a,Be.Participant=a.a.View,Be.SyncMode={NoSync:0,SyncToDelivered:1,SyncToRead:2},Object.defineProperty(Be,"MaxFileSize",{enumerable:!0,value:134217728});var We=["chatStart","chatInvite","chatUpdate","getChat","getChats","chatLeave","participantRemove","participantPromote","participantDemote","isAdmin","getChatMessages","fetchChatMessages","getChatMessageState","getChatMessage","chatMessageSend","chatEventSend","chatMessageRead","chatMessageRecall","chatMessageDelete","chatShred","getTypingUsers","chatTyping","filterAdd","filterRemove","getMessageStorageFactory","getUnreadCount","chatMessageWatch","chatMessageUnwatch","chatParticipantTimesGet","chatMessageDestroy"]},function(e,t){var n=e.exports={v:[{name:"version",reg:/^(\d*)$/}],o:[{name:"origin",reg:/^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,names:["username","sessionId","sessionVersion","netType","ipVer","address"],format:"%s %s %d %s IP%d %s"}],s:[{name:"name"}],i:[{name:"description"}],u:[{name:"uri"}],e:[{name:"email"}],p:[{name:"phone"}],z:[{name:"timezones"}],r:[{name:"repeats"}],t:[{name:"timing",reg:/^(\d*) (\d*)/,names:["start","stop"],format:"%d %d"}],c:[{name:"connection",reg:/^IN IP(\d) (\S*)/,names:["version","ip"],format:"IN IP%d %s"}],b:[{push:"bandwidth",reg:/^(TIAS|AS|CT|RR|RS):(\d*)/,names:["type","limit"],format:"%s:%s"}],m:[{reg:/^(\w*) (\d*) ([\w\/]*)(?: (.*))?/,names:["type","port","protocol","payloads"],format:"%s %d %s %s"}],a:[{push:"rtp",reg:/^rtpmap:(\d*) ([\w\-\.]*)(?:\s*\/(\d*)(?:\s*\/(\S*))?)?/,names:["payload","codec","rate","encoding"],format:function(e){return e.encoding?"rtpmap:%d %s/%s/%s":e.rate?"rtpmap:%d %s/%s":"rtpmap:%d %s"}},{push:"fmtp",reg:/^fmtp:(\d*) ([\S| ]*)/,names:["payload","config"],format:"fmtp:%d %s"},{name:"control",reg:/^control:(.*)/,format:"control:%s"},{name:"rtcp",reg:/^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,names:["port","netType","ipVer","address"],format:function(e){return null!=e.address?"rtcp:%d %s IP%d %s":"rtcp:%d"}},{push:"rtcpFbTrrInt",reg:/^rtcp-fb:(\*|\d*) trr-int (\d*)/,names:["payload","value"],format:"rtcp-fb:%d trr-int %d"},{push:"rtcpFb",reg:/^rtcp-fb:(\*|\d*) ([\w-_]*)(?: ([\w-_]*))?/,names:["payload","type","subtype"],format:function(e){return null!=e.subtype?"rtcp-fb:%s %s %s":"rtcp-fb:%s %s"}},{push:"ext",reg:/^extmap:(\d+)(?:\/(\w+))? (\S*)(?: (\S*))?/,names:["value","direction","uri","config"],format:function(e){return"extmap:%d"+(e.direction?"/%s":"%v")+" %s"+(e.config?" %s":"")}},{push:"crypto",reg:/^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,names:["id","suite","config","sessionConfig"],format:function(e){return null!=e.sessionConfig?"crypto:%d %s %s %s":"crypto:%d %s %s"}},{name:"setup",reg:/^setup:(\w*)/,format:"setup:%s"},{name:"mid",reg:/^mid:([^\s]*)/,format:"mid:%s"},{name:"msid",reg:/^msid:(.*)/,format:"msid:%s"},{name:"ptime",reg:/^ptime:(\d*)/,format:"ptime:%d"},{name:"maxptime",reg:/^maxptime:(\d*)/,format:"maxptime:%d"},{name:"direction",reg:/^(sendrecv|recvonly|sendonly|inactive)/},{name:"icelite",reg:/^(ice-lite)/},{name:"iceUfrag",reg:/^ice-ufrag:(\S*)/,format:"ice-ufrag:%s"},{name:"icePwd",reg:/^ice-pwd:(\S*)/,format:"ice-pwd:%s"},{name:"fingerprint",reg:/^fingerprint:(\S*) (\S*)/,names:["type","hash"],format:"fingerprint:%s %s"},{push:"candidates",reg:/^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: tcptype (\S*))?(?: generation (\d*))?(?: network-id (\d*))?(?: network-cost (\d*))?/,names:["foundation","component","transport","priority","ip","port","type","raddr","rport","tcptype","generation","network-id","network-cost"],format:function(e){var t="candidate:%s %d %s %d %s %d typ %s";return t+=null!=e.raddr?" raddr %s rport %d":"%v%v",t+=null!=e.tcptype?" tcptype %s":"%v",null!=e.generation&&(t+=" generation %d"),t+=null!=e["network-id"]?" network-id %d":"%v",t+=null!=e["network-cost"]?" network-cost %d":"%v"}},{name:"endOfCandidates",reg:/^(end-of-candidates)/},{name:"remoteCandidates",reg:/^remote-candidates:(.*)/,format:"remote-candidates:%s"},{name:"iceOptions",reg:/^ice-options:(\S*)/,format:"ice-options:%s"},{push:"ssrcs",reg:/^ssrc:(\d*) ([\w_-]*)(?::(.*))?/,names:["id","attribute","value"],format:function(e){var t="ssrc:%d";return null!=e.attribute&&(t+=" %s",null!=e.value&&(t+=":%s")),t}},{push:"ssrcGroups",reg:/^ssrc-group:([\x21\x23\x24\x25\x26\x27\x2A\x2B\x2D\x2E\w]*) (.*)/,names:["semantics","ssrcs"],format:"ssrc-group:%s %s"},{name:"msidSemantic",reg:/^msid-semantic:\s?(\w*) (\S*)/,names:["semantic","token"],format:"msid-semantic: %s %s"},{push:"groups",reg:/^group:(\w*) (.*)/,names:["type","mids"],format:"group:%s %s"},{name:"rtcpMux",reg:/^(rtcp-mux)/},{name:"rtcpRsize",reg:/^(rtcp-rsize)/},{name:"sctpmap",reg:/^sctpmap:([\w_\/]*) (\S*)(?: (\S*))?/,names:["sctpmapNumber","app","maxMessageSize"],format:function(e){return null!=e.maxMessageSize?"sctpmap:%s %s %s":"sctpmap:%s %s"}},{name:"xGoogleFlag",reg:/^x-google-flag:([^\s]*)/,format:"x-google-flag:%s"},{push:"rids",reg:/^rid:([\d\w]+) (\w+)(?: ([\S| ]*))?/,names:["id","direction","params"],format:function(e){return e.params?"rid:%s %s %s":"rid:%s %s"}},{push:"imageattrs",reg:new RegExp("^imageattr:(\\d+|\\*)[\\s\\t]+(send|recv)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*)(?:[\\s\\t]+(recv|send)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*))?"),names:["pt","dir1","attrs1","dir2","attrs2"],format:function(e){return"imageattr:%s %s %s"+(e.dir2?" %s %s":"")}},{name:"simulcast",reg:new RegExp("^simulcast:(send|recv) ([a-zA-Z0-9\\-_~;,]+)(?:\\s?(send|recv) ([a-zA-Z0-9\\-_~;,]+))?$"),names:["dir1","list1","dir2","list2"],format:function(e){return"simulcast:%s %s"+(e.dir2?" %s %s":"")}},{name:"simulcast_03",reg:/^simulcast:[\s\t]+([\S+\s\t]+)$/,names:["value"],format:"simulcast: %s"},{name:"framerate",reg:/^framerate:(\d+(?:$|\.\d+))/,format:"framerate:%s"},{name:"sourceFilter",reg:/^source-filter: *(excl|incl) (\S*) (IP4|IP6|\*) (\S*) (.*)/,names:["filterMode","netType","addressTypes","destAddress","srcList"],format:"source-filter: %s %s %s %s %s"},{push:"invalid",names:["value"]}]};Object.keys(n).forEach(function(e){n[e].forEach(function(e){e.reg||(e.reg=/(.*)/),e.format||(e.format="%s")})})},function(e,t){var n={utf8:{stringToBytes:function(e){return n.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(n.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var t=[],n=0;n<e.length;n++)t.push(255&e.charCodeAt(n));return t},bytesToString:function(e){for(var t=[],n=0;n<e.length;n++)t.push(String.fromCharCode(e[n]));return t.join("")}}};e.exports=n},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var l=n(115),r=n(116),i=n(117);function s(){return a.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function o(e,t){if(s()<t)throw new RangeError("Invalid typed array length");return a.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=a.prototype:(null===e&&(e=new a(t)),e.length=t),e}function a(e,t,n){if(!(a.TYPED_ARRAY_SUPPORT||this instanceof a))return new a(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return d(this,e)}return u(this,e,t,n)}function u(e,t,n,l){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,l){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(l||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===l?new Uint8Array(t):void 0===l?new Uint8Array(t,n):new Uint8Array(t,n,l);a.TYPED_ARRAY_SUPPORT?(e=t).__proto__=a.prototype:e=p(e,t);return e}(e,t,n,l):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!a.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var l=0|h(t,n),r=(e=o(e,l)).write(t,n);r!==l&&(e=e.slice(0,r));return e}(e,t,n):function(e,t){if(a.isBuffer(t)){var n=0|g(t.length);return 0===(e=o(e,n)).length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||function(e){return e!=e}(t.length)?o(e,0):p(e,t);if("Buffer"===t.type&&i(t.data))return p(e,t.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function c(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function d(e,t){if(c(t),e=o(e,t<0?0:0|g(t)),!a.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function p(e,t){var n=t.length<0?0:0|g(t.length);e=o(e,n);for(var l=0;l<n;l+=1)e[l]=255&t[l];return e}function g(e){if(e>=s())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s().toString(16)+" bytes");return 0|e}function h(e,t){if(a.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var l=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return L(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return $(e).length;default:if(l)return L(e).length;t=(""+t).toLowerCase(),l=!0}}function f(e,t,n){var l=e[t];e[t]=e[n],e[n]=l}function m(e,t,n,l,r){if(0===e.length)return-1;if("string"==typeof n?(l=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=r?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(r)return-1;n=e.length-1}else if(n<0){if(!r)return-1;n=0}if("string"==typeof t&&(t=a.from(t,l)),a.isBuffer(t))return 0===t.length?-1:y(e,t,n,l,r);if("number"==typeof t)return t&=255,a.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):y(e,[t],n,l,r);throw new TypeError("val must be string, number or Buffer")}function y(e,t,n,l,r){var i,s=1,o=e.length,a=t.length;if(void 0!==l&&("ucs2"===(l=String(l).toLowerCase())||"ucs-2"===l||"utf16le"===l||"utf-16le"===l)){if(e.length<2||t.length<2)return-1;s=2,o/=2,a/=2,n/=2}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(r){var c=-1;for(i=n;i<o;i++)if(u(e,i)===u(t,-1===c?0:i-c)){if(-1===c&&(c=i),i-c+1===a)return c*s}else-1!==c&&(i-=i-c),c=-1}else for(n+a>o&&(n=o-a),i=n;i>=0;i--){for(var d=!0,p=0;p<a;p++)if(u(e,i+p)!==u(t,p)){d=!1;break}if(d)return i}return-1}function b(e,t,n,l){n=Number(n)||0;var r=e.length-n;l?(l=Number(l))>r&&(l=r):l=r;var i=t.length;if(i%2!=0)throw new TypeError("Invalid hex string");l>i/2&&(l=i/2);for(var s=0;s<l;++s){var o=parseInt(t.substr(2*s,2),16);if(isNaN(o))return s;e[n+s]=o}return s}function v(e,t,n,l){return q(L(t,e.length-n),e,n,l)}function E(e,t,n,l){return q(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,l)}function I(e,t,n,l){return E(e,t,n,l)}function S(e,t,n,l){return q($(t),e,n,l)}function _(e,t,n,l){return q(function(e,t){for(var n,l,r,i=[],s=0;s<e.length&&!((t-=2)<0);++s)n=e.charCodeAt(s),l=n>>8,r=n%256,i.push(r),i.push(l);return i}(t,e.length-n),e,n,l)}function T(e,t,n){return 0===t&&n===e.length?l.fromByteArray(e):l.fromByteArray(e.slice(t,n))}function w(e,t,n){n=Math.min(e.length,n);for(var l=[],r=t;r<n;){var i,s,o,a,u=e[r],c=null,d=u>239?4:u>223?3:u>191?2:1;if(r+d<=n)switch(d){case 1:u<128&&(c=u);break;case 2:128==(192&(i=e[r+1]))&&(a=(31&u)<<6|63&i)>127&&(c=a);break;case 3:i=e[r+1],s=e[r+2],128==(192&i)&&128==(192&s)&&(a=(15&u)<<12|(63&i)<<6|63&s)>2047&&(a<55296||a>57343)&&(c=a);break;case 4:i=e[r+1],s=e[r+2],o=e[r+3],128==(192&i)&&128==(192&s)&&128==(192&o)&&(a=(15&u)<<18|(63&i)<<12|(63&s)<<6|63&o)>65535&&a<1114112&&(c=a)}null===c?(c=65533,d=1):c>65535&&(c-=65536,l.push(c>>>10&1023|55296),c=56320|1023&c),l.push(c),r+=d}return function(e){var t=e.length;if(t<=R)return String.fromCharCode.apply(String,e);var n="",l=0;for(;l<t;)n+=String.fromCharCode.apply(String,e.slice(l,l+=R));return n}(l)}t.Buffer=a,t.SlowBuffer=function(e){+e!=e&&(e=0);return a.alloc(+e)},t.INSPECT_MAX_BYTES=50,a.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=s(),a.poolSize=8192,a._augment=function(e){return e.__proto__=a.prototype,e},a.from=function(e,t,n){return u(null,e,t,n)},a.TYPED_ARRAY_SUPPORT&&(a.prototype.__proto__=Uint8Array.prototype,a.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&a[Symbol.species]===a&&Object.defineProperty(a,Symbol.species,{value:null,configurable:!0})),a.alloc=function(e,t,n){return function(e,t,n,l){return c(t),t<=0?o(e,t):void 0!==n?"string"==typeof l?o(e,t).fill(n,l):o(e,t).fill(n):o(e,t)}(null,e,t,n)},a.allocUnsafe=function(e){return d(null,e)},a.allocUnsafeSlow=function(e){return d(null,e)},a.isBuffer=function(e){return!(null==e||!e._isBuffer)},a.compare=function(e,t){if(!a.isBuffer(e)||!a.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,l=t.length,r=0,i=Math.min(n,l);r<i;++r)if(e[r]!==t[r]){n=e[r],l=t[r];break}return n<l?-1:l<n?1:0},a.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},a.concat=function(e,t){if(!i(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return a.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var l=a.allocUnsafe(t),r=0;for(n=0;n<e.length;++n){var s=e[n];if(!a.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(l,r),r+=s.length}return l},a.byteLength=h,a.prototype._isBuffer=!0,a.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)f(this,t,t+1);return this},a.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)f(this,t,t+3),f(this,t+1,t+2);return this},a.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)f(this,t,t+7),f(this,t+1,t+6),f(this,t+2,t+5),f(this,t+3,t+4);return this},a.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?w(this,0,e):function(e,t,n){var l=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return C(this,t,n);case"utf8":case"utf-8":return w(this,t,n);case"ascii":return A(this,t,n);case"latin1":case"binary":return O(this,t,n);case"base64":return T(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return M(this,t,n);default:if(l)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),l=!0}}.apply(this,arguments)},a.prototype.equals=function(e){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===a.compare(this,e)},a.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},a.prototype.compare=function(e,t,n,l,r){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===l&&(l=0),void 0===r&&(r=this.length),t<0||n>e.length||l<0||r>this.length)throw new RangeError("out of range index");if(l>=r&&t>=n)return 0;if(l>=r)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,l>>>=0,r>>>=0,this===e)return 0;for(var i=r-l,s=n-t,o=Math.min(i,s),u=this.slice(l,r),c=e.slice(t,n),d=0;d<o;++d)if(u[d]!==c[d]){i=u[d],s=c[d];break}return i<s?-1:s<i?1:0},a.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},a.prototype.indexOf=function(e,t,n){return m(this,e,t,n,!0)},a.prototype.lastIndexOf=function(e,t,n){return m(this,e,t,n,!1)},a.prototype.write=function(e,t,n,l){if(void 0===t)l="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)l=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===l&&(l="utf8")):(l=n,n=void 0)}var r=this.length-t;if((void 0===n||n>r)&&(n=r),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");l||(l="utf8");for(var i=!1;;)switch(l){case"hex":return b(this,e,t,n);case"utf8":case"utf-8":return v(this,e,t,n);case"ascii":return E(this,e,t,n);case"latin1":case"binary":return I(this,e,t,n);case"base64":return S(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,e,t,n);default:if(i)throw new TypeError("Unknown encoding: "+l);l=(""+l).toLowerCase(),i=!0}},a.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var R=4096;function A(e,t,n){var l="";n=Math.min(e.length,n);for(var r=t;r<n;++r)l+=String.fromCharCode(127&e[r]);return l}function O(e,t,n){var l="";n=Math.min(e.length,n);for(var r=t;r<n;++r)l+=String.fromCharCode(e[r]);return l}function C(e,t,n){var l=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>l)&&(n=l);for(var r="",i=t;i<n;++i)r+=B(e[i]);return r}function M(e,t,n){for(var l=e.slice(t,n),r="",i=0;i<l.length;i+=2)r+=String.fromCharCode(l[i]+256*l[i+1]);return r}function P(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function j(e,t,n,l,r,i){if(!a.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<i)throw new RangeError('"value" argument is out of bounds');if(n+l>e.length)throw new RangeError("Index out of range")}function D(e,t,n,l){t<0&&(t=65535+t+1);for(var r=0,i=Math.min(e.length-n,2);r<i;++r)e[n+r]=(t&255<<8*(l?r:1-r))>>>8*(l?r:1-r)}function x(e,t,n,l){t<0&&(t=4294967295+t+1);for(var r=0,i=Math.min(e.length-n,4);r<i;++r)e[n+r]=t>>>8*(l?r:3-r)&255}function N(e,t,n,l,r,i){if(n+l>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function U(e,t,n,l,i){return i||N(e,0,n,4),r.write(e,t,n,l,23,4),n+4}function F(e,t,n,l,i){return i||N(e,0,n,8),r.write(e,t,n,l,52,8),n+8}a.prototype.slice=function(e,t){var n,l=this.length;if(e=~~e,t=void 0===t?l:~~t,e<0?(e+=l)<0&&(e=0):e>l&&(e=l),t<0?(t+=l)<0&&(t=0):t>l&&(t=l),t<e&&(t=e),a.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=a.prototype;else{var r=t-e;n=new a(r,void 0);for(var i=0;i<r;++i)n[i]=this[i+e]}return n},a.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var l=this[e],r=1,i=0;++i<t&&(r*=256);)l+=this[e+i]*r;return l},a.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var l=this[e+--t],r=1;t>0&&(r*=256);)l+=this[e+--t]*r;return l},a.prototype.readUInt8=function(e,t){return t||P(e,1,this.length),this[e]},a.prototype.readUInt16LE=function(e,t){return t||P(e,2,this.length),this[e]|this[e+1]<<8},a.prototype.readUInt16BE=function(e,t){return t||P(e,2,this.length),this[e]<<8|this[e+1]},a.prototype.readUInt32LE=function(e,t){return t||P(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},a.prototype.readUInt32BE=function(e,t){return t||P(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},a.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var l=this[e],r=1,i=0;++i<t&&(r*=256);)l+=this[e+i]*r;return l>=(r*=128)&&(l-=Math.pow(2,8*t)),l},a.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||P(e,t,this.length);for(var l=t,r=1,i=this[e+--l];l>0&&(r*=256);)i+=this[e+--l]*r;return i>=(r*=128)&&(i-=Math.pow(2,8*t)),i},a.prototype.readInt8=function(e,t){return t||P(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},a.prototype.readInt16LE=function(e,t){t||P(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},a.prototype.readInt16BE=function(e,t){t||P(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},a.prototype.readInt32LE=function(e,t){return t||P(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},a.prototype.readInt32BE=function(e,t){return t||P(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},a.prototype.readFloatLE=function(e,t){return t||P(e,4,this.length),r.read(this,e,!0,23,4)},a.prototype.readFloatBE=function(e,t){return t||P(e,4,this.length),r.read(this,e,!1,23,4)},a.prototype.readDoubleLE=function(e,t){return t||P(e,8,this.length),r.read(this,e,!0,52,8)},a.prototype.readDoubleBE=function(e,t){return t||P(e,8,this.length),r.read(this,e,!1,52,8)},a.prototype.writeUIntLE=function(e,t,n,l){(e=+e,t|=0,n|=0,l)||j(this,e,t,n,Math.pow(2,8*n)-1,0);var r=1,i=0;for(this[t]=255&e;++i<n&&(r*=256);)this[t+i]=e/r&255;return t+n},a.prototype.writeUIntBE=function(e,t,n,l){(e=+e,t|=0,n|=0,l)||j(this,e,t,n,Math.pow(2,8*n)-1,0);var r=n-1,i=1;for(this[t+r]=255&e;--r>=0&&(i*=256);)this[t+r]=e/i&255;return t+n},a.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||j(this,e,t,1,255,0),a.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},a.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||j(this,e,t,2,65535,0),a.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):D(this,e,t,!0),t+2},a.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||j(this,e,t,2,65535,0),a.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):D(this,e,t,!1),t+2},a.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||j(this,e,t,4,4294967295,0),a.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):x(this,e,t,!0),t+4},a.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||j(this,e,t,4,4294967295,0),a.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):x(this,e,t,!1),t+4},a.prototype.writeIntLE=function(e,t,n,l){if(e=+e,t|=0,!l){var r=Math.pow(2,8*n-1);j(this,e,t,n,r-1,-r)}var i=0,s=1,o=0;for(this[t]=255&e;++i<n&&(s*=256);)e<0&&0===o&&0!==this[t+i-1]&&(o=1),this[t+i]=(e/s>>0)-o&255;return t+n},a.prototype.writeIntBE=function(e,t,n,l){if(e=+e,t|=0,!l){var r=Math.pow(2,8*n-1);j(this,e,t,n,r-1,-r)}var i=n-1,s=1,o=0;for(this[t+i]=255&e;--i>=0&&(s*=256);)e<0&&0===o&&0!==this[t+i+1]&&(o=1),this[t+i]=(e/s>>0)-o&255;return t+n},a.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||j(this,e,t,1,127,-128),a.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},a.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||j(this,e,t,2,32767,-32768),a.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):D(this,e,t,!0),t+2},a.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||j(this,e,t,2,32767,-32768),a.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):D(this,e,t,!1),t+2},a.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||j(this,e,t,4,2147483647,-2147483648),a.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):x(this,e,t,!0),t+4},a.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||j(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),a.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):x(this,e,t,!1),t+4},a.prototype.writeFloatLE=function(e,t,n){return U(this,e,t,!0,n)},a.prototype.writeFloatBE=function(e,t,n){return U(this,e,t,!1,n)},a.prototype.writeDoubleLE=function(e,t,n){return F(this,e,t,!0,n)},a.prototype.writeDoubleBE=function(e,t,n){return F(this,e,t,!1,n)},a.prototype.copy=function(e,t,n,l){if(n||(n=0),l||0===l||(l=this.length),t>=e.length&&(t=e.length),t||(t=0),l>0&&l<n&&(l=n),l===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(l<0)throw new RangeError("sourceEnd out of bounds");l>this.length&&(l=this.length),e.length-t<l-n&&(l=e.length-t+n);var r,i=l-n;if(this===e&&n<t&&t<l)for(r=i-1;r>=0;--r)e[r+t]=this[r+n];else if(i<1e3||!a.TYPED_ARRAY_SUPPORT)for(r=0;r<i;++r)e[r+t]=this[r+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+i),t);return i},a.prototype.fill=function(e,t,n,l){if("string"==typeof e){if("string"==typeof t?(l=t,t=0,n=this.length):"string"==typeof n&&(l=n,n=this.length),1===e.length){var r=e.charCodeAt(0);r<256&&(e=r)}if(void 0!==l&&"string"!=typeof l)throw new TypeError("encoding must be a string");if("string"==typeof l&&!a.isEncoding(l))throw new TypeError("Unknown encoding: "+l)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{var s=a.isBuffer(e)?e:L(new a(e,l).toString()),o=s.length;for(i=0;i<n-t;++i)this[i+t]=s[i%o]}return this};var k=/[^+\/0-9A-Za-z-_]/g;function B(e){return e<16?"0"+e.toString(16):e.toString(16)}function L(e,t){var n;t=t||1/0;for(var l=e.length,r=null,i=[],s=0;s<l;++s){if((n=e.charCodeAt(s))>55295&&n<57344){if(!r){if(n>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(s+1===l){(t-=3)>-1&&i.push(239,191,189);continue}r=n;continue}if(n<56320){(t-=3)>-1&&i.push(239,191,189),r=n;continue}n=65536+(r-55296<<10|n-56320)}else r&&(t-=3)>-1&&i.push(239,191,189);if(r=null,n<128){if((t-=1)<0)break;i.push(n)}else if(n<2048){if((t-=2)<0)break;i.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;i.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return i}function $(e){return l.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(k,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function q(e,t,n,l){for(var r=0;r<l&&!(r+n>=t.length||r>=e.length);++r)t[r+n]=e[r];return r}}).call(this,n(33))},function(e,t,n){var l=n(30),r=n(31),i=n(27).Buffer,s=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],o=new Array(64);function a(){this.init(),this._w=o,r.call(this,64,56)}function u(e,t,n){return n^e&(t^n)}function c(e,t,n){return e&t|n&(e|t)}function d(e){return(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10)}function p(e){return(e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7)}function g(e){return(e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3}function h(e){return(e>>>17|e<<15)^(e>>>19|e<<13)^e>>>10}l(a,r),a.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},a.prototype._update=function(e){for(var t=this._w,n=0|this._a,l=0|this._b,r=0|this._c,i=0|this._d,o=0|this._e,a=0|this._f,f=0|this._g,m=0|this._h,y=0;y<16;++y)t[y]=e.readInt32BE(4*y);for(;y<64;++y)t[y]=h(t[y-2])+t[y-7]+g(t[y-15])+t[y-16]|0;for(var b=0;b<64;++b){var v=m+p(o)+u(o,a,f)+s[b]+t[b]|0,E=d(n)+c(n,l,r)|0;m=f,f=a,a=o,o=i+v|0,i=r,r=l,l=n,n=v+E|0}this._a=n+this._a|0,this._b=l+this._b|0,this._c=r+this._c|0,this._d=i+this._d|0,this._e=o+this._e|0,this._f=a+this._f|0,this._g=f+this._g|0,this._h=m+this._h|0},a.prototype._hash=function(){var e=i.allocUnsafe(32);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e.writeInt32BE(this._h,28),e},e.exports=a},function(e,t,n){var l=n(30),r=n(31),i=n(27).Buffer,s=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],o=new Array(160);function a(){this.init(),this._w=o,r.call(this,128,112)}function u(e,t,n){return n^e&(t^n)}function c(e,t,n){return e&t|n&(e|t)}function d(e,t){return(e>>>28|t<<4)^(t>>>2|e<<30)^(t>>>7|e<<25)}function p(e,t){return(e>>>14|t<<18)^(e>>>18|t<<14)^(t>>>9|e<<23)}function g(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^e>>>7}function h(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^(e>>>7|t<<25)}function f(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^e>>>6}function m(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^(e>>>6|t<<26)}function y(e,t){return e>>>0<t>>>0?1:0}l(a,r),a.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},a.prototype._update=function(e){for(var t=this._w,n=0|this._ah,l=0|this._bh,r=0|this._ch,i=0|this._dh,o=0|this._eh,a=0|this._fh,b=0|this._gh,v=0|this._hh,E=0|this._al,I=0|this._bl,S=0|this._cl,_=0|this._dl,T=0|this._el,w=0|this._fl,R=0|this._gl,A=0|this._hl,O=0;O<32;O+=2)t[O]=e.readInt32BE(4*O),t[O+1]=e.readInt32BE(4*O+4);for(;O<160;O+=2){var C=t[O-30],M=t[O-30+1],P=g(C,M),j=h(M,C),D=f(C=t[O-4],M=t[O-4+1]),x=m(M,C),N=t[O-14],U=t[O-14+1],F=t[O-32],k=t[O-32+1],B=j+U|0,L=P+N+y(B,j)|0;L=(L=L+D+y(B=B+x|0,x)|0)+F+y(B=B+k|0,k)|0,t[O]=L,t[O+1]=B}for(var $=0;$<160;$+=2){L=t[$],B=t[$+1];var q=c(n,l,r),H=c(E,I,S),W=d(n,E),X=d(E,n),G=p(o,T),V=p(T,o),K=s[$],z=s[$+1],Y=u(o,a,b),J=u(T,w,R),Z=A+V|0,Q=v+G+y(Z,A)|0;Q=(Q=(Q=Q+Y+y(Z=Z+J|0,J)|0)+K+y(Z=Z+z|0,z)|0)+L+y(Z=Z+B|0,B)|0;var ee=X+H|0,te=W+q+y(ee,X)|0;v=b,A=R,b=a,R=w,a=o,w=T,o=i+Q+y(T=_+Z|0,_)|0,i=r,_=S,r=l,S=I,l=n,I=E,n=Q+te+y(E=Z+ee|0,Z)|0}this._al=this._al+E|0,this._bl=this._bl+I|0,this._cl=this._cl+S|0,this._dl=this._dl+_|0,this._el=this._el+T|0,this._fl=this._fl+w|0,this._gl=this._gl+R|0,this._hl=this._hl+A|0,this._ah=this._ah+n+y(this._al,E)|0,this._bh=this._bh+l+y(this._bl,I)|0,this._ch=this._ch+r+y(this._cl,S)|0,this._dh=this._dh+i+y(this._dl,_)|0,this._eh=this._eh+o+y(this._el,T)|0,this._fh=this._fh+a+y(this._fl,w)|0,this._gh=this._gh+b+y(this._gl,R)|0,this._hh=this._hh+v+y(this._hl,A)|0},a.prototype._hash=function(){var e=i.allocUnsafe(64);function t(t,n,l){e.writeInt32BE(t,l),e.writeInt32BE(n,l+4)}return t(this._ah,this._al,0),t(this._bh,this._bl,8),t(this._ch,this._cl,16),t(this._dh,this._dl,24),t(this._eh,this._el,32),t(this._fh,this._fl,40),t(this._gh,this._gl,48),t(this._hh,this._hl,56),e},e.exports=a},function(e,t){var n={InvalidArgumentError:function(){var e=function(e,t,n){this.name="ARGUMENT_ERROR",this.parameter=e,this.value=t,this.message=n||(this.value?"Invalid value "+JSON.stringify(this.value)+' for parameter "'+this.parameter+'"':"Missing parameter: "+this.parameter)};return e.prototype=new Error,e}(),InvalidStateError:function(){var e=function(e){this.name="STATE_ERROR",this.status=e,this.message="Invalid status: "+e};return e.prototype=new Error,e}(),TimeoutError:function(){var e=function(e){this.name="TIMEOUT_ERROR",this.message=e};return e.prototype=new Error,e}(),NotSupportedError:function(){var e=function(e){this.name="UNSUPPORTED",this.message=e};return e.prototype=new Error,e}(),PermissionDeniedError:function(){var e=function(e){this.name="NO PERMISSION",this.message=e};return e.prototype=new Error,e}()};e.exports=n},function(e,t){e.exports={SUPPORT_HEADER_UPIN:"upin",SUPPORT_HEADER_MPOP:"mpop",SUPPORT_HEADERS:["upin","mpop"],CONTACT_FEATURE_MEDIA:["+app.voice","+app.xpvideo"],CONTACT_FEATURES:["+app.im.1","+app.voice","+app.xpvideo","+sip.ice"],SUPPORTED_URI_SCHEMES:"^(sips?|mbx|svc|pin)$",SIP_SERVER_APPENDIX:"/BSIP",EXTRA_CONTACT_FEATURES:[],VERSION:"0.0.0.0",USER_AGENT:function(e,t){return"SDK "+e+" "+t},CLIENT_NAME_PREFIX:"WEBSDK_",REG_REQ_MAX_LENGTH:128,MAX_RETRY_INTERVAL:600,MAX_ICE_GATHERING_DURATION:2e4,DEFAULT_REGISTRATION_EXPIRY:43200,DEFAULT_KEEPALIVE_INTERVAL:60,DEFAULT_SSL_CIPHERS:"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-DSS-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256",SipStatusCode:{TRYING:100,RINGING:180,CALL_BEING_FORWARDED:181,QUEUED:182,PROGRESS:183,OK:200,ACCEPTED:202,MULTIPLE_CHOICES:300,MOVED_PERMANENTLY:301,MOVED_TEMPORARILY:302,USE_PROXY:305,ALTERNATIVE_SERVICE:380,BAD_REQUEST:400,UNAUTHORIZED:401,PAYMENT_REQUIRED:402,FORBIDDEN:403,NOT_FOUND:404,METHOD_NOT_ALLOWED:405,NOT_ACCEPTABLE:406,PROXY_AUTHENTICATION_REQUIRED:407,REQUEST_TIMEOUT:408,GONE:410,REQUEST_ENTITY_TOO_LARGE:413,REQUEST_URI_TOO_LONG:414,UNSUPPORTED_MEDIA_TYPE:415,UNSUPPORTED_URI_SCHEME:416,BAD_EXTENSION:420,EXTENSION_REQUIRED:421,SESSION_TIMER_TOO_SMALL:422,INTERVAL_TOO_BRIEF:423,TEMPORARILY_UNAVAILABLE:480,CALL_TSX_DOES_NOT_EXIST:481,LOOP_DETECTED:482,TOO_MANY_HOPS:483,ADDRESS_INCOMPLETE:484,PJSIP_AC_AMBIGUOUS:485,BUSY_HERE:486,REQUEST_TERMINATED:487,NOT_ACCEPTABLE_HERE:488,BAD_EVENT:489,REQUEST_UPDATED:490,REQUEST_PENDING:491,UNDECIPHERABLE:493,INTERNAL_SERVER_ERROR:500,NOT_IMPLEMENTED:501,BAD_GATEWAY:502,SERVICE_UNAVAILABLE:503,SERVER_TIMEOUT:504,VERSION_NOT_SUPPORTED:505,MESSAGE_TOO_LARGE:513,PRECONDITION_FAILURE:580,BUSY_EVERYWHERE:600,DECLINE:603,DOES_NOT_EXIST_ANYWHERE:604,NOT_ACCEPTABLE_ANYWHERE:606}}},function(e,t,n){e.exports=function(e,t){var l=n(12).SIP,r=n(12).CallEndCause,i=n(12).SipStatusCode;if(this.statusCode=e&&e.status_code?e.status_code:0,this.cause=void 0!==t?t:function(e){if(!e||!e.headers)return r.CALL_SUCCESS;var t,n=r.CALL_SUCCESS,s=e.headers.Reason&&e.headers.Reason.length?e.headers.Reason[0].raw:e.extraHeaders?e.extraHeaders.filter(function(e){return e.toLowerCase().indexOf(l.HEADERS.REASON.toLowerCase()+":")>-1})[0]:void 0;if(s){var o={cause:function(e){n=parseInt(e,10)},text:function(e){switch('"'===e[0]&&(e=e.substr(1,e.length-2)),e.toLowerCase()){case l.FAILURES.MPOP_CALL_REJECTED.toLowerCase():t=r.CALL_REJECTED_ELSEWHERE;break;case l.FAILURES.MPOP_CALL_ACCEPTED.toLowerCase():t=r.CALL_ACCEPTED_ELSEWHERE}}};s.match(/(".*?"|[^";]+)+/g).forEach(function(e){var t=e.split("=");t.length>1&&void 0!==o[t[0].trim()]&&o[t[0].trim()](t[1])})}if(e.status_code===i.NOT_ACCEPTABLE_ANYWHERE){var a=e.headers.Warning&&e.headers.Warning.length?e.headers.Warning[0].raw:e.extraHeaders?e.extraHeaders.filter(function(e){return e.toLowerCase().indexOf(l.HEADERS.WARNING.toLowerCase()+":")>-1})[0]:void 0;a&&(-1!==a.search(l.FAILURES.SRTP_UNSUPPORTED)&&(n=r.CALL_SECURE_CALL_UNSUPPORTED),-1!==a.search(l.FAILURES.SRTP_KEY_TIMEOUT)&&(n=r.CALL_SECURE_CALL_KEY_TIMEOUT),-1!==a.search(l.FAILURES.SRTP_KEY_ERROR)&&(n=r.CALL_SECURE_CALL_KEY_ERROR))}return t||n}(e),this.cause===r.CALL_SUCCESS)if(e&&"CANCEL"===e.method)this.cause=r.CALL_CANCELLED_UNKNOWN;else{if(this.statusCode>=400)switch(this.statusCode){case i.DECLINE:this.cause=r.CALL_END_USER;break;case i.BUSY_HERE:this.cause=r.CALL_END_BUSY;break;default:this.cause=r.CALL_END_PEER}}}},function(e,t,n){e.exports=function(e,t){var l=0,r=n(12).SIP,i=n(12).Limits,s=n(40)(e,t),o=n(39)(e,t),a=(n(12).CallEndReason,n(12).CallEndCause),u=n(12).SipStatusCode,c=n(12).Timeouts;function d(e){e.timeBusy=void 0,e.emit("recoveryCompleted",e)}function p(e,n){if(n&&n!==e.activeCall){var l=e.activeCall,r=l.callOptions.video;e.activeCall=n,e.duration+=l.getDuration(),g(e,n);var i=[];e.outgoingRecoveryCall&&e.outgoingRecoveryCall!==n&&i.push(s.endCall(e.outgoingRecoveryCall,0,a.CALL_CANCELLED_UNKNOWN)),e.outgoingRecoveryCall=null,e.incomingRecoveryCall&&e.incomingRecoveryCall!==n&&i.push(s.endCall(e.incomingRecoveryCall,u.BUSY_HERE,a.CALL_CANCELLED_UNKNOWN)),e.incomingRecoveryCall=null,i.push(s.endCall(l,u.MOVED_PERMANENTLY,a.CALL_RECOVERY_CALL_TRANSFER)),t.SIP.Utils.Promise.all(i).then(function(){o()}).catch(function(e){o()})}function o(){n.mute(e.muted);var t=!0;function l(t){t&&e.activeCall.sipContext.render({remote:e.activeCall.callOptions.remoteRender,local:e.activeCall.callOptions.localRender})}n.pendingRecoveryVideoEnable&&(n.pendingRecoveryVideoEnable=!1,r&&(t=!1,n.video(!0).then(function(){l(!0)}))),n.callOptions.recovery=void 0,l(t),d(e)}}function g(e,t){function n(n,l){return function(r,i){r===e.activeCall&&(l?l(t,i):i?e.emit(n,e,i):e.emit(n,e))}}e.onRecoveryMediaConnected&&(t.removeListener("mediaConnected",e.onRecoveryMediaConnected),t.removeListener("connected",e.onRecoveryMediaConnected)),e.onRecoveryDisconnected&&t.removeListener("disconnected",e.onRecoveryDisconnected),t.on("ringing",n("ringing")),t.on("connecting",n("connecting")),t.on("connected",n("connected")),t.on("disconnected",n("disconnected",function(t,n){n.cause===a.CALL_RECOVERY_CALL_TRANSFER?p(e,e.incomingRecoveryCall||e.outgoingRecoveryCall):(e.recoverySuspended=!0,e.incomingRecoveryCall&&(s.endCall(e.incomingRecoveryCall,u.DECLINE,a.CALL_CANCELLED_UNKNOWN),e.incomingRecoveryCall=null),e.outgoingRecoveryCall&&(s.endCall(e.outgoingRecoveryCall,0,a.CALL_CANCELLED_UNKNOWN),e.outgoingRecoveryCall=null),e.emit("disconnected",e,n))})),t.on("mediaConnected",n("mediaConnected")),t.on("mediaDisconnected",n("mediaDisconnected",function(t){e.makeRecoveryCall(),e.emit("mediaDisconnected",e)})),t.on("localMediaFailed",n("localMediaFailed")),t.on("remoteMediaChanged",n("remoteMediaChanged")),t.on("qualityChanged",n("qualityChanged")),t.on("recoveryRequired",function(){e.makeRecoveryCall()})}function h(e,t){e.onRecoveryMediaConnected||(e.onRecoveryMediaConnected=function(e){void 0!==e.timeConnected&&void 0!==e.timeIceCompleted&&p(this,e)}.bind(e)),t.on("mediaConnected",e.onRecoveryMediaConnected),t.on("connected",e.onRecoveryMediaConnected),e.emit("recoveryStarted",e),e.onRecoveryDisconnected||(e.onRecoveryDisconnected=function(e,t){var n=this;if(e===this.outgoingRecoveryCall)switch(this.outgoingRecoveryCall=null,t.statusCode){case u.TEMPORARILY_UNAVAILABLE:case u.BUSY_HERE:void 0===this.timeBusy?(this.timeBusy=Date.now(),this.makeRecoveryCall()):this.timeBusy+c.SESSION_BUSY_WAIT>Date.now()?this.makeRecoveryCall():l(t.statusCode);break;case u.DECLINE:case u.REQUEST_TERMINATED:case u.NOT_FOUND:case u.FORBIDDEN:l(t.statusCode)}else this.incomingRecoveryCall=null;function l(e){d(n),e===u.DECLINE&&(n.emit("mediaDisconnected",n.activeCall),s.endCall(n.activeCall,0,n.vvoip.transport.isConnected()?a.CALL_FAILURE_NOMEDIA:a.CALL_END_NETWORKUNAVAILABLE)),n.recoverySuspended=!0}}.bind(e)),t.on("disconnected",e.onRecoveryDisconnected)}var f=function(e,t){this.outgoingRecoveryCall=null,this.incomingRecoveryCall=null,this.activeCall=e,this.vvoip=t,this.duration=0,this.muted=!1,this.recoverySuspended=!1,this.callParty=e.callParty,this.id=l++,this.setMaxListeners&&this.setMaxListeners(i.MAX_EVENT_LISTENERS),g(this,e)};return(f.prototype=Object.create(t.SIP.EventEmitter.prototype)).makeRecoveryCall=function(){var e=this.activeCall.remoteFeatures&&-1!==this.activeCall.remoteFeatures.indexOf(r.FEATURES.CALL_RECOVERY);if(this.outgoingRecoveryCall||this.incomingRecoveryCall||this.recoverySuspended||!e)return!1;var n=this.activeCall.callOptions.clone();n.recovery=!0;var l=n.toMediaOptions();l.extraHeaders=s.getExtraHeaders(this.vvoip.transport,{sessionId:this.activeCall.sessionId,callId:this.activeCall.callId,features:this.activeCall.features}),l.params=s.getParams(this.vvoip.transport);var i=this.vvoip.transport.sipUA.invite(this.activeCall.callParty.pin,l),a=new o.Callee(this.activeCall.callParty.regId);return a.pin=this.activeCall.callParty.pin,this.outgoingRecoveryCall=new o(a,i,this.vvoip,n),h(this,this.outgoingRecoveryCall),t.Promise.resolve()},f.prototype.isMyRecoveryCall=function(e){if(!e||!e.prevCallId||!this.activeCall||this.activeCall.callId!==e.prevCallId||this.activeCall.callParty.pin!==e.callParty.pin)return!1;this.incomingRecoveryCall&&s.endCall(this.incomingRecoveryCall,u.NOT_ACCEPTABLE_HERE,a.CALL_CANCELLED_UNKNOWN),this.outgoingRecoveryCall&&(this.outgoingRecoveryCall.callId<e.callId?(s.endCall(e,u.NOT_ACCEPTABLE_HERE,a.CALL_CANCELLED_UNKNOWN),e=null):(s.endCall(this.outgoingRecoveryCall,0,a.CALL_CANCELLED_UNKNOWN),this.outgoingRecoveryCall=null)),this.incomingRecoveryCall=e;var t=this.activeCall.callOptions.clone();return t.recovery=!0,h(this,e),!e.remoteMedia().video&&this.activeCall.localMedia().video&&(e.pendingRecoveryVideoEnable=!0,t.video=!1),e.accept(t).then(function(){return e.answer(t)}).catch(function(t){e.reject(a.CALL_CANCELLED_UNKNOWN)}),!0},f.prototype.getDuration=function(){return this.duration+this.activeCall.getDuration()},f.prototype.answer=function(e){return this.activeCall.answer(e)},f.prototype.accept=function(){return this.activeCall.accept(new o.Options(!1,null,null))},f.prototype.reject=function(e){return this.activeCall.reject(e)},f.prototype.end=function(e){return this.activeCall.end(e)},f.prototype.mute=function(e){return this.muted=e,this.activeCall.mute(e)},f.prototype.video=function(e){return this.activeCall.video(e)},f.prototype.outgoing=function(){return this.activeCall.isOutgoing()},f.prototype.remoteMedia=function(){return this.activeCall.remoteMedia()},f.prototype.localMedia=function(){var e=this.activeCall.localMedia();return(this.activeCall.pendingVideoEnable||this.activeCall.pendingRecoveryVideoEnable)&&(e.video=!0),e},f.prototype.state=function(){return this.activeCall.state},f}},function(e,t,n){e.exports=function(e,t){var l=n(126)(),r=n(12).CallState,i=(n(57),n(39)(e,t)),s=n(12).SIP,o=n(12).DataConnectionLimits,a=n(12).SipStatusCode,u=n(12).CallEndCause,c=n(40)(e,t),d=0,p={STREAM:0,DATA_CHUNK:1,DATA_FULL:2},g={RAW:0,STRING:1,FILE:2,STREAM:3},h=function(){this.video=!1,this.audio=!1,this.data=!0,this.extraFeatures=[s.FEATURES.DATA_CONNECTION],this.disabledFeatures=[s.FEATURES.CALL_RECOVERY,s.FEATURES.EARLY_ICE],this.disabledHeaders=[s.HEADERS.ACCEPT_CONTACT]};h.prototype=new i.Options;var f=function(e){this.obj={},this.obj.n=e.name||e.n,this.obj.t=[e.type,e.t].filter(function(e){return void 0!==e})[0],this.obj.s=e.size||e.s,this.obj.i=e.id||e.i||t.SIP.Utils.createRandomToken(8)};function m(n,l,r,i){var s,o=n.channel,a=Date.now(),u=l.toData();return n.logger.debug("Start sending: "+l.toString()),new t.Promise(function(t,c){var d,p,g=0;o.bufferedAmountLowThreshold=n.minThreshold,function h(){var m=function(){o.removeEventListener("bufferedamountlow",m),h()};if(o.bufferedAmount>=n.highThreshold)o.addEventListener("bufferedamountlow",m);else if(g<r){var y=Math.min(r-g,n.packetSize-u.length);try{return d&&d.length===u.length+y||((d=new Uint8Array(u.length+y)).set(u),p=d.buffer),i(g,y).then(function(t){d.set(t,u.length);try{o.send(p)}catch(t){n.logger.error("Failed to send",t),c(new e.Exceptions.InvalidStateError("Connection dropped when sending data"))}g+=y,s||(s=new f({id:l.obj.i}),u=s.toData(),d&&d.set(u)),o.bufferedAmount>=n.highThreshold?o.addEventListener("bufferedamountlow",m):h()}).catch(function(t){n.logger.error("Failed loading data to send",t),c(new e.Exceptions.NotSupportedError("Loading data unsupported"))})}catch(e){c(e)}}else{var b=(r/(Date.now()-a)).toFixed(2);n.logger.debug("Done sending: "+l.toString()+" at "+b+" kb/s"),t()}}()})}Object.defineProperty(f.prototype,"name",{enumerable:!0,get:function(){return this.obj.n}}),Object.defineProperty(f.prototype,"type",{enumerable:!0,get:function(){return this.obj.t}}),Object.defineProperty(f.prototype,"size",{enumerable:!0,get:function(){return this.obj.s}}),Object.defineProperty(f.prototype,"id",{enumerable:!0,get:function(){return this.obj.i}}),f.prototype.toData=function(){var e=t.btoa(JSON.stringify(this.obj))+"\n";return t.SIP.Utils.string2Utf8Array(e)},f.prototype.toString=function(){return JSON.stringify({name:this.obj.n||"N/A",type:this.obj.t||"N/A",size:this.obj.s||"N/A",id:this.obj.i||"N/A"})};var y=function(e,t){this.parent=e,this.initialHeaderSent=!1,this.id=t};y.prototype.send=function(n){var l;if("string"==typeof n)l=t.SIP.Utils.string2Utf8Array(n);else{if(!(n instanceof Uint8Array))return t.Promise.reject(new e.Exceptions.InvalidArgumentError("data",n));l=n}return this.parent.conState!==r.CALL_STATE_CONNECTED?t.Promise.reject(new e.Exceptions.InvalidStateError("Connection not ready")):(this.initialHeaderSent?this.header.obj.t&&delete this.header.obj.t:(this.header=new f({type:g.STREAM,id:this.id}),this.initialHeaderSent=!0),m(this.parent,this.header,l.length,function(e,n){var r=l.subarray(e,e+n);return t.Promise.resolve(r)}))};var b=function(t,n){if(this.header=n.header,this.size=0,this.offset=0,this.parent=t,this.timeStart=Date.now(),!n.header.size&&n.header.type!==g.STREAM)throw new e.Exceptions.InvalidArgumentError("data",n);this.parent.emit("dataReceived",this.parent,this),this.parent.on("disconnected",function(){this.done()||this.emit("aborted",this)}.bind(this));var l=this.cfg||{mode:p.DATA_FULL},r=l.chunkSize||n.header.size;r>0?this.data=new Uint8Array(r):l.mode=p.STREAM,this.cfg=l,this.parent.logger.debug("Start receiving data with mode: "+this.cfg.mode+", "+this.header.toString()),this.onDataReceived(n)};b.prototype=Object.create(t.SIP.EventEmitter.prototype),b.Mode=p,b.Header=f,b.DataType=g,b.prototype.configure=function(t){if(this.cfg)throw new e.Exceptions.InvalidStateError("Can only be configured once after initial dataReceived event");switch(t.mode){case p.STREAM:break;case p.DATA_CHUNK:t.chunkSize||(t.chunkSize=o.DEFAULT_CHUNK_MODE_SIZE);case p.DATA_FULL:if(this.header.type===g.STREAM)throw new e.Exceptions.NotSupportedError("STREAM mode is required for streams");t.mode===p.DATA_FULL&&delete t.chunkSize;break;default:throw new e.Exceptions.InvalidArgumentError("cfg.mode",t.mode)}this.cfg=t},b.prototype.onDataReceived=function(t){if(!t.header)throw new e.Exceptions.InvalidArgumentError("data",t);if(t.header.id!==this.header.id)throw new e.Exceptions.InvalidArgumentError("data",t);if(this.data)try{var n=0;do{var l=this.data.length-this.offset,r=Math.min(l,t.payload.length-n);if(this.data.set(t.payload.subarray(n,n+r),this.offset),this.size+=r,this.offset+=r,n+=r,this.offset===this.data.length&&this.size<this.header.size)this.emit("dataChunk",this),this.offset&&this.deplete();else if(this.size===this.header.size){this.data.length>this.offset&&(this.data=new Uint8Array(this.data.subarray(0,this.offset))),this.emit("done",this);var i=(this.size/(Date.now()-this.timeStart)).toFixed(2);this.parent.logger.debug("Done receiving: "+this.header.toString()+", payload size: "+t.payload.length+" at "+i+" kb/s")}else this.data.length&&this.emit("progress",this,(100*this.size/this.header.size).toFixed(0))}while(n<t.payload.length)}catch(n){throw new e.Exceptions.InvalidArgumentError("data.payload",t.payload)}else this.emit("data",this,t.payload)},b.prototype.done=function(){return!(!this.data||this.size!==this.header.size)},b.prototype.dataType=function(){var e=this.header.type;return"string"==typeof e?g.FILE:e},b.prototype.dataSize=function(){var e=this.header.size;return this.dataType()===g.STREAM?-1:e},b.prototype.name=function(){return this.header.name},b.prototype.header=function(){return this.header},b.prototype.deplete=function(){if(!this.data)throw new e.Exceptions.NotSupportedError("deplete not available");var t=this.data.subarray(0,this.offset);return this.offset=0,t},b.prototype.id=function(){return this.header.id};var v=function(n,i,o){var p=this;if(this.session=n,this.media=i,this.logger=new l(i.transport.loggerFactory,"Data",d++),this.receivers={},this.conState=r.CALL_STATE_INITIATED,!this.session)throw new e.Exceptions.InvalidArgumentError("session",n);function g(e){var t=p.channel.readyState;p.logger.debug("on state: "+t),"open"===t?(p.conState=r.CALL_STATE_CONNECTED,p.emit("connected",p)):"closed"===t&&(p.conState=r.CALL_STATE_DISCONNECTED)}function m(n){var l=function(e){for(var n=new Uint8Array(e),l={},r=0;r<n.length;r++)if(10===n[r]){var i=JSON.parse(t.atob(t.SIP.Utils.utf8ArrayToStringWithFallback(n.subarray(0,r))));l.header=new f(i),l.payload=n.subarray(r+1);break}return l}(n.data);if(!l.header)throw new e.Exceptions.NotSupportedError("no header in data msg");if(!l.header.id)throw new e.Exceptions.NotSupportedError("no id in data header");var r=p.receivers[l.header.id];r?r.onDataReceived(l):(r=p.receivers[l.header.id]=new b(p,l)).on("done",function(e){delete p.receivers[e.header.id]})}function y(e){p.channel=e,e.binaryType="arraybuffer",e.onopen=g,e.onclose=g,e.onerror=g,e.onmessage=m}if(this.setPacketSize(o),this.session.activeCall.sipContext.mediaHandler.on("dataChannel",y),this.session.activeCall.sipContext.mediaHandler.dataChannel&&y(this.session.activeCall.sipContext.mediaHandler.dataChannel),this.session.on("disconnected",function(e,t){p.conState=r.CALL_STATE_DISCONNECTED,p.channel&&"closed"!==p.channel.readyState&&p.channel.close(),p.emit("disconnected",p,t)}),this.session.outgoing()){var v=function(e){p.session.activeCall.remoteFeatures.length&&p.session.activeCall.remoteFeatures.indexOf(s.FEATURES.DATA_CONNECTION)<0&&c.endCall(p.session.activeCall,a.UNSUPPORTED_MEDIA_TYPE,e)};this.session.on("ringing",v.bind(null,u.CALL_CANCELLED_UNKNOWN)),this.session.on("connected",v.bind(null,u.CALL_FAILURE_MEDIASETUP))}else{var E=new h;this.session.activeCall.accept(E)}};return v.prototype=Object.create(t.SIP.EventEmitter.prototype),Object.defineProperty(v.prototype,"callParty",{enumerable:!0,get:function(){return this.session.callParty}}),Object.defineProperty(v.prototype,"id",{enumerable:!0,get:function(){return this.session.id}}),v.prototype.accept=function(){return this.session.answer(new h)},v.prototype.sendFile=function(n,l,i){if(!t.FileReader&&!t.Fs)return t.Promise.reject(new e.Exceptions.NotSupportedError("FileReader"));if(!n)return t.Promise.reject(new e.Exceptions.InvalidArgumentError("file",n));if(t.FileReader){if(!n.name)return t.Promise.reject(new e.Exceptions.InvalidArgumentError("file.name",n.name));if(!n.size)return t.Promise.reject(new e.Exceptions.InvalidArgumentError("file.size",n.size))}else if("string"!=typeof n)return t.Promise.reject(new e.Exceptions.InvalidArgumentError("file",n));if(this.conState!==r.CALL_STATE_CONNECTED)return t.Promise.reject(new e.Exceptions.InvalidStateError("Connection not ready"));var s;t.Fs?(s=t.Fs.statSync(n)).name=t.path.basename(n):s=n;var a={type:s.type||"application/octet-stream",name:s.name,size:s.size,id:i};if(t.Fs){var u=t.Fs.openSync(n,"r");if(u<0)return t.Promise.reject(new e.Exceptions.InvalidArgumentError("file",n));var c=t.Buffer.alloc(Math.min(o.MAX_FILE_BUFFER,s.size));return m(this,new f(a),s.size,function(n,r){return new t.Promise(function(i,o){t.Fs.read(u,c,0,r,n,function(t,a,u){t&&o(t),a!==r&&o(new e.Exceptions.InvalidStateError("Failed to read request "+r+" bytes of data")),l&&l((100*n/s.size).toFixed(0)),i(new Uint8Array(u.buffer).subarray(0,r))})})}).then(function(){t.Fs.close(u)}).catch(function(e){throw t.Fs.close(u),e})}var d=new Uint8Array(Math.min(o.MAX_FILE_BUFFER,s.size)),p=0,g=0;return m(this,new f(a),s.size,function(e,n){return new t.Promise(function(r,i){var o=new t.FileReader;if(o.onload=function(t){var l=new Uint8Array(t.target.result);d.set(l,g),g+=l.length;var i=e-p;r(d.subarray(i,i+n))},o.onabort=function(){i()},o.onerror=function(){i()},e+n<=p+g){var a=e-p;r(d.subarray(a,a+n))}else{var u=Math.min(s.size-p,d.length),c=p+g-e;c>0&&(d.set(d.subarray(e-p),0),u-=c,g=c);var h=s.slice(e+c,e+c+u);l&&l((100*e/s.size).toFixed(0)),p=e,o.readAsArrayBuffer(h)}})})},v.prototype.send=function(n,l,i){var s,o;if("string"==typeof n)s=t.SIP.Utils.string2Utf8Array(n),o=new f({type:g.STRING,size:s.length,id:i});else{if(!(n instanceof Uint8Array))return t.Promise.reject(new e.Exceptions.InvalidArgumentError("data",n));o=new f({type:g.RAW,size:(s=n).length,id:i})}return this.conState!==r.CALL_STATE_CONNECTED?t.Promise.reject(new e.Exceptions.InvalidStateError("Connection not ready")):m(this,o,s.length,function(e,r){var i=s.subarray(e,e+r);return l&&l((100*e/n.length).toFixed(0)),t.Promise.resolve(i)})},v.prototype.createSender=function(e){return new y(this,e)},v.prototype.reject=function(e){return this.channel&&this.channel.close(),this.session.reject(e)},v.prototype.end=function(e){return this.channel&&this.channel.close(),this.session.end(e)},v.prototype.outgoing=function(){return this.session.outgoing()},v.prototype.state=function(){return this.conState},v.prototype.metaData=function(){return this.session.activeCall.metaData?JSON.parse(t.atob(this.session.activeCall.metaData)):void 0},v.prototype.setPacketSize=function(t){if(this.packetSize=t||o.WEBRTC_CHUNK_SIZE,this.packetSize<=0)throw new e.Exceptions.InvalidArgumentError("packetSize",t);if(this.packetSize>o.WEBRTC_HIGH_THRESHOLD)throw new e.Exceptions.InvalidArgumentError("packetSize too big",t);this.minThreshold=Math.max(this.packetSize,o.WEBRTC_LOW_THRESHOLD),this.highThreshold=Math.max(this.packetSize,o.WEBRTC_HIGH_THRESHOLD)},v.DataType=g,v.DataReceiver=b,v.DataSender=y,v.Options=h,v}},function(e,t,n){"use strict";n.r(t);var l=n(1);function r(e){const t=function(e){var t=e.length,n=0;if(0===t)return 0;if(t<2)throw new l.InvalidEncodingError("Invalid encoding");var r=3&t;if(0===r)for(var i=t,s=t-2;i>s&&"="===e[i-1];--i,++n);else{if(3==(n=4-r))throw new l.InvalidEncodingError("Invalid encoding");t+=n}return t/4*3-n}(e);let n;try{n=atob(e)}catch(e){throw new l.InvalidEncodingError(e.message)}const r=new Uint8Array(n.length);for(let e=0;e<n.length;e++)r[e]=n.charCodeAt(e);if(r.length!==t)throw new l.InvalidEncodingError("Invalid encoding");return r}n.d(t,"base64DecodeUint8Array",function(){return r})},function(e,t,n){"use strict";const l=n(62).default,r=n(43).default,i=n(68).default,s=n(69).default,o=n(132),a=n(1),u=n(32).default,c=n(9),d=(n(18),n(49)),p=n(4),g=n(133),h=n(26),f=n(2).default,m=n(3),y=n(14),b=n(0).default,v=(n(48),n(47)),E=n(6),I=n(23),S=n(25),_="BBMEnterprise";function T(e){if(S.apply(this),"object"!=typeof e)throw new TypeError("configuration must be an object");if("STR"!==e.environment&&"Sandbox"!==e.environment&&"Production"!==e.environment)throw new ReferenceError("environment must be one of 'Sandbox' or 'Production'");if("string"!=typeof e.domain)throw new TypeError("domain must be a string");if("string"!=typeof e.userId)throw new TypeError("userId must be a string containing the user identity, as known to the authentication server");if("string"!=typeof e.description)throw new TypeError("description must be a string");if("function"!=typeof e.getToken)throw new TypeError("getToken must be a function which returns a Promise of an authentication token");let t=!1;if(void 0===e.getKeyProvider)t=!0;else if("function"!=typeof e.getKeyProvider)throw new TypeError("getKeyProvider must be a function which returns a Promise of a key provider");if(void 0!==e.filter&&!Array.isArray(e.filter))throw new TypeError("filter must be an array of mailbox identifiers");switch(e.logLevel){case 0:b.logThreshold=b.ERROR;break;case 1:b.logThreshold=b.WARNING;break;case 3:b.logThreshold=b.DEBUG1;break;default:b.logThreshold=b.INFO}if(b.debug(b.WARNING,"%s THIS IS A DEV BUILD OF THE SDK %s","#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*","*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#"),e.nickname&&"string"!=typeof e.nickname)throw new TypeError("nickname must be a string or undefined");if(e.messageStorageFactory&&"function"!=typeof e.messageStorageFactory)throw new TypeError("messageStorageFactory must be a function");const n=T.validateBrowser({kms:t?{argonWasmUrl:e.kmsArgonWasmUrl}:void 0}),r={filter:e.filter?new Set(e.filter):void 0,kmsMode:t,kmsKeys:void 0,endpointId:function(){let e="";const t=E.getRandomValues(new Uint8Array(64));for(var n=0;n<64;n++)e+="ABCDEF0123456789".charAt(15&t[n]);return e}(),requestManager:new s,setupState:(()=>{let e=T.SetupState.NotRequested,t=void 0;return Object.defineProperty(this,"setupState",{enumerable:!0,get:()=>e}),{get:()=>e,set:n=>{if(e!==n){switch(f(T.SetupState.hasOwnProperty(n)),n){case T.SetupState.NotRequested:t=void 0;break;case T.SetupState.Success:f(e===T.SetupState.Ongoing),t=!0;break;default:f(e!==T.SetupState.NotRequested||n===T.SetupState.Ongoing),f(e!==T.SetupState.Ongoing||n===T.SetupState.SyncRequired||n===T.SetupState.Success),f(e!==T.SetupState.SyncRequired||n===T.SetupState.SyncStarted),f(e!==T.SetupState.SyncStarted||n===T.SetupState.SyncRequired||n===T.SetupState.Ongoing),t=!1}e=n,v("setupState",new c.SetupState(e))}},isSetup:()=>t}})(),syncPasscodeState:(()=>{let e=T.SyncPasscodeState.None;return Object.defineProperty(this,"syncPasscodeState",{enumerable:!0,get:()=>e}),{get:()=>e,set:t=>{f(T.SyncPasscodeState.hasOwnProperty(t)),e=t}}})()};Object.defineProperty(this,"messenger",{enumerable:!0,value:new d.default}),Object.freeze(r.endpointId),Object.defineProperty(this,"endpointId",{enumerable:!0,value:r.endpointId});const p={configuration:Object.assign({},e,{description:m.truncate(e.description,2e3),nickname:m.truncate(e.nickname,2e3)}),persistentData:r,version:T.version.replace(/-rc/,"."),caManager:I.pinCertificates(h.SIPTransport.CaManager),BBMEnterprise:T};let g;f(/^\d+\.\d+\.\d+\.\d+$/.test(p.version)),p.discoveryClient=new l(p),this.setupStart=function(){if(!0===r.setupState.isSetup())throw f(r.setupState.get()===T.SetupState.Success),new a.Error("Setup already complete");if(!1===r.setupState.isSetup())throw new a.Error("Setup already in progress");f(void 0===r.setupState.isSetup()),f(r.setupState.get()===T.SetupState.NotRequested),b(b.INFO,"%s: setupStart; kmsMode=%s",_,r.kmsMode),r.setupState.set(T.SetupState.Ongoing),n.then(()=>o.preMessengerSetup(this,p,()=>g=new i,r.kmsMode?o.setupKeyManagerWithKms:o.setupKeyManagerWithKeyProvider)).then(e=>r.kmsMode?Promise.resolve():o.messengerSetup(this,e,()=>{r.setupState.set(T.SetupState.Success),g.transportCallbacks.registrationFailed=(e=>{w(new c.RegistrationChanged({reason:e}))})})).catch(w)};let y=0;this.syncStart=((e,t)=>{if(r.setupState.get()!==T.SetupState.SyncRequired)throw new a.Error("The Spark Communications SDK must have a setupState of SyncRequired to call syncStart");f(r.kmsMode),f(void 0!==r.kmsKeys),r.setupState.set(T.SetupState.SyncStarted);const n=++y;new Promise((l,i)=>{if(t===T.SyncStartAction.New||!r.kmsKeys)return b(b.INFO,"%s: Creating new profile keys",_),void g.keyManager.createProfileKeys(e).then(l,i);b(b.INFO,"%s: Restoring existing profile keys",_),g.keyManager.restoreProfileKeys(r.kmsKeys,e).then(l).catch(()=>{n===y?(r.setupState.set(T.SetupState.SyncRequired),l(!0)):l(!0)})}).then(e=>e||n!==y?(n!==y&&b(b.INFO,"%s: Stopping sync because it is stale",_),Promise.resolve()):(r.kmsKeys=void 0,r.syncPasscodeState.set(T.SyncPasscodeState.None),r.setupState.set(T.SetupState.Ongoing),o.messengerSetup(this,p,()=>{r.setupState.set(T.SetupState.Success),g.transportCallbacks.registrationFailed=(e=>{w(new c.RegistrationChanged({reason:e}))})}))).catch(e=>{if(n!==y)return b(b.INFO,"%s: Stopping sync because it is stale",_),void Promise.resolve();w(e)})}),this.setup=function(){if(r.kmsMode)throw new a.Error("The Spark Communications SDK is configured to use KMS; use the setupStart function instead");if(void 0!==r.setupState.isSetup()){if(r.setupState.isSetup())throw f(r.setupState.get()===T.SetupState.Success),new a.Error("Setup already complete");throw f(r.setupState.get()===T.SetupState.Ongoing),new a.Error("Setup already in progress")}return f(r.setupState.get()===T.SetupState.NotRequested),r.setupState.set(T.SetupState.Ongoing),n.then(()=>o.preMessengerSetup(this,p,()=>g=new i,o.setupKeyManagerWithKeyProvider)).then(()=>o.messengerSetup(this,p,()=>{v("registrationChanged",g.registrationInfo),g.transportCallbacks.registrationFailed=(e=>{v("registrationChanged",new c.RegistrationChanged({regId:g.registrationInfo.regId,pin:g.registrationInfo.pin,registrationToken:g.registrationInfo.registrationToken,reason:e})),this.shutdown()}),r.setupState.set(T.SetupState.Success)})).catch(e=>{b(b.ERROR,"%s: Failed to complete registration; error=%s",_,e);const t=e instanceof c.RegistrationChanged?e:new c.RegistrationChanged(void 0===g||void 0===g.registrationInfo?void 0:Object.assign({},g.registrationInfo,{reason:c.RegistrationChanged.Failure.GeneralFailure}));throw v("registrationChanged",t),b.logErrorForDebugging(e),this.shutdown(),t})},this.retryServerRequests=function(){if(r.requestManager.doNextRequest(),g)for(let e of g.retryServerRequestFunctions)try{e()}catch(e){b(b.ERROR,"%s: Failed to call retry function; error=%s",_,e)}},r.retryServerRequests=this.retryServerRequests,this.getRegistrationInfo=function(){try{return g.registrationInfo}catch(e){throw new a.Error("Cannot retrieve registration information when the SDK is not set up")}},this.isSetup=function(){return!0===r.setupState.isSetup()},this.shutdown=function(){b(b.INFO,"%s: Starting shutdown; version=%s",_,T.version),g&&void 0!==g.transport&&g.transport.shutdown(),delete this.media,g&&g.busClient&&g.busClient.reset(),r.requestManager.reset(),d.shutdown(this.messenger),g=void 0,r.syncPasscodeState.set(T.SyncPasscodeState.None),r.setupState.set(T.SetupState.NotRequested),r.kmsKeys=void 0,y=0,b(b.INFO,"%s: Shutdown complete; version=%s",_,T.version)},this.getIdentitiesFromAppUserId=function(e){if(!this.isSetup())throw new T.Error.Error("Cannot call getIdentitiesFromAppUserId: setup is not complete");try{return g.busClient.resolveAppUserIds([e]).catch(e=>(b(b.ERROR,"%s: Failed to get identity for 1 appUserId; error=%s",_,e),Promise.reject(u(e)))).then(t=>{if(0===t.length)throw new T.Error.NotFoundError(`appUserId '${e}' not found`);return t[0]})}catch(e){throw new TypeError("appUserId must be a string")}},this.getIdentitiesFromAppUserIds=function(e){if(!this.isSetup())throw new T.Error.Error("Cannot call getIdentitiesFromAppUserIds: setup is not complete");return g.busClient.resolveAppUserIds(e).catch(t=>(b(b.ERROR,"%s: Failed to get identities for %d appUserIds; error=%s",_,e.length,t),Promise.reject(u(t))))},this.getIdentitiesFromRegId=function(e){if(!this.isSetup())throw new T.Error.Error("Cannot call getIdentitiesFromRegId: setup is not complete");try{return g.busClient.resolveRegIds([e]).catch(e=>(b(b.ERROR,"%s: Failed to get identity for 1 regId; error=%s",_,e),Promise.reject(u(e)))).then(t=>{if(0===t.length)throw new T.Error.NotFoundError(`regId '${e}' not found`);return t[0]})}catch(e){throw new TypeError("regId must be a string")}},this.getIdentitiesFromRegIds=function(e){if(!this.isSetup())throw new T.Error.Error("Cannot call getIdentitiesFromRegIds: setup is not complete");return g.busClient.resolveRegIds(e).catch(t=>(b(b.ERROR,"%s: Failed to get identities for %d regIds; error=%s",_,e.length,t),Promise.reject(u(t))))},this.syncPasscodeChange=(e=>{if(!this.isSetup())throw new a.Error("Cannot call syncPasscodeChange() until setup is complete");if(!r.kmsMode)throw new a.Error("Cannot call syncPasscodeChange() unless the Spark Communications SDK is configured to use KMS");return g.keyManager.setMgmtKeyPasscode(e)});const v=(e,t)=>{if("setupState"!==e&&r.setupState.get()===T.SetupState.NotRequested)return b(b.NOTICE,"%s: Suppressing %s event; SDK setup has not been requested",_,e),void b.debug(b.DEBUG2,"%s: Suppressing %s: %s",_,e,JSON.stringify(t));b(b.INFO,"%s: Emitting %s event",_,e),b.debug(b.DEBUG2,"%s: Emitting %s: %s",_,e,JSON.stringify(t));try{this.emit(e,t)}catch(t){b(b.ERROR,"%s: Error emitting %s event: %s",_,e,t),b.logErrorForDebugging(t)}},w=e=>{let t=c.SetupError.Value.PermanentServerError;if(e){if(e instanceof c.RegistrationChanged)switch(e.failureReason){case c.RegistrationChanged.Failure.RegistrationRevoked:t=c.SetupError.Value.EndpointDeregistered;break;case c.RegistrationChanged.Failure.Forbidden:case c.RegistrationChanged.Failure.DomainConfigurationMismatch:t=e.failureReason}b(b.ERROR,"%s: Failed to complete setup; setupError=%s error=%s",_,t,e),b.logErrorForDebugging(e)}else b(b.ERROR,"%s: Failed to complete setup; setupError=%s",_,t);v("setupError",new c.SetupError(t)),this.shutdown()};b(b.INFO,"%s: Instance created; version=%s",_,T.version)}T.SetupState={NotRequested:"NotRequested",Ongoing:"Ongoing",Success:"Success",SyncRequired:"SyncRequired",SyncStarted:"SyncStarted"},Object.freeze(T.SetupState),T.SyncStartAction={New:"New",Existing:"Existing"},Object.freeze(T.SyncStartAction),T.SyncPasscodeState={None:"None",New:"New",Existing:"Existing"},Object.freeze(T.SyncPasscodeState),T.prototype=Object.create(S.prototype),T.validateBrowser=function(e){let t=!1;function n(e){b(b.ERROR,"%s: Failed to validate client: error=%s",_,e);const n=new a.BrowserNotSupportedError("Browser missing functionality. Error="+e);if(t)return Promise.reject(n);throw n}try{return new Promise(()=>{}),t=!0,new Map,new Set([1]),Promise.all([p.generateEncryptionKeyPair(),p.generateChatKey(),e&&e.kms?v.argon2kdf(new Uint8Array([0,1,2,3,4,5,6,7,8]),y.encode("test passcode"),y.encode("test data"),e.kms.argonWasmUrl):Promise.resolve()]).then(()=>{},n)}catch(e){return n(e)}},e.exports=T,T.Error=a,T.Event=c,T.KeyProviderInterface=r,T.Media=h.VVoip,T.Messenger=d.default,T.StorageFactory=g.default,T.Utf8=y,T.Util=m,Object.defineProperty(T,"version",{enumerable:!0,value:"1.4.0-rc6"})},function(e,t,n){"use strict";n.r(t);var l=n(1),r=n(4),i=n(2),s=n(0),o=n(28),a=n(19),u=n.n(a),c=n(23),d=n.n(c),p=n(42),g=n.n(p);const h="DiscoveryClient",f=new WeakMap;t.default=class{constructor(e){Object(i.default)("object"==typeof e),Object(i.default)("object"==typeof e.configuration),Object(i.default)("string"==typeof e.configuration.userId),Object(i.default)(["STR","Sandbox","Production"].includes(e.configuration.environment)),Object(i.default)("string"==typeof e.configuration.domain),Object(i.default)("object"==typeof e.persistentData),Object(i.default)("string"==typeof e.persistentData.endpointId),Object(i.default)("object"==typeof e.persistentData.requestManager),Object(i.default)("string"==typeof e.version);const t={discoveryInfo:void 0,discoveryPromise:void 0,setupContext:Object.assign({},e,{discoveryClient:void 0,caManager:void 0})};f.set(this,t),this.getDiscoveryInfo().catch(()=>{})}getDiscoveryInfo(){const e=f.get(this);if(void 0!==e.discoveryInfo)return Promise.resolve(e.discoveryInfo);if(void 0!==e.discoveryPromise)return e.discoveryPromise;try{e.discoveryPromise=Object(r.getIdpUserIdHash)(e.setupContext.configuration.userId).catch(e=>{throw Object(s.default)(s.default.ERROR,"%s: Failed to get userId hash; aborting discovery; error=%s",h,e),new l.PermanentFailure(e.toString())}).then(t=>e.setupContext.persistentData.requestManager.retryableRequest(()=>d()({serverAddress:{STR:"rtcebus.bblabs.rim.net",Sandbox:"discovery.sandbox.bbmenterprise.com",Production:"discovery.shared.bbmenterprise.com"}[e.setupContext.configuration.environment],uri:"/domains/"+e.setupContext.configuration.domain+"/discovery?platform="+u.a+"&osVersion="+g.a.osVersion+"&clientBundle="+e.setupContext.version+"&endpointId="+e.setupContext.persistentData.endpointId+"&userId="+t,method:"GET",responseType:"json"}).catch(e=>{const t="Failed to perform service discovery";if(!e.status)throw new l.TemporaryFailure(`${t}; request timed out`);if(e.status>=500)throw new l.TemporaryFailure(`${t}; status=${e.status}`);throw Object(s.default)(s.default.ERROR,"%s: %s; error=%s",h,t,e.status),new l.PermanentFailure}))).then(t=>{if(200!==t.status)throw Object(s.default)(s.default.ERROR,"%s: Unexpected response during service discovery: %s",h,t.status),new l.PermanentFailure;const n={};for(const e of t.response.services){const t=e.address.indexOf(":");n[e.name]=-1===t?{host:e.address}:{host:e.address.slice(0,t),port:e.address.slice(t+1)}}let r;if(!n.profile&&(r="profile")||!n.mailbox&&(r="mailbox")||!n.sip&&(r="sip")||!n.stun&&(r="stun")||!n["turn-tcp"]&&(r="turn-tcp")||!n["turn-udp"]&&(r="turn-udp"))throw Object(s.default)(s.default.ERROR,"%s: Missing required service in disovery response: %s",h,r),new l.PermanentFailure;return void 0===n.kms&&(Object(s.default)(s.default.DEBUG2,"%s: Using profile service for KMS",h),n.kms=n.profile),Object(s.default)(s.default.INFO,"%s: Service discovery success",h),e.discoveryInfo=Object(o.a)(n),n})}catch(e){return Object(s.default)(s.default.ERROR,"%s: Failed to hash userId; error=%s",h,e),Promise.reject(new l.PermanentFailure(e.toString()))}return e.discoveryPromise.then(t=>(delete e.discoveryPromise,t)).catch(t=>{throw delete e.discoveryPromise,t})}}},function(e,t,n){!function(t){"use strict";function l(e,t,n){return t<=e&&e<=n}void 0!==e&&e.exports&&!t["encoding-indexes"]&&(t["encoding-indexes"]=n(64)["encoding-indexes"]);var r=Math.floor;function i(e){if(void 0===e)return{};if(e===Object(e))return e;throw TypeError("Could not convert argument to dictionary")}function s(e){return 0<=e&&e<=127}var o=s,a=-1;function u(e){this.tokens=[].slice.call(e),this.tokens.reverse()}u.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():a},prepend:function(e){if(Array.isArray(e))for(var t=e;t.length;)this.tokens.push(t.pop());else this.tokens.push(e)},push:function(e){if(Array.isArray(e))for(var t=e;t.length;)this.tokens.unshift(t.shift());else this.tokens.unshift(e)}};var c=-1;function d(e,t){if(e)throw TypeError("Decoder error");return t||65533}function p(e){throw TypeError("The code point "+e+" could not be encoded.")}function g(e){return e=String(e).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(f,e)?f[e]:null}var h=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],f={};h.forEach(function(e){e.encodings.forEach(function(e){e.labels.forEach(function(t){f[t]=e})})});var m,y,b={},v={};function E(e,t){return t&&t[e]||null}function I(e,t){var n=t.indexOf(e);return-1===n?null:n}function S(e){if(!("encoding-indexes"in t))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return t["encoding-indexes"][e]}var _="utf-8";function T(e,t){if(!(this instanceof T))throw TypeError("Called as a function. Did you forget 'new'?");e=void 0!==e?String(e):_,t=i(t),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var n=g(e);if(null===n||"replacement"===n.name)throw RangeError("Unknown encoding: "+e);if(!v[n.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");return this._encoding=n,Boolean(t.fatal)&&(this._error_mode="fatal"),Boolean(t.ignoreBOM)&&(this._ignoreBOM=!0),Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase(),this.fatal="fatal"===this._error_mode,this.ignoreBOM=this._ignoreBOM),this}function w(e,n){if(!(this instanceof w))throw TypeError("Called as a function. Did you forget 'new'?");n=i(n),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=Boolean(n.fatal)?"fatal":"replacement";if(Boolean(n.NONSTANDARD_allowLegacyEncoding)){var l=g(e=void 0!==e?String(e):_);if(null===l||"replacement"===l.name)throw RangeError("Unknown encoding: "+e);if(!b[l.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");this._encoding=l}else this._encoding=g("utf-8"),void 0!==e&&"console"in t&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase()),this}function R(e){var t=e.fatal,n=0,r=0,i=0;this.handler=function(e,o){if(o===a&&0===n&&0===r&&0===i)return c;var u;if(o!==a||0===n&&0===r&&0===i||(n=0,r=0,i=0,d(t)),0!==i){u=null,l(o,48,57)&&(u=function(e){if(e>39419&&e<189e3||e>1237575)return null;if(7457===e)return 59335;var t,n=0,l=0,r=S("gb18030-ranges");for(t=0;t<r.length;++t){var i=r[t];if(!(i[0]<=e))break;n=i[0],l=i[1]}return l+e-n}(10*(126*(10*(n-129)+r-48)+i-129)+o-48));var p=[r,i,o];return n=0,r=0,i=0,null===u?(e.prepend(p),d(t)):u}if(0!==r)return l(o,129,254)?(i=o,null):(e.prepend([r,o]),n=0,r=0,d(t));if(0!==n){if(l(o,48,57))return r=o,null;var g=n,h=null;n=0;var f=o<127?64:65;return(l(o,64,126)||l(o,128,254))&&(h=190*(g-129)+(o-f)),null===(u=null===h?null:E(h,S("gb18030")))&&s(o)&&e.prepend(o),null===u?d(t):u}return s(o)?o:128===o?8364:l(o,129,254)?(n=o,null):d(t)}}function A(e,t){e.fatal;this.handler=function(e,n){if(n===a)return c;if(o(n))return n;if(58853===n)return p(n);if(t&&8364===n)return 128;var l=I(n,S("gb18030"));if(null!==l){var i=l%190;return[r(l/190)+129,i+(i<63?64:65)]}if(t)return p(n);l=function(e){if(59335===e)return 7457;var t,n=0,l=0,r=S("gb18030-ranges");for(t=0;t<r.length;++t){var i=r[t];if(!(i[1]<=e))break;n=i[1],l=i[0]}return l+e-n}(n);var s=r(l/10/126/10),u=r((l-=10*s*126*10)/10/126),d=r((l-=10*u*126)/10);return[s+129,u+48,d+129,l-10*d+48]}}function O(e){e.fatal;this.handler=function(e,t){if(t===a)return c;if(o(t))return t;var n=function(e){var t=y=y||S("big5").map(function(e,t){return t<5024?null:e});return 9552===e||9566===e||9569===e||9578===e||21313===e||21317===e?t.lastIndexOf(e):I(e,t)}(t);if(null===n)return p(t);var l=r(n/157)+129;if(l<161)return p(t);var i=n%157;return[l,i+(i<63?64:98)]}}function C(e){e.fatal;this.handler=function(e,t){if(t===a)return c;if(o(t)||128===t)return t;if(165===t)return 92;if(8254===t)return 126;if(l(t,65377,65439))return t-65377+161;8722===t&&(t=65293);var n=function(e){return(m=m||S("jis0208").map(function(e,t){return l(t,8272,8835)?null:e})).indexOf(e)}(t);if(null===n)return p(t);var i=r(n/188),s=n%188;return[i+(i<31?129:193),s+(s<63?64:65)]}}function M(e,t){var n=e>>8,l=255&e;return t?[n,l]:[l,n]}function P(e,t){var n=t.fatal,r=null,i=null;this.handler=function(t,s){if(s===a&&(null!==r||null!==i))return d(n);if(s===a&&null===r&&null===i)return c;if(null===r)return r=s,null;var o;if(o=e?(r<<8)+s:(s<<8)+r,r=null,null!==i){var u=i;return i=null,l(o,56320,57343)?65536+1024*(u-55296)+(o-56320):(t.prepend(M(o,e)),d(n))}return l(o,55296,56319)?(i=o,null):l(o,56320,57343)?d(n):o}}function j(e,t){t.fatal;this.handler=function(t,n){if(n===a)return c;if(l(n,0,65535))return M(n,e);var r=M(55296+(n-65536>>10),e),i=M(56320+(n-65536&1023),e);return r.concat(i)}}Object.defineProperty&&(Object.defineProperty(T.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(T.prototype,"fatal",{get:function(){return"fatal"===this._error_mode}}),Object.defineProperty(T.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),T.prototype.decode=function(e,t){var n;n="object"==typeof e&&e instanceof ArrayBuffer?new Uint8Array(e):"object"==typeof e&&"buffer"in e&&e.buffer instanceof ArrayBuffer?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(0),t=i(t),this._do_not_flush||(this._decoder=v[this._encoding.name]({fatal:"fatal"===this._error_mode}),this._BOMseen=!1),this._do_not_flush=Boolean(t.stream);for(var l,r=new u(n),s=[];;){var o=r.read();if(o===a)break;if((l=this._decoder.handler(r,o))===c)break;null!==l&&(Array.isArray(l)?s.push.apply(s,l):s.push(l))}if(!this._do_not_flush){do{if((l=this._decoder.handler(r,r.read()))===c)break;null!==l&&(Array.isArray(l)?s.push.apply(s,l):s.push(l))}while(!r.endOfStream());this._decoder=null}return function(e){return!function(e,t){return-1!==e.indexOf(t)}(["UTF-8","UTF-16LE","UTF-16BE"],this._encoding.name)||this._ignoreBOM||this._BOMseen||(e.length>0&&65279===e[0]?(this._BOMseen=!0,e.shift()):e.length>0&&(this._BOMseen=!0)),function(e){for(var t="",n=0;n<e.length;++n){var l=e[n];l<=65535?t+=String.fromCharCode(l):(l-=65536,t+=String.fromCharCode(55296+(l>>10),56320+(1023&l)))}return t}(e)}.call(this,s)},Object.defineProperty&&Object.defineProperty(w.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),w.prototype.encode=function(e,t){e=void 0===e?"":String(e),t=i(t),this._do_not_flush||(this._encoder=b[this._encoding.name]({fatal:"fatal"===this._fatal})),this._do_not_flush=Boolean(t.stream);for(var n,l=new u(function(e){for(var t=String(e),n=t.length,l=0,r=[];l<n;){var i=t.charCodeAt(l);if(i<55296||i>57343)r.push(i);else if(56320<=i&&i<=57343)r.push(65533);else if(55296<=i&&i<=56319)if(l===n-1)r.push(65533);else{var s=t.charCodeAt(l+1);if(56320<=s&&s<=57343){var o=1023&i,a=1023&s;r.push(65536+(o<<10)+a),l+=1}else r.push(65533)}l+=1}return r}(e)),r=[];;){var s=l.read();if(s===a)break;if((n=this._encoder.handler(l,s))===c)break;Array.isArray(n)?r.push.apply(r,n):r.push(n)}if(!this._do_not_flush){for(;(n=this._encoder.handler(l,l.read()))!==c;)Array.isArray(n)?r.push.apply(r,n):r.push(n);this._encoder=null}return new Uint8Array(r)},b["UTF-8"]=function(e){return new function(e){e.fatal,this.handler=function(e,t){if(t===a)return c;if(o(t))return t;var n,r;l(t,128,2047)?(n=1,r=192):l(t,2048,65535)?(n=2,r=224):l(t,65536,1114111)&&(n=3,r=240);for(var i=[(t>>6*n)+r];n>0;){var s=t>>6*(n-1);i.push(128|63&s),n-=1}return i}}(e)},v["UTF-8"]=function(e){return new function(e){var t=e.fatal,n=0,r=0,i=0,s=128,o=191;this.handler=function(e,u){if(u===a&&0!==i)return i=0,d(t);if(u===a)return c;if(0===i){if(l(u,0,127))return u;if(l(u,194,223))i=1,n=31&u;else if(l(u,224,239))224===u&&(s=160),237===u&&(o=159),i=2,n=15&u;else{if(!l(u,240,244))return d(t);240===u&&(s=144),244===u&&(o=143),i=3,n=7&u}return null}if(!l(u,s,o))return n=i=r=0,s=128,o=191,e.prepend(u),d(t);if(s=128,o=191,n=n<<6|63&u,(r+=1)!==i)return null;var p=n;return n=i=r=0,p}}(e)},"encoding-indexes"in t&&h.forEach(function(e){"Legacy single-byte encodings"===e.heading&&e.encodings.forEach(function(e){var t=e.name,n=S(t.toLowerCase());v[t]=function(e){return new function(e,t){var n=t.fatal;this.handler=function(t,l){if(l===a)return c;if(s(l))return l;var r=e[l-128];return null===r?d(n):r}}(n,e)},b[t]=function(e){return new function(e,t){t.fatal,this.handler=function(t,n){if(n===a)return c;if(o(n))return n;var l=I(n,e);return null===l&&p(n),l+128}}(n,e)}})}),v.GBK=function(e){return new R(e)},b.GBK=function(e){return new A(e,!0)},b.gb18030=function(e){return new A(e)},v.gb18030=function(e){return new R(e)},b.Big5=function(e){return new O(e)},v.Big5=function(e){return new function(e){var t=e.fatal,n=0;this.handler=function(e,r){if(r===a&&0!==n)return n=0,d(t);if(r===a&&0===n)return c;if(0!==n){var i=n,o=null;n=0;var u=r<127?64:98;switch((l(r,64,126)||l(r,161,254))&&(o=157*(i-129)+(r-u)),o){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var p=null===o?null:E(o,S("big5"));return null===p&&s(r)&&e.prepend(r),null===p?d(t):p}return s(r)?r:l(r,129,254)?(n=r,null):d(t)}}(e)},b["EUC-JP"]=function(e){return new function(e){e.fatal,this.handler=function(e,t){if(t===a)return c;if(o(t))return t;if(165===t)return 92;if(8254===t)return 126;if(l(t,65377,65439))return[142,t-65377+161];8722===t&&(t=65293);var n=I(t,S("jis0208"));return null===n?p(t):[r(n/94)+161,n%94+161]}}(e)},v["EUC-JP"]=function(e){return new function(e){var t=e.fatal,n=!1,r=0;this.handler=function(e,i){if(i===a&&0!==r)return r=0,d(t);if(i===a&&0===r)return c;if(142===r&&l(i,161,223))return r=0,65216+i;if(143===r&&l(i,161,254))return n=!0,r=i,null;if(0!==r){var o=r;r=0;var u=null;return l(o,161,254)&&l(i,161,254)&&(u=E(94*(o-161)+(i-161),S(n?"jis0212":"jis0208"))),n=!1,l(i,161,254)||e.prepend(i),null===u?d(t):u}return s(i)?i:142===i||143===i||l(i,161,254)?(r=i,null):d(t)}}(e)},b["ISO-2022-JP"]=function(e){return new function(e){e.fatal;var t=0,n=1,l=2,i=t;this.handler=function(e,s){if(s===a&&i!==t)return e.prepend(s),i=t,[27,40,66];if(s===a&&i===t)return c;if(!(i!==t&&i!==n||14!==s&&15!==s&&27!==s))return p(65533);if(i===t&&o(s))return s;if(i===n&&(o(s)&&92!==s&&126!==s||165==s||8254==s)){if(o(s))return s;if(165===s)return 92;if(8254===s)return 126}if(o(s)&&i!==t)return e.prepend(s),i=t,[27,40,66];if((165===s||8254===s)&&i!==n)return e.prepend(s),i=n,[27,40,74];8722===s&&(s=65293);var u=I(s,S("jis0208"));return null===u?p(s):i!==l?(e.prepend(s),i=l,[27,36,66]):[r(u/94)+33,u%94+33]}}(e)},v["ISO-2022-JP"]=function(e){return new function(e){var t=e.fatal,n=0,r=1,i=2,s=3,o=4,u=5,p=6,g=n,h=n,f=0,m=!1;this.handler=function(e,y){switch(g){default:case n:return 27===y?(g=u,null):l(y,0,127)&&14!==y&&15!==y&&27!==y?(m=!1,y):y===a?c:(m=!1,d(t));case r:return 27===y?(g=u,null):92===y?(m=!1,165):126===y?(m=!1,8254):l(y,0,127)&&14!==y&&15!==y&&27!==y&&92!==y&&126!==y?(m=!1,y):y===a?c:(m=!1,d(t));case i:return 27===y?(g=u,null):l(y,33,95)?(m=!1,65344+y):y===a?c:(m=!1,d(t));case s:return 27===y?(g=u,null):l(y,33,126)?(m=!1,f=y,g=o,null):y===a?c:(m=!1,d(t));case o:if(27===y)return g=u,d(t);if(l(y,33,126)){g=s;var b=E(94*(f-33)+y-33,S("jis0208"));return null===b?d(t):b}return y===a?(g=s,e.prepend(y),d(t)):(g=s,d(t));case u:return 36===y||40===y?(f=y,g=p,null):(e.prepend(y),m=!1,g=h,d(t));case p:var v=f;f=0;var I=null;if(40===v&&66===y&&(I=n),40===v&&74===y&&(I=r),40===v&&73===y&&(I=i),36!==v||64!==y&&66!==y||(I=s),null!==I){g=g=I;var _=m;return m=!0,_?d(t):null}return e.prepend([v,y]),m=!1,g=h,d(t)}}}(e)},b.Shift_JIS=function(e){return new C(e)},v.Shift_JIS=function(e){return new function(e){var t=e.fatal,n=0;this.handler=function(e,r){if(r===a&&0!==n)return n=0,d(t);if(r===a&&0===n)return c;if(0!==n){var i=n,o=null;n=0;var u=r<127?64:65,p=i<160?129:193;if((l(r,64,126)||l(r,128,252))&&(o=188*(i-p)+r-u),l(o,8836,10715))return 48508+o;var g=null===o?null:E(o,S("jis0208"));return null===g&&s(r)&&e.prepend(r),null===g?d(t):g}return s(r)||128===r?r:l(r,161,223)?65216+r:l(r,129,159)||l(r,224,252)?(n=r,null):d(t)}}(e)},b["EUC-KR"]=function(e){return new function(e){e.fatal,this.handler=function(e,t){if(t===a)return c;if(o(t))return t;var n=I(t,S("euc-kr"));return null===n?p(t):[r(n/190)+129,n%190+65]}}(e)},v["EUC-KR"]=function(e){return new function(e){var t=e.fatal,n=0;this.handler=function(e,r){if(r===a&&0!==n)return n=0,d(t);if(r===a&&0===n)return c;if(0!==n){var i=n,o=null;n=0,l(r,65,254)&&(o=190*(i-129)+(r-65));var u=null===o?null:E(o,S("euc-kr"));return null===o&&s(r)&&e.prepend(r),null===u?d(t):u}return s(r)?r:l(r,129,254)?(n=r,null):d(t)}}(e)},b["UTF-16BE"]=function(e){return new j(!0,e)},v["UTF-16BE"]=function(e){return new P(!0,e)},b["UTF-16LE"]=function(e){return new j(!1,e)},v["UTF-16LE"]=function(e){return new P(!1,e)},b["x-user-defined"]=function(e){return new function(e){e.fatal,this.handler=function(e,t){return t===a?c:o(t)?t:l(t,63360,63487)?t-63360+128:p(t)}}(e)},v["x-user-defined"]=function(e){return new function(e){e.fatal,this.handler=function(e,t){return t===a?c:s(t)?t:63360+t-128}}(e)},t.TextEncoder||(t.TextEncoder=w),t.TextDecoder||(t.TextDecoder=T),void 0!==e&&e.exports&&(e.exports={TextEncoder:t.TextEncoder,TextDecoder:t.TextDecoder,EncodingIndexes:t["encoding-indexes"]})}(this||{})},function(e,t){!function(t){"use strict";void 0!==e&&e.exports&&(e.exports=t),t["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}}(this||{})},function(e,t,n){"use strict";e.exports={argon2kdf:(e,t,n,l)=>{if(l=l||new Uint8Array,!(t instanceof Uint8Array&&n instanceof Uint8Array&&l instanceof Uint8Array))throw new Error("Invalid arguments");const r=1024,i=4,s=new WebAssembly.Memory({initial:256,maximum:256}),o=new Uint8Array(s.buffer);function a(e){return 16*Math.ceil(e/16)}const u=a(r+3344),c=a(u+4),d=c+131072,p=a(d);return new Uint32Array(s.buffer)[u>>2]=p,function(){function a(){return new Uint32Array(s.buffer)[u>>2]}const p={env:{memory:s,memoryBase:r,table:new WebAssembly.Table({initial:i,maximum:i,element:"anyfunc"}),tableBase:0,DYNAMICTOP_PTR:u,STACKTOP:c,STACK_MAX:d,getTotalMemory:()=>o.length,_emscripten_memcpy_big:(e,t,n)=>(o.set(o.subarray(t,t+n),e),e),abort:e=>{throw new Error(`argon2kdf: abort(${e})`)},_abort:e=>{throw new Error(`argon2kdf: _abort(${e})`)},abortOnCannotGrowMemory:()=>{const e=a();throw new Error("argon2kdf: abortOnCannotGrowMemory(): "+`*DYNAMICTOP_PTR=${e}`)},enlargeMemory:()=>{const e=a();throw new Error("argon2kdf: enlargeMemory() is not supported: "+`*DYNAMICTOP_PTR=${e}`)},___setErrNo:()=>{}}};return WebAssembly.instantiate(e,p).then(function(e){return function(e){function r(t){if(t<0)throw new Error(`argon2kdf: malloc(${t}) invalid argument`);const n=e._malloc(t);if(0===n)throw new Error(`argon2kdf: malloc(${t}) returned NULL`);return{ptr:n,size:t}}function i(e){const t=r(e.length);return o.set(e,t.ptr),t}const a=i(t),u=i(n),c=i(l),d=r(32),p=r(72);{const e=new Uint32Array(s.buffer,p.ptr,p.size);e.fill(0),e[0]=d.ptr,e[1]=d.size,e[2]=u.ptr,e[3]=u.size,e[4]=a.ptr,e[5]=a.size,e[8]=c.ptr,e[9]=c.size,e[10]=15,e[11]=8192,e[12]=1,e[13]=1,e[14]=19,e[17]=3}const g=e._argon2_ctx(p.ptr,2);if(0!==g)throw new Error(`argon2kdf: Error ${g}: `+function(t){return function(e){if(0===e)return null;const t=o.subarray(e),n=t.indexOf(0),l=t.subarray(0,n);let r="";for(let e=0;e<l.length;e++){const t=l[e];t<128&&(r+=String.fromCharCode(t))}return r}(e._argon2_error_message(t))}(g));return o.slice(d.ptr,d.ptr+d.size)}(e.instance.exports)})}()}}},function(e,t,n){"use strict";e.exports={DigestAlgorithm:{SHA256:0,SHA512:1}}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";function l(){this.busClient=void 0,this.registrationInfo=void 0,this.transportCallbacks=void 0,this.transport=void 0,this.kmsClient=void 0,this.keyManager=void 0,this.rim_im=void 0,this.lastUpload=void 0,this.db=void 0,this.managementClient=void 0,this.contentClient=void 0,this.syncManager=void 0,this.chatCache=void 0,this.lastOnlineMessage=Promise.resolve(),this.retryServerRequestFunctions=[],this.getCurrentTimestamp=function(){return Math.floor(Date.now()/1e3)}}n.r(t),n.d(t,"default",function(){return l})},function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return s});var l=n(1),r=n(0);const i="RequestManager";function s(){this.requests=[],this.requestInProgress=!1,this.inCompletionCallback=!1,this.doNextRequestTimerId=null}s.prototype.retryableRequest=function(e){var t=this;return new Promise(function(n,l){t.requests.push({resolve:n,reject:l,doRequestFunction:e}),t.doNextRequest()})},s.prototype.doNextRequest=function(){var e=this;if(0!==e.requests.length&&!e.requestInProgress&&null===e.doNextRequestTimerId)if(e.inCompletionCallback)e.doNextRequestTimerId=setTimeout(function(){e.doNextRequestTimerId=null,e.doNextRequest()});else{e.requestInProgress=!0;try{var t=e.requests[0];t.doRequestFunction().then(function(e){n(function(){t.resolve(e)})}).catch(function(s){if(s instanceof l.TemporaryFailure)return Object(r.default)(r.default.WARNING,"%s: %s; request will be retried",i,s),void(e.requestInProgress=!1);n(function(){t.reject(s)})})}catch(e){Object(r.default)(r.default.ERROR,"%s: Failed to initiate retryable request; error=%s",i,e),n(function(){t.reject(e)})}}function n(t){e.inCompletionCallback=!0,e.requestInProgress=!1,t(),e.requests.shift(1),e.doNextRequest(),e.inCompletionCallback=!1}},s.prototype.reset=function(){this.requests.length>0&&(Object(r.default)(r.default.WARNING,"%s: Reset has been called; rejecting %d request(s)",i,this.requests.length),this.requests.forEach(function(e){e.reject(new l.Error("Request was cancelled")),delete e.doRequestFunction})),null!==this.doNextRequestTimerId&&(Object(r.default)(r.default.WARNING,"%s: Reset has been called; cancelling timer with id=%s",i,this.doNextRequestTimerId),clearTimeout(this.doNextRequestTimerId)),this.requests=[],this.requestInProgress=!1,this.inCompletionCallback=!1,this.doNextRequestTimerId=null}},function(e,t,n){var l=n(17),r=e.exports;!function(){"use strict";var e,t,n,i=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,s={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};function o(e){return i.lastIndex=0,i.test(e)?'"'+e.replace(i,function(e){var t=s[e];return"string"==typeof t?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+e+'"'}"function"!=typeof r.stringify&&(r.stringify=function(r,i,s){var a;if(e="",t="","number"==typeof s)for(a=0;a<s;a+=1)t+=" ";else"string"==typeof s&&(t=s);if(n=i,i&&"function"!=typeof i&&("object"!=typeof i||"number"!=typeof i.length))throw new Error("JSON.stringify");return function r(i,s){var a,u,c,d,p,g=e,h=s[i],f=null!=h&&(h instanceof l||l.isBigNumber(h));switch(h&&"object"==typeof h&&"function"==typeof h.toJSON&&(h=h.toJSON(i)),"function"==typeof n&&(h=n.call(s,i,h)),typeof h){case"string":return f?h:o(h);case"number":return isFinite(h)?String(h):"null";case"boolean":case"null":return String(h);case"object":if(!h)return"null";if(e+=t,p=[],"[object Array]"===Object.prototype.toString.apply(h)){for(d=h.length,a=0;a<d;a+=1)p[a]=r(a,h)||"null";return c=0===p.length?"[]":e?"[\n"+e+p.join(",\n"+e)+"\n"+g+"]":"["+p.join(",")+"]",e=g,c}if(n&&"object"==typeof n)for(d=n.length,a=0;a<d;a+=1)"string"==typeof n[a]&&(c=r(u=n[a],h))&&p.push(o(u)+(e?": ":":")+c);else Object.keys(h).forEach(function(t){var n=r(t,h);n&&p.push(o(t)+(e?": ":":")+n)});return c=0===p.length?"{}":e?"{\n"+e+p.join(",\n"+e)+"\n"+g+"}":"{"+p.join(",")+"}",e=g,c}}("",{"":r})})}()},function(e,t,n){var l=null;e.exports=function(e){"use strict";var t={strict:!1,storeAsString:!1};void 0!==e&&null!==e&&(!0===e.strict&&(t.strict=!0),!0===e.storeAsString&&(t.storeAsString=!0));var r,i,s,o,a={'"':'"',"\\":"\\","/":"/",b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"},u=function(e){throw{name:"SyntaxError",message:e,at:r,text:s}},c=function(e){return e&&e!==i&&u("Expected '"+e+"' instead of '"+i+"'"),i=s.charAt(r),r+=1,i},d=function(){var e,r="";for("-"===i&&(r="-",c("-"));i>="0"&&i<="9";)r+=i,c();if("."===i)for(r+=".";c()&&i>="0"&&i<="9";)r+=i;if("e"===i||"E"===i)for(r+=i,c(),"-"!==i&&"+"!==i||(r+=i,c());i>="0"&&i<="9";)r+=i,c();if(e=+r,isFinite(e))return null==l&&(l=n(17)),r.length>15?!0===t.storeAsString?r:new l(r):e;u("Bad number")},p=function(){var e,t,n,l="";if('"'===i)for(;c();){if('"'===i)return c(),l;if("\\"===i)if(c(),"u"===i){for(n=0,t=0;t<4&&(e=parseInt(c(),16),isFinite(e));t+=1)n=16*n+e;l+=String.fromCharCode(n)}else{if("string"!=typeof a[i])break;l+=a[i]}else l+=i}u("Bad string")},g=function(){for(;i&&i<=" ";)c()};return o=function(){switch(g(),i){case"{":return function(){var e,n={};if("{"===i){if(c("{"),g(),"}"===i)return c("}"),n;for(;i;){if(e=p(),g(),c(":"),!0===t.strict&&Object.hasOwnProperty.call(n,e)&&u('Duplicate key "'+e+'"'),n[e]=o(),g(),"}"===i)return c("}"),n;c(","),g()}}u("Bad object")}();case"[":return function(){var e=[];if("["===i){if(c("["),g(),"]"===i)return c("]"),e;for(;i;){if(e.push(o()),g(),"]"===i)return c("]"),e;c(","),g()}}u("Bad array")}();case'"':return p();case"-":return d();default:return i>="0"&&i<="9"?d():function(){switch(i){case"t":return c("t"),c("r"),c("u"),c("e"),!0;case"f":return c("f"),c("a"),c("l"),c("s"),c("e"),!1;case"n":return c("n"),c("u"),c("l"),c("l"),null}u("Unexpected '"+i+"'")}()}},function(e,t){var n;return s=e+"",r=0,i=" ",n=o(),g(),i&&u("Syntax error"),"function"==typeof t?function e(n,l){var r,i=n[l];return i&&"object"==typeof i&&Object.keys(i).forEach(function(t){void 0!==(r=e(i,t))?i[t]=r:delete i[t]}),t.call(n,l,i)}({"":n},""):n}}},function(e,t,n){"use strict";(function(t){var l=t.window||t,r=n(73);function i(){var e=l&&l.navigator,t={name:null,version:null,ua:null};if(void 0===l||!e)return t;var n=e.userAgent;t.ua=n;var r={chrome:{expr:/Chrom(ium|e)\/(\d+)\./,pos:2},safari:{expr:/AppleWebKit\/(\d+)\./,pos:1},firefox:{expr:/Firefox\/(\d+)\./,pos:1},edge:{expr:/Edge\/(\d+).(\d+)$/,pos:2}};return e.webkitGetUserMedia?t.name="chrome":e.mozGetUserMedia?t.name="firefox":e.mediaDevices&&n.match(r.edge.expr)?t.name="edge":e.RTCPeerConnection&&n.match(r.safari.expr)&&(t.name="safari"),t.version=function(e){if(!e||!r[e])return null;var t=n.match(r[e].expr,r[e].pos);return t&&t.length>=r[e].pos&&parseInt(t[r[e].pos],10)}(t.name),t}e.exports={toplevel:l,open:l.open,Promise:l.Promise,timers:l,console:l.console||{debug:function(){},log:function(){},warn:function(){},error:function(){}},browser:i(),mediaDevices:l.navigator?l.navigator.mediaDevices:void 0,SIP:r,MediaStream:r.WebRTC.env.MediaStream,getUserMediaPromise:r.WebRTC.env.getUserMediaPromise,getUserMedia:r.WebRTC.env.getUserMedia,RTCPeerConnection:r.WebRTC.env.RTCPeerConnection,RTCSessionDescription:r.WebRTC.env.RTCSessionDescription,addEventListener:r.WebRTC.env.getPrefixedProperty(l,"addEventListener"),removeEventListener:r.WebRTC.env.getPrefixedProperty(l,"removeEventListener"),HTMLMediaElement:l.HTMLMediaElement,attachMediaStream:l.attachMediaStream,createObjectURL:l.URL&&l.URL.createObjectURL,revokeObjectURL:l.URL&&l.URL.revokeObjectURL,MD5:n(37),SHA:n(113),Fs:l.fs,WebSocket:l.WebSocket,https:l.https,navigator:l.navigator,btoa:r.WebRTC.env.getPrefixedProperty(l,"btoa"),atob:r.WebRTC.env.getPrefixedProperty(l,"atob"),FileReader:l.FileReader,envMake:l.navigator?l.navigator.vendor||l.navigator.appCodeName:void 0,envModel:l.navigator?l.navigator.platform:void 0,envVersion:function(){var e;if(l.navigator&&(e=l.navigator.appVersion),!e){var t=i();t.ua&&(e=t.ua)}return e}(),envProduct:"Web",constants:{SSL_OP_NO_TICKET:16384}}}).call(this,n(33))},function(e,t,n){"use strict";e.exports=n(74)(n(106))},function(e,t,n){"use strict";e.exports=function(e){var t=n(75),l=t.version,r=t.title,i=Object.defineProperties({},{version:{get:function(){return l}},name:{get:function(){return r}}});return n(76)(i,e),i.LoggerFactory=n(77)(e.console),i.EventEmitter=n(78)(e.console),i.C=n(79)(i.name,i.version),i.Exceptions=n(80),i.Timers=n(81)(e.timers),i.Transport=e.Transport(i,e.WebSocket),n(82)(i),n(83)(i),n(84)(i),n(85)(i),n(86)(i),n(87)(i),n(89)(i),n(90)(i),i.MediaHandler=n(91)(i.EventEmitter),n(92)(i),n(93)(i),n(94)(i,e),n(96)(i),i.WebRTC=n(97)(i,e),n(100)(i,e),i.Hacks=n(101)(i),n(102)(i),i.DigestAuthentication=n(103)(i.Utils),i.Grammar=n(104)(i),i}},function(e){e.exports={name:"sip.js",title:"SIP.js",description:"A simple, intuitive, and powerful JavaScript signaling library",version:"0.7.8",main:"src/index.js",browser:{"./src/environment.js":"./src/environment_browser.js"},homepage:"http://sipjs.com",author:"OnSIP <developer@onsip.com> (http://sipjs.com/authors/)",contributors:[{url:"https://github.com/onsip/SIP.js/blob/master/THANKS.md"}],repository:{type:"git",url:"https://github.com/onsip/SIP.js.git"},keywords:["sip","websocket","webrtc","library","javascript"],devDependencies:{beefy:"^2.1.5",browserify:"^4.1.8",grunt:"~0.4.0","grunt-browserify":"^4.0.1","grunt-cli":"~0.1.6","grunt-contrib-copy":"^0.5.0","grunt-contrib-jasmine":"^1.0.3","grunt-contrib-jshint":">0.5.0","grunt-contrib-uglify":"~0.2.0","grunt-peg":"~1.3.1","grunt-trimtrailingspaces":"^0.4.0",pegjs:"^0.8.0"},engines:{node:">=0.12"},license:"MIT",scripts:{repl:"beefy test/repl.js --open",build:"grunt build",prepublish:"cd src/Grammar && mkdir -p dist && pegjs --extra-options-file peg.json src/Grammar.pegjs dist/Grammar.js",test:"grunt travis --verbose"},dependencies:{eventemitter3:"^3.0.1","sdp-transform":"^2.4.0",websocket:"^1.0.25"},optionalDependencies:{promiscuous:"^0.6.0"}}},function(e,t,n){"use strict";e.exports=function(e,t){var n;n={Promise:t.Promise,defer:function(){var e={};return e.promise=new n.Promise(function(t,n){e.resolve=t,e.reject=n}),e},promisify:function(e,t,l){var r=e[t];return function(t,i,s){return new n.Promise(function(n,i){var s=[t,n,i];l&&(s=[n,i,t]),r.apply(e,s)}).then(i,s)}},augment:function(e,t,n,l){var r,i;for(r in i=t.prototype)(l||void 0===e[r])&&(e[r]=i[r]);t.apply(e,n)},optionsOverride:function(e,t,n,l,r,i){l&&e[n]&&r.warn(n+" is deprecated, please use "+t+" instead"),e[t]&&e[n]&&r.warn(t+" overriding "+n),e[t]=e[t]||e[n]||i},str_utf8_length:function(e){return encodeURIComponent(e).replace(/%[A-F\d]{2}/g,"U").length},generateFakeSDP:function(e){if(e){var t=e.indexOf("o="),n=e.indexOf("\r\n",t);return"v=0\r\n"+e.slice(t,n)+"\r\ns=-\r\nt=0 0\r\nc=IN IP4 0.0.0.0"}},isFunction:function(e){return void 0!==e&&"[object Function]"===Object.prototype.toString.call(e)},isDecimal:function(e){return!isNaN(e)&&parseFloat(e)===parseInt(e,10)},createRandomToken:function(e,t){var n,l="";for(t=t||32,n=0;n<e;n++)l+=(Math.random()*t|0).toString(t);return l},newTag:function(){return e.Utils.createRandomToken(e.UA.C.TAG_LENGTH)},newUUID:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})},hostType:function(t){if(t)return-1!==(t=e.Grammar.parse(t,"host"))?t.host_type:void 0},normalizeTarget:function(t,n){var l,r,i,s;if(t){if(t instanceof e.URI)return t;if("string"==typeof t){switch((r=t.split("@")).length){case 1:if(!n)return;i=t,s=n;break;case 2:i=r[0],s=r[1];break;default:i=r.slice(0,r.length-1).join("@"),s=r[r.length-1]}return i=i.replace(/^(sips?|tel):/i,""),/^[\-\.\(\)]*\+?[0-9\-\.\(\)]+$/.test(i)&&(i=i.replace(/[\-\.\(\)]/g,"")),t=e.C.SIP+":"+e.Utils.escapeUser(i)+"@"+s,(l=e.URI.parse(t))?l:void 0}}else;},escapeUser:function(e){return encodeURIComponent(decodeURIComponent(e)).replace(/%3A/gi,":").replace(/%2B/gi,"+").replace(/%3F/gi,"?").replace(/%2F/gi,"/")},compact2RegularHeader:function(e){switch(e.toLowerCase()){case"a":e="Accept-Contact";break;case"b":e="Referred-By";break;case"c":e="Content-Type";break;case"e":e="Content-Encoding";break;case"f":e="From";break;case"i":e="Call-ID";break;case"k":e="Supported";break;case"l":e="Content-Length";break;case"m":e="Contact";break;case"o":e="Event";break;case"r":e="Refer-To";break;case"s":e="Subject";break;case"t":e="To";break;case"u":e="Allow-Events";break;case"v":e="Via"}return e},regular2CompactHeader:function(e){switch(e.toLowerCase()){case"accept-contact":e="a";break;case"referred-by":e="b";break;case"content-type":e="c";break;case"content-encoding":e="e";break;case"from":e="f";break;case"call-id":e="i";break;case"supported":e="k";break;case"content-length":e="l";break;case"contact":e="m";break;case"event":e="o";break;case"refer-to":e="r";break;case"subject":e="s";break;case"to":e="t";break;case"allow-events":e="u";break;case"via":e="v"}return e},headerize:function(e){var t,n={"Call-Id":"Call-ID",Cseq:"CSeq","Min-Se":"Min-SE",Rack:"RAck",Rseq:"RSeq","Www-Authenticate":"WWW-Authenticate"},l=e.toLowerCase().replace(/_/g,"-").split("-"),r="",i=l.length;for(t=0;t<i;t++)0!==t&&(r+="-"),r+=l[t].charAt(0).toUpperCase()+l[t].substring(1);return n[r]&&(r=n[r]),r},sipErrorCause:function(t){var n;for(n in e.C.SIP_ERROR_CAUSES)if(-1!==e.C.SIP_ERROR_CAUSES[n].indexOf(t))return e.C.causes[n];return e.C.causes.SIP_FAILURE_CODE},getReasonPhrase:function(t,n){return n||e.C.REASON_PHRASE[t]||""},getReasonHeaderValue:function(t,n){return"SIP ;cause="+t+' ;text="'+(n=e.Utils.getReasonPhrase(t,n))+'"'},getCancelReason:function(t,n){if(t&&t<200||t>699)throw new TypeError("Invalid status_code: "+t);if(t)return e.Utils.getReasonHeaderValue(t,n)},buildStatusLine:function(e,t){if(e=e||null,t=t||null,!e||e<100||e>699)throw new TypeError("Invalid status_code: "+e);if(t&&"string"!=typeof t&&!(t instanceof String))throw new TypeError("Invalid reason_phrase: "+t);return"SIP/2.0 "+e+" "+(t=n.getReasonPhrase(e,t))+"\r\n"},getRandomTestNetIP:function(){return"192.0.2."+function(e,t){return Math.floor(Math.random()*(t-e+1)+e)}(1,254)},string2Utf8Array:function(e){var t=[],n=128,l=63,r=function(e){return e<=127},i=function(e,t){t.push(e)},s=function(e){return e<=2047},o=function(e,t){t.push(192|e>>6,n|e&l)},a=function(e){return e<=55295||e>=57344},u=function(e,t){t.push(224|e>>12,n|e>>6&l,n|e&l)};function c(e,t,r){var i=65536+((1023&e)<<10|1023&t);r.push(240|i>>18,n|i>>12&l,n|i>>6&l,n|i&l)}for(var d=0;d<e.length;d++){var p=e.charCodeAt(d);switch(!0){case r(p):i(p,t);break;case s(p):o(p,t);break;case a(p):u(p,t);break;default:d++,c(p,e.charCodeAt(d),t)}}return new Uint8Array(t)},utf8ArrayToString:function(e){for(var t,n,l=String.fromCharCode,r=[],i={},s=0;s<e.length;){switch(t=e[s++],!0){case t<=127:n=t;break;case t<=223:if(s+1>e.length)throw new Error("Invalid utf8 array");n=(31&t)<<6|63&e[s++];break;case t<=239:if(s+2>e.length)throw new Error("Invalid utf8 array");n=(15&t)<<12|(63&e[s++])<<6|63&e[s++];break;default:if(s+3>e.length)throw new Error("Invalid utf8 array");n=(7&t)<<18|(63&e[s++])<<12|(63&e[s++])<<6|63&e[s++]}var o=[];if(n<=65535)o.push(n);else{var a=n-65536;o.push(55296+(a>>10)),o.push(56320+(1023&a))}r.push(i[n]||(i[n]=l.apply(null,o)))}return r.join("")},utf8ArrayToStringWithFallback:function(e){try{return n.utf8ArrayToString(e)}catch(t){return String.fromCharCode.apply(null,e)}},calculateMD5:function(e){function t(e,t){return e<<t|e>>>32-t}function n(e,t){var n,l,r,i,s;return r=2147483648&e,i=2147483648&t,s=(1073741823&e)+(1073741823&t),(n=1073741824&e)&(l=1073741824&t)?2147483648^s^r^i:n|l?1073741824&s?3221225472^s^r^i:1073741824^s^r^i:s^r^i}function l(e,l,r,i,s,o,a){return n(t(e=n(e,n(n(function(e,t,n){return e&t|~e&n}(l,r,i),s),a)),o),l)}function r(e,l,r,i,s,o,a){return n(t(e=n(e,n(n(function(e,t,n){return e&n|t&~n}(l,r,i),s),a)),o),l)}function i(e,l,r,i,s,o,a){return n(t(e=n(e,n(n(function(e,t,n){return e^t^n}(l,r,i),s),a)),o),l)}function s(e,l,r,i,s,o,a){return n(t(e=n(e,n(n(function(e,t,n){return t^(e|~n)}(l,r,i),s),a)),o),l)}function o(e){var t,n="",l="";for(t=0;t<=3;t++)n+=(l="0"+(e>>>8*t&255).toString(16)).substr(l.length-2,2);return n}var a,u,c,d,p,g,h,f,m,y;for(a=function(e){for(var t,n=e.length,l=n+8,r=16*((l-l%64)/64+1),i=Array(r-1),s=0,o=0;o<n;)s=o%4*8,i[t=(o-o%4)/4]=i[t]|e.charCodeAt(o)<<s,o++;return s=o%4*8,i[t=(o-o%4)/4]=i[t]|128<<s,i[r-2]=n<<3,i[r-1]=n>>>29,i}(e=function(e){e=e.replace(/\r\n/g,"\n");for(var t="",n=0;n<e.length;n++){var l=e.charCodeAt(n);l<128?t+=String.fromCharCode(l):l>127&&l<2048?(t+=String.fromCharCode(l>>6|192),t+=String.fromCharCode(63&l|128)):(t+=String.fromCharCode(l>>12|224),t+=String.fromCharCode(l>>6&63|128),t+=String.fromCharCode(63&l|128))}return t}(e)),h=1732584193,f=4023233417,m=2562383102,y=271733878,u=0;u<a.length;u+=16)c=h,d=f,p=m,g=y,f=s(f=s(f=s(f=s(f=i(f=i(f=i(f=i(f=r(f=r(f=r(f=r(f=l(f=l(f=l(f=l(f,m=l(m,y=l(y,h=l(h,f,m,y,a[u+0],7,3614090360),f,m,a[u+1],12,3905402710),h,f,a[u+2],17,606105819),y,h,a[u+3],22,3250441966),m=l(m,y=l(y,h=l(h,f,m,y,a[u+4],7,4118548399),f,m,a[u+5],12,1200080426),h,f,a[u+6],17,2821735955),y,h,a[u+7],22,4249261313),m=l(m,y=l(y,h=l(h,f,m,y,a[u+8],7,1770035416),f,m,a[u+9],12,2336552879),h,f,a[u+10],17,4294925233),y,h,a[u+11],22,2304563134),m=l(m,y=l(y,h=l(h,f,m,y,a[u+12],7,1804603682),f,m,a[u+13],12,4254626195),h,f,a[u+14],17,2792965006),y,h,a[u+15],22,1236535329),m=r(m,y=r(y,h=r(h,f,m,y,a[u+1],5,4129170786),f,m,a[u+6],9,3225465664),h,f,a[u+11],14,643717713),y,h,a[u+0],20,3921069994),m=r(m,y=r(y,h=r(h,f,m,y,a[u+5],5,3593408605),f,m,a[u+10],9,38016083),h,f,a[u+15],14,3634488961),y,h,a[u+4],20,3889429448),m=r(m,y=r(y,h=r(h,f,m,y,a[u+9],5,568446438),f,m,a[u+14],9,3275163606),h,f,a[u+3],14,4107603335),y,h,a[u+8],20,1163531501),m=r(m,y=r(y,h=r(h,f,m,y,a[u+13],5,2850285829),f,m,a[u+2],9,4243563512),h,f,a[u+7],14,1735328473),y,h,a[u+12],20,2368359562),m=i(m,y=i(y,h=i(h,f,m,y,a[u+5],4,4294588738),f,m,a[u+8],11,2272392833),h,f,a[u+11],16,1839030562),y,h,a[u+14],23,4259657740),m=i(m,y=i(y,h=i(h,f,m,y,a[u+1],4,2763975236),f,m,a[u+4],11,1272893353),h,f,a[u+7],16,4139469664),y,h,a[u+10],23,3200236656),m=i(m,y=i(y,h=i(h,f,m,y,a[u+13],4,681279174),f,m,a[u+0],11,3936430074),h,f,a[u+3],16,3572445317),y,h,a[u+6],23,76029189),m=i(m,y=i(y,h=i(h,f,m,y,a[u+9],4,3654602809),f,m,a[u+12],11,3873151461),h,f,a[u+15],16,530742520),y,h,a[u+2],23,3299628645),m=s(m,y=s(y,h=s(h,f,m,y,a[u+0],6,4096336452),f,m,a[u+7],10,1126891415),h,f,a[u+14],15,2878612391),y,h,a[u+5],21,4237533241),m=s(m,y=s(y,h=s(h,f,m,y,a[u+12],6,1700485571),f,m,a[u+3],10,2399980690),h,f,a[u+10],15,4293915773),y,h,a[u+1],21,2240044497),m=s(m,y=s(y,h=s(h,f,m,y,a[u+8],6,1873313359),f,m,a[u+15],10,4264355552),h,f,a[u+6],15,2734768916),y,h,a[u+13],21,1309151649),m=s(m,y=s(y,h=s(h,f,m,y,a[u+4],6,4149444226),f,m,a[u+11],10,3174756917),h,f,a[u+2],15,718787259),y,h,a[u+9],21,3951481745),h=n(h,c),f=n(f,d),m=n(m,p),y=n(y,g);return(o(h)+o(f)+o(m)+o(y)).toLowerCase()},hasProto:function(e,t){for(;null!=e;e=Object.getPrototypeOf(e))for(var n=Object.getOwnPropertyNames(e),l=0;l<n.length;l++)if(n[l]===t)return!0;return!1},arraysEqual:function(e,t){if(e.length!==t.length)return!1;for(var n=e.length;n--;)if(e[n]!==t[n])return!1;return!0}},e.Utils=n}},function(e,t,n){"use strict";var l={error:0,warn:1,log:2,debug:3};e.exports=function(e){var t=function(e){var t,n=e||2,r=!0,i=null;this.loggers={},t=this.getLogger("sip.loggerfactory"),Object.defineProperties(this,{builtinEnabled:{get:function(){return r},set:function(e){"boolean"==typeof e?r=e:t.error('invalid "builtinEnabled" parameter value: '+JSON.stringify(e))}},level:{get:function(){return n},set:function(e){e>=0&&e<=3?n=e:e>3?n=3:l.hasOwnProperty(e)?n=l[e]:t.error('invalid "level" parameter value: '+JSON.stringify(e))}},connector:{get:function(){return i},set:function(e){null===e||""===e||void 0===e?i=null:"function"==typeof e?i=e:t.error('invalid "connector" parameter value: '+JSON.stringify(e))}}})};function n(e,t,n){this.logger=e,this.category=t,this.label=n}return t.prototype.print=function(t,n,l,r){if("string"==typeof r){var i=[new Date,n];l&&i.push(l),r=i.concat(r).join(" | ")}t.call(e,r)},Object.keys(l).forEach(function(r){n.prototype[r]=function(e){this.logger[r](this.category,this.label,e)},t.prototype[r]=function(t,n,i){this.level>=l[r]&&(this.builtinEnabled&&(e[r]?this.print(e[r],t,n,i):e.log&&this.print(e.log,t,n,i)),this.connector&&this.connector(r,t,n,i))}}),t.prototype.getLogger=function(e,t){var l;return t&&3===this.level?new n(this,e,t):this.loggers[e]?this.loggers[e]:(l=new n(this,e),this.loggers[e]=l,l)},t}},function(e,t,n){"use strict";e.exports=function(e){var t=n(25);function l(){t.call(this)}var r={constructor:{value:l,enumerable:!1,writable:!0,configurable:!0}};return["eventNames","listeners","emit","on","once","addListener","removeListener","removeAllListeners"].forEach(function(e){r[e]={value:function(){return function(e,n,l){if(void 0===e._events&&t.call(e),"on"===n&&l&&l.length>1&&"function"!=typeof l[1])throw new Error("invalid callback function");return t.prototype[n].apply(e,l)}(this,e,arguments)},enumerable:!0,writable:!0,configurable:!0}}),l.prototype=Object.create(t.prototype,r),l.prototype.off=function(t,n){var l="";return l+="SIP.EventEmitter#off is deprecated and may be removed in future SIP.js versions.\n",l+="Please use removeListener or removeAllListeners instead.\n",l+="See here for more details:\n",l+="http://nodejs.org/api/events.html#events_emitter_removelistener_event_listener",e.warn(l),arguments.length<2?this.removeAllListeners.apply(this,arguments):this.removeListener(t,n)},l}},function(e,t,n){"use strict";e.exports=function(e,t){return{USER_AGENT:e+"/"+t,SIP:"sip",SIPS:"sips",causes:{CONNECTION_ERROR:"Connection Error",REQUEST_TIMEOUT:"Request Timeout",SIP_FAILURE_CODE:"SIP Failure Code",INTERNAL_ERROR:"Internal Error",BUSY:"Busy",REJECTED:"Rejected",REDIRECTED:"Redirected",UNAVAILABLE:"Unavailable",NOT_FOUND:"Not Found",ADDRESS_INCOMPLETE:"Address Incomplete",INCOMPATIBLE_SDP:"Incompatible SDP",AUTHENTICATION_ERROR:"Authentication Error",DIALOG_ERROR:"Dialog Error",WEBRTC_NOT_SUPPORTED:"WebRTC Not Supported",WEBRTC_ERROR:"WebRTC Error",CANCELED:"Canceled",NO_ANSWER:"No Answer",EXPIRES:"Expires",NO_ACK:"No ACK",NO_PRACK:"No PRACK",USER_DENIED_MEDIA_ACCESS:"User Denied Media Access",BAD_MEDIA_DESCRIPTION:"Bad Media Description",RTP_TIMEOUT:"RTP Timeout"},supported:{UNSUPPORTED:"none",SUPPORTED:"supported",REQUIRED:"required"},SIP_ERROR_CAUSES:{REDIRECTED:[300,301,302,305,380],BUSY:[486,600],REJECTED:[403,603],NOT_FOUND:[404,604],UNAVAILABLE:[480,410,408,430],ADDRESS_INCOMPLETE:[484],INCOMPATIBLE_SDP:[488,606],AUTHENTICATION_ERROR:[401,407]},ACK:"ACK",BYE:"BYE",CANCEL:"CANCEL",INFO:"INFO",INVITE:"INVITE",MESSAGE:"MESSAGE",NOTIFY:"NOTIFY",OPTIONS:"OPTIONS",REGISTER:"REGISTER",UPDATE:"UPDATE",SUBSCRIBE:"SUBSCRIBE",REFER:"REFER",PRACK:"PRACK",REASON_PHRASE:{100:"Trying",180:"Ringing",181:"Call Is Being Forwarded",182:"Queued",183:"Session Progress",199:"Early Dialog Terminated",200:"OK",202:"Accepted",204:"No Notification",300:"Multiple Choices",301:"Moved Permanently",302:"Moved Temporarily",305:"Use Proxy",380:"Alternative Service",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",410:"Gone",412:"Conditional Request Failed",413:"Request Entity Too Large",414:"Request-URI Too Long",415:"Unsupported Media Type",416:"Unsupported URI Scheme",417:"Unknown Resource-Priority",420:"Bad Extension",421:"Extension Required",422:"Session Interval Too Small",423:"Interval Too Brief",428:"Use Identity Header",429:"Provide Referrer Identity",430:"Flow Failed",433:"Anonymity Disallowed",436:"Bad Identity-Info",437:"Unsupported Certificate",438:"Invalid Identity Header",439:"First Hop Lacks Outbound Support",440:"Max-Breadth Exceeded",469:"Bad Info Package",470:"Consent Needed",478:"Unresolvable Destination",480:"Temporarily Unavailable",481:"Call/Transaction Does Not Exist",482:"Loop Detected",483:"Too Many Hops",484:"Address Incomplete",485:"Ambiguous",486:"Busy Here",487:"Request Terminated",488:"Not Acceptable Here",489:"Bad Event",491:"Request Pending",493:"Undecipherable",494:"Security Agreement Required",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Server Time-out",505:"Version Not Supported",513:"Message Too Large",580:"Precondition Failure",600:"Busy Everywhere",603:"Decline",604:"Does Not Exist Anywhere",606:"Not Acceptable"},OPTION_TAGS:{"100rel":!0,199:!0,answermode:!0,"early-session":!0,eventlist:!0,explicitsub:!0,"from-change":!0,"geolocation-http":!0,"geolocation-sip":!0,gin:!0,gruu:!0,histinfo:!0,ice:!0,join:!0,"multiple-refer":!0,norefersub:!0,nosub:!0,outbound:!0,path:!0,policy:!0,precondition:!0,pref:!0,privacy:!0,"recipient-list-invite":!0,"recipient-list-message":!0,"recipient-list-subscribe":!0,replaces:!0,"resource-priority":!0,"sdp-anat":!0,"sec-agree":!0,tdialog:!0,timer:!0,uui:!0,upin:!0,mpop:!0}}}},function(e,t,n){"use strict";e.exports={ConfigurationError:function(){var e=function(e,t){this.code=1,this.name="CONFIGURATION_ERROR",this.parameter=e,this.value=t,this.message=this.value?"Invalid value "+JSON.stringify(this.value)+' for parameter "'+this.parameter+'"':"Missing parameter: "+this.parameter};return e.prototype=new Error,e}(),InvalidStateError:function(){var e=function(e){this.code=2,this.name="INVALID_STATE_ERROR",this.status=e,this.message="Invalid status: "+e};return e.prototype=new Error,e}(),NotSupportedError:function(){var e=function(e){this.code=3,this.name="NOT_SUPPORTED_ERROR",this.message=e};return e.prototype=new Error,e}(),GetDescriptionError:function(){var e=function(e){this.code=4,this.name="GET_DESCRIPTION_ERROR",this.message=e};return e.prototype=new Error,e}(),MediaPermissionError:function(){var e=function(e){this.code=4,this.name="MEDIA_PERMISSION_ERROR",this.message=e};return e.prototype=new Error,e}()}},function(e,t,n){"use strict";var l=500;e.exports=function(e){var t={T1:l,T2:4e3,T4:5e3,TIMER_B:32e3,TIMER_D:0,TIMER_F:32e3,TIMER_H:32e3,TIMER_I:0,TIMER_J:0,TIMER_K:0,TIMER_L:32e3,TIMER_M:32e3,TIMER_N:32e3,PROVISIONAL_RESPONSE_INTERVAL:6e4};return["setTimeout","clearTimeout","setInterval","clearInterval"].forEach(function(n){t[n]=function(){return e[n].apply(e,arguments)}}),t}},function(e,t,n){"use strict";e.exports=function(e){var t;function n(t,n,l,r){var i,s,o,a,u=n.indexOf(":",l),c=n.substring(l,u).trim(),d=n.substring(u+1,r).trim();switch(c.toLowerCase()){case"via":case"v":t.addHeader("via",d),1===t.getHeaders("via").length?(a=t.parseHeader("Via"))&&(t.via=a,t.via_branch=a.branch):a=0;break;case"from":case"f":t.setHeader("from",d),(a=t.parseHeader("from"))&&(t.from=a,t.from_tag=a.getParam("tag"));break;case"to":case"t":t.setHeader("to",d),(a=t.parseHeader("to"))&&(t.to=a,t.to_tag=a.getParam("tag"));break;case"record-route":if(-1===(a=e.Grammar.parse(d,"Record_Route"))){a=void 0;break}for(o=a.length,s=0;s<o;s++)i=a[s],t.addHeader("record-route",d.substring(i.position,i.offset)),t.headers["Record-Route"][t.getHeaders("record-route").length-1].parsed=i.parsed;break;case"call-id":case"i":t.setHeader("call-id",d),(a=t.parseHeader("call-id"))&&(t.call_id=d);break;case"contact":case"m":if(-1===(a=e.Grammar.parse(d,"Contact"))){a=void 0;break}for(o=a.length,s=0;s<o;s++)i=a[s],t.addHeader("contact",d.substring(i.position,i.offset)),t.headers.Contact[t.getHeaders("contact").length-1].parsed=i.parsed;break;case"content-length":case"l":t.setHeader("content-length",d),a=t.parseHeader("content-length");break;case"content-type":case"c":t.setHeader("content-type",d),a=t.parseHeader("content-type");break;case"cseq":t.setHeader("cseq",d),(a=t.parseHeader("cseq"))&&(t.cseq=a.value),t instanceof e.IncomingResponse&&(t.method=a.method);break;case"max-forwards":t.setHeader("max-forwards",d),a=t.parseHeader("max-forwards");break;case"www-authenticate":t.setHeader("www-authenticate",d),a=t.parseHeader("www-authenticate");break;case"proxy-authenticate":t.setHeader("proxy-authenticate",d),a=t.parseHeader("proxy-authenticate");break;case"refer-to":case"r":t.setHeader("refer-to",d),(a=t.parseHeader("refer-to"))&&(t.refer_to=a);break;default:t.setHeader(c,d),a=0}return void 0!==a||{error:'error parsing header "'+c+'"'}}(t={}).parseMessageExt=function(t,l){var r,i,s=0,o=l.getLogger("sip.parser"),a=null;if(t.headers){if(-1!==(i=e.Grammar.parse(t.headers[0],"Request_Response"))){i.status_code?((r=new e.IncomingResponse(l)).status_code=i.status_code,r.reason_phrase=i.reason_phrase):((r=new e.IncomingRequest(l)).method=i.method,r.ruri=i.uri),r.data=t.data;for(var u=1;u<t.headers.length;u++)if(!0!==(i=n(r,t.headers[u],0,t.headers[u].length)))return void o.error(i.error);return r.hasHeader("content-length")&&(s=parseInt(r.getHeader("content-length"))),r.hasHeader("content-type")&&(a=r.getHeader("content-type")),r.body=t.body,s&&("string"==typeof t.body?r.body=t.body.substring(0,s):r.body=t.body.slice(0,s)),!t.body||a&&"B"===a[0]&&"/"===a[1]||"string"==typeof t.body||(r.body=e.Utils.utf8ArrayToStringWithFallback(r.body)),r}o.warn('error parsing first line of SIP message: "'+t.headers[0]+'"')}else o.warn("no headers (CRLF) found, not a SIP message, discarded")},t.parseMessage=function(e,n){var l=t.preprocessData(e);return t.parseMessageExt(l,n)},t.preprocessData=function(t){if(!(t.length<2)){var n=[],l=0,r=function(e,n){this.data=t,this.headers=e,this.body=n,this.toString=function(){var e,t=this.headers.join("\r\n");return"string"==typeof this.body?(e=this.body&&this.body.length,t+(t.length?e?"\r\n\r\n":"\r\n":"")+(e?this.body:"")):(e=this.body&&this.body.byteLength,t+(t.length?e?"\r\n\r\n":"\r\n":"")+(e?"[binary]:\r\n"+String.fromCharCode.apply(null,this.body):""))}};if("string"==typeof t){for(var i=0;i<t.length-1;i++)if("\r"===t[i]&&"\n"===t[i+1]){if(i-l>1)n.push(t.substring(l,i));else if(n.length)return new r(n,t.substring(i+2));l=i+2,i++}return new r(n,n.length?void 0:t)}return function(t){Uint8Array.prototype.slice||Object.defineProperty(Uint8Array.prototype,"slice",{value:Array.prototype.slice});for(var i=0;i<t.length-1;i++)if(13===t[i]&&10===t[i+1]){if(i-l>1)n.push(e.Utils.utf8ArrayToStringWithFallback(t.slice(l,i)));else if(n.length)return new r(n,new Uint8Array(t.slice(i+2)));l=i+2,i++}return new r(n,n.length?void 0:t)}(new Uint8Array(t))}},e.Parser=t}},function(e,t,n){"use strict";e.exports=function(e){var t,n,l,r;function i(t){var n=t.ua.configuration.hackAllowUnregisteredOptionTags,l=[],r={};return t.method===e.C.REGISTER?l.push("path","gruu"):t.method===e.C.INVITE&&(t.ua.contact.pub_gruu||t.ua.contact.temp_gruu)&&l.push("gruu"),t.ua.configuration.rel100===e.C.supported.SUPPORTED&&l.push("100rel"),t.ua.configuration.replaces===e.C.supported.SUPPORTED&&l.push("replaces"),l.push("outbound"),"Supported: "+(l=(l=l.concat(t.ua.configuration.extraSupported)).filter(function(t){var l=e.C.OPTION_TAGS[t],i=!r[t];return r[t]=!0,(l||n)&&i})).join(", ")+"\r\n"}(t=function(t,n,l,r,i,s){var o,a,u,c,d,p;if(r=r||{},!t||!n||!l)return null;this.logger=l.getLogger("sip.sipmessage"),this.ua=l,this.headers={},this.method=t,this.ruri=n,this.body=s,this.uriExtraAttributes=(r.uriExtraAttributes||[]).slice(),this.extraHeaders=(i||[]).slice(),this.statusCode=r.status_code,this.reasonPhrase=r.reason_phrase,r.route_set?this.setHeader("route",r.route_set):l.configuration.usePreloadedRoute&&this.setHeader("route",l.transport.server.sip_uri),this.setHeader("via",""),this.setHeader("max-forwards",e.UA.C.MAX_FORWARDS),d=r.to_uri||n,o=r.to_displayName||0===r.to_displayName?'"'+r.to_displayName+'" ':"",o+="<"+(d&&d.toRaw?d.toRaw():d)+">",o+=r.toAttributes?";"+r.toAttributes:"",o+=r.to_tag?";tag="+r.to_tag:"",this.to=new e.NameAddrHeader.parse(o),this.setHeader("to",o),p=r.from_uri||l.configuration.uri,a=r.from_displayName||0===r.from_displayName?'"'+r.from_displayName+'" ':l.configuration.displayName?'"'+l.configuration.displayName+'" ':"",a+="<"+(p&&p.toRaw?p.toRaw():p)+">;tag=",a+=r.from_tag||e.Utils.newTag(),this.from=new e.NameAddrHeader.parse(a),this.setHeader("from",a),u=r.call_id||l.configuration.sipjsId+e.Utils.createRandomToken(15),this.call_id=u,this.setHeader("call-id",u),c=r.cseq||Math.floor(1e4*Math.random()),this.cseq=c,this.setHeader("cseq",c+" "+t)}).prototype={setHeader:function(t,n){null===n?delete this.headers[e.Utils.headerize(t)]:this.headers[e.Utils.headerize(t)]=n instanceof Array?n:[n]},getHeader:function(t){var n,l,r=this.extraHeaders.length,i=this.headers[e.Utils.headerize(t)];if(i){if(i[0])return i[0]}else for(n=new RegExp("^\\s*"+t+"\\s*:","i"),l=0;l<r;l++)if(i=this.extraHeaders[l],n.test(i))return i.substring(i.indexOf(":")+1).trim()},getHeaders:function(t){var n,l,r,i=this.headers[e.Utils.headerize(t)],s=[];if(i){for(l=i.length,n=0;n<l;n++)s.push(i[n]);return s}for(l=this.extraHeaders.length,r=new RegExp("^\\s*"+t+"\\s*:","i"),n=0;n<l;n++)i=this.extraHeaders[n],r.test(i)&&s.push(i.substring(i.indexOf(":")+1).trim());return s},hasHeader:function(t){var n,l,r=this.extraHeaders.length;if(this.headers[e.Utils.headerize(t)])return!0;for(n=new RegExp("^\\s*"+t+"\\s*:","i"),l=0;l<r;l++)if(n.test(this.extraHeaders[l]))return!0;return!1},toString:function(){var t,n,l,r="";if(r+=this.method+" "+(this.ruri.toRaw?this.ruri.toRaw():this.ruri),this.uriExtraAttributes&&this.uriExtraAttributes.length)for(var s=0;s<this.uriExtraAttributes.length;s++)r+=";"+this.uriExtraAttributes[s];for(t in r+=" SIP/2.0\r\n",this.headers)for(n=this.headers[t].length,l=0;l<n;l++)r+=t+": "+this.headers[t][l]+"\r\n";for(n=this.extraHeaders.length,l=0;l<n;l++)r+=this.extraHeaders[l].trim()+"\r\n";return r+=i(this),r+="User-Agent: "+this.ua.configuration.userAgentString+"\r\n",this.body?"string"==typeof this.body?(r+="Content-Length: "+(n=e.Utils.str_utf8_length(this.body))+"\r\n\r\n",r+=this.body):this.body.body&&this.body.contentType?(n=e.Utils.str_utf8_length(this.body.body),r+="Content-Type: "+this.body.contentType+"\r\n",r+="Content-Length: "+n+"\r\n\r\n",r+=this.body.body):r+="Content-Length: 0\r\n\r\n":r+="Content-Length: 0\r\n\r\n",r},isBinary:function(){return void 0!==this.body&&null!==this.body&&("string"!=typeof this.body&&!(!this.body.body||!this.body.contentType||"B"!==this.body.contentType[0]||"/"!==this.body.contentType[1]))},toBinary:function(){var t,n,l,r="";if(!this.isBinary())throw new e.Exceptions.NotSupportedError("Non-BSIP message not supported");if(r+=this.method+" "+(this.ruri.toRaw?this.ruri.toRaw():this.ruri),this.uriExtraAttributes&&this.uriExtraAttributes.length)for(var s=0;s<this.uriExtraAttributes.length;s++)r+=";"+this.uriExtraAttributes[s];for(t in r+=" SIP/2.0\r\n",this.headers)for(n=this.headers[t].length,l=0;l<n;l++)r+=t+": "+this.headers[t][l]+"\r\n";for(n=this.extraHeaders.length,l=0;l<n;l++)r+=this.extraHeaders[l].trim()+"\r\n";r+=i(this),r+="User-Agent: "+this.ua.configuration.userAgentString+"\r\n",this.body?(n=this.body.body.byteLength,r+="Content-Type: "+this.body.contentType+"\r\n",r+="Content-Length: "+n+"\r\n\r\n"):(n=0,r+="Content-Length: 0\r\n\r\n");var o=e.Utils.string2Utf8Array(r);if(n){var a=new Uint8Array(o.byteLength+n);return a.set(o,0),a.set(this.body.body,o.byteLength),a}return o}},(n=function(){this.data=null,this.headers=null,this.method=null,this.via=null,this.via_branch=null,this.call_id=null,this.cseq=null,this.from=null,this.from_tag=null,this.to=null,this.to_tag=null,this.body=null}).prototype={addHeader:function(t,n){var l={raw:n};t=e.Utils.headerize(t),this.headers[t]?this.headers[t].push(l):this.headers[t]=[l]},getHeader:function(t){var n=this.headers[e.Utils.headerize(t)];if(n)return n[0]?n[0].raw:void 0},getHeaders:function(t){var n,l,r=this.headers[e.Utils.headerize(t)],i=[];if(!r)return[];for(l=r.length,n=0;n<l;n++)i.push(r[n].raw);return i},hasHeader:function(t){return!!this.headers[e.Utils.headerize(t)]},parseHeader:function(t,n){var l,r,i;if(t=e.Utils.compact2RegularHeader(t),t=e.Utils.headerize(t),n=n||0,this.headers[t]){if(!(n>=this.headers[t].length))return r=(l=this.headers[t][n]).raw,l.parsed?l.parsed:-1===(i=e.Grammar.parse(r,t.replace(/-/g,"_")))?(this.headers[t].splice(n,1),void this.logger.warn('error parsing "'+t+'" header field with value "'+r+'"')):(l.parsed=i,i);this.logger.log('not so many "'+t+'" headers present')}else this.logger.log('header "'+t+'" not present')},s:function(e,t){return this.parseHeader(e,t)},setHeader:function(t,n){var l={raw:n};t=e.Utils.compact2RegularHeader(t),t=e.Utils.headerize(t),null===n?delete this.headers[t]:this.headers[t]=[l]},toString:function(){return this.data}},((l=function(e){this.logger=e.getLogger("sip.sipmessage"),this.ua=e,this.headers={},this.ruri=null,this.transport=null,this.server_transaction=null}).prototype=new n).reply=function(t,n,l,r,s,o){var a,u,c,d,p,g=this.getHeader("To"),h=0,f=0;if(!this.server_transaction)return this.logger.log("Reply without transaction, sending only status"),this.reply_sl(t,n);if(p=e.Utils.buildStatusLine(t,n),l=(l||[]).slice(),this.method===e.C.INVITE&&t>100&&t<=200)for(c=(a=this.getHeaders("record-route")).length;h<c;h++)p+="Record-Route: "+a[h]+"\r\n";for(c=(u=this.getHeaders("via")).length;f<c;f++)p+="Via: "+u[f]+"\r\n";for(!this.to_tag&&t>100?g+=";tag="+e.Utils.newTag():this.to_tag&&!this.s("to").hasParam("tag")&&(g+=";tag="+this.to_tag),p+="To: "+g+"\r\n",p+="From: "+this.getHeader("From")+"\r\n",p+="Call-ID: "+this.call_id+"\r\n",p+="CSeq: "+this.cseq+" "+this.method+"\r\n",c=l.length,d=0;d<c;d++)p+=l[d].trim()+"\r\n";return p+=i(this),p+="User-Agent: "+this.ua.configuration.userAgentString+"\r\n",r?"string"==typeof r?(p+="Content-Type: application/sdp\r\n",p+="Content-Length: "+(c=e.Utils.str_utf8_length(r))+"\r\n\r\n",p+=r):r.body&&r.contentType?(c=e.Utils.str_utf8_length(r.body),p+="Content-Type: "+r.contentType+"\r\n",p+="Content-Length: "+c+"\r\n\r\n",p+=r.body):p+="Content-Length: 0\r\n\r\n":p+="Content-Length: 0\r\n\r\n",this.server_transaction.receiveResponse(t,p).then(s,o),p},l.prototype.reply_sl=function(t,n){var l,r,i=0,s=this.getHeaders("via"),o=s.length;for(r=e.Utils.buildStatusLine(t,n);i<o;i++)r+="Via: "+s[i]+"\r\n";l=this.getHeader("To"),!this.to_tag&&t>100?l+=";tag="+e.Utils.newTag():this.to_tag&&!this.s("to").hasParam("tag")&&(l+=";tag="+this.to_tag),r+="To: "+l+"\r\n",r+="From: "+this.getHeader("From")+"\r\n",r+="Call-ID: "+this.call_id+"\r\n",r+="CSeq: "+this.cseq+" "+this.method+"\r\n",r+="User-Agent: "+this.ua.configuration.userAgentString+"\r\n",r+="Content-Length: 0\r\n\r\n",this.transport.send(r)},(r=function(e){this.logger=e.getLogger("sip.sipmessage"),this.headers={},this.status_code=null,this.reason_phrase=null}).prototype=new n,e.OutgoingRequest=t,e.IncomingRequest=l,e.IncomingResponse=r}},function(e,t,n){"use strict";e.exports=function(e){var t;(t=function(t,n,l,r,i,s){var o,a,u,c;for(o in t=t||e.C.SIP,this.parameters={},this.headers={},i)this.setParam(o,i[o]);for(a in s)this.setHeader(a,s[a]);u={scheme:t,user:n,host:l,port:r},c={scheme:t.toLowerCase(),user:n,host:l?l.toLowerCase():void 0,port:r},Object.defineProperties(this,{_normal:{get:function(){return c}},_raw:{get:function(){return u}},scheme:{get:function(){return c.scheme},set:function(e){u.scheme=e,c.scheme=e.toLowerCase()}},user:{get:function(){return c.user},set:function(e){c.user=u.user=e}},host:{get:function(){return c.host},set:function(e){u.host=e,c.host=e.toLowerCase()}},aor:{get:function(){return c.user+"@"+c.host}},port:{get:function(){return c.port},set:function(e){c.port=u.port=0===e?e:parseInt(e,10)||null}}})}).prototype={setParam:function(e,t){e&&(this.parameters[e.toLowerCase()]=void 0===t||null===t?null:t.toString())},getParam:function(e){if(e)return this.parameters[e.toLowerCase()]},hasParam:function(e){if(e)return!!this.parameters.hasOwnProperty(e.toLowerCase())},deleteParam:function(e){var t;if(e=e.toLowerCase(),this.parameters.hasOwnProperty(e))return t=this.parameters[e],delete this.parameters[e],t},clearParams:function(){this.parameters={}},setHeader:function(t,n){this.headers[e.Utils.headerize(t)]=n instanceof Array?n:[n]},getHeader:function(t){if(t)return this.headers[e.Utils.headerize(t)]},hasHeader:function(t){if(t)return!!this.headers.hasOwnProperty(e.Utils.headerize(t))},deleteHeader:function(t){var n;if(t=e.Utils.headerize(t),this.headers.hasOwnProperty(t))return n=this.headers[t],delete this.headers[t],n},clearHeaders:function(){this.headers={}},clone:function(){return new t(this._raw.scheme,this._raw.user,this._raw.host,this._raw.port,JSON.parse(JSON.stringify(this.parameters)),JSON.parse(JSON.stringify(this.headers)))},toRaw:function(){return this._toString(this._raw)},toString:function(){return this._toString(this._normal)},_toString:function(t){var n,l,r,i,s=[];for(l in i=t.scheme+":",t.scheme.toLowerCase().match("^(sips?|mbx|svc|pin)$")||(i+="//"),t.user&&(i+=e.Utils.escapeUser(t.user)),t.host&&(i+=(t.user?"@":"")+t.host),(t.port||0===t.port)&&(i+=":"+t.port),this.parameters)i+=";"+l,null!==this.parameters[l]&&(i+="="+this.parameters[l]);for(n in this.headers)for(r in this.headers[n])s.push(n+"="+this.headers[n][r]);return s.length>0&&(i+="?"+s.join("&")),i}},t.parse=function(t){return-1!==(t=e.Grammar.parse(t,"SIP_URI"))?t:void 0},e.URI=t}},function(e,t,n){"use strict";e.exports=function(e){var t;(t=function(t,n,l){var r;if(!(t&&t instanceof e.URI))throw new TypeError('missing or invalid "uri" parameter');for(r in this.uri=t,this.parameters={},l)this.setParam(r,l[r]);Object.defineProperties(this,{friendlyName:{get:function(){return this.displayName||t.aor}},displayName:{get:function(){return n},set:function(e){n=0===e?"0":e}}})}).prototype={setParam:function(e,t){e&&(this.parameters[e.toLowerCase()]=void 0===t||null===t?null:t.toString())},getParam:e.URI.prototype.getParam,hasParam:e.URI.prototype.hasParam,deleteParam:e.URI.prototype.deleteParam,clearParams:e.URI.prototype.clearParams,clone:function(){return new t(this.uri.clone(),this.displayName,JSON.parse(JSON.stringify(this.parameters)))},toString:function(){var e,t;for(t in e=this.displayName||0===this.displayName?'"'+this.displayName+'" ':"",e+="<"+this.uri.toString()+">",this.parameters)e+=";"+t,null!==this.parameters[t]&&(e+="="+this.parameters[t]);return e}},t.parse=function(t){return-1!==(t=e.Grammar.parse(t,"Name_Addr_Header"))?t:void 0},e.NameAddrHeader=t}},function(e,t,n){"use strict";e.exports=function(e){var t={STATUS_TRYING:1,STATUS_PROCEEDING:2,STATUS_CALLING:3,STATUS_ACCEPTED:4,STATUS_COMPLETED:5,STATUS_TERMINATED:6,STATUS_CONFIRMED:7,NON_INVITE_CLIENT:"nict",NON_INVITE_SERVER:"nist",INVITE_CLIENT:"ict",INVITE_SERVER:"ist"};function n(e,t,n){var l;return l="SIP/2.0/"+(e.ua.configuration.hackViaTcp?"TCP":t.server.scheme),l+=" "+e.ua.configuration.viaHost+";branch="+n,e.ua.configuration.forceRport&&(l+=";rport"),l}var l=function(e,l,r){var i;this.type=t.NON_INVITE_CLIENT,this.transport=r,this.id="z9hG4bK"+Math.floor(1e7*Math.random()),this.request_sender=e,this.request=l,this.logger=e.ua.getLogger("sip.transaction.nict",this.id),i=n(e,r,this.id),this.request.setHeader("via",i),this.request_sender.ua.newTransaction(this)};(l.prototype=Object.create(e.EventEmitter.prototype)).stateChanged=function(e){this.state=e,this.emit("stateChanged")},l.prototype.send=function(){this.stateChanged(t.STATUS_TRYING),this.F=e.Timers.setTimeout(this.timer_F.bind(this),e.Timers.TIMER_F),this.transport.send(this.request)||this.onTransportError()},l.prototype.onTransportError=function(){this.logger.log("transport error occurred, deleting non-INVITE client transaction "+this.id),e.Timers.clearTimeout(this.F),e.Timers.clearTimeout(this.K),this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this),this.request_sender.onTransportError()},l.prototype.timer_F=function(){this.logger.log("Timer F expired for non-INVITE client transaction "+this.id),this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this),this.request_sender.onRequestTimeout()},l.prototype.timer_K=function(){this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this)},l.prototype.receiveResponse=function(n){var l=n.status_code;if(l<200)switch(this.state){case t.STATUS_TRYING:case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_PROCEEDING),this.request_sender.receiveResponse(n)}else switch(this.state){case t.STATUS_TRYING:case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_COMPLETED),e.Timers.clearTimeout(this.F),408===l?this.request_sender.onRequestTimeout():this.request_sender.receiveResponse(n),this.K=e.Timers.setTimeout(this.timer_K.bind(this),e.Timers.TIMER_K)}};var r=function(e,l,r){var i,s=this;this.type=t.INVITE_CLIENT,this.transport=r,this.id="z9hG4bK"+Math.floor(1e7*Math.random()),this.request_sender=e,this.request=l,this.logger=e.ua.getLogger("sip.transaction.ict",this.id),i=n(e,r,this.id),this.request.setHeader("via",i),this.request_sender.ua.newTransaction(this),this.request.cancel=function(e,t){for(var n=(t=(t||[]).slice()).length,l=null,r=0;r<n;r++)l=(l||"")+t[r].trim()+"\r\n";s.cancel_request(s,e,l)}};(r.prototype=Object.create(e.EventEmitter.prototype)).stateChanged=function(e){this.state=e,this.emit("stateChanged")},r.prototype.send=function(){this.stateChanged(t.STATUS_CALLING),this.B=e.Timers.setTimeout(this.timer_B.bind(this),e.Timers.TIMER_B),this.transport.send(this.request)||this.onTransportError()},r.prototype.onTransportError=function(){this.logger.log("transport error occurred, deleting INVITE client transaction "+this.id),e.Timers.clearTimeout(this.B),e.Timers.clearTimeout(this.D),e.Timers.clearTimeout(this.M),this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this),this.state!==t.STATUS_ACCEPTED&&this.request_sender.onTransportError()},r.prototype.timer_M=function(){this.logger.log("Timer M expired for INVITE client transaction "+this.id),this.state===t.STATUS_ACCEPTED&&(e.Timers.clearTimeout(this.B),this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this))},r.prototype.timer_B=function(){this.logger.log("Timer B expired for INVITE client transaction "+this.id),this.state===t.STATUS_CALLING&&(this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this),this.request_sender.onRequestTimeout())},r.prototype.timer_D=function(){this.logger.log("Timer D expired for INVITE client transaction "+this.id),e.Timers.clearTimeout(this.B),this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this)},r.prototype.sendACK=function(t){this.ack="ACK "+this.request.ruri+" SIP/2.0\r\n",this.ack+="Via: "+this.request.headers.Via.toString()+"\r\n",this.request.headers.Route&&(this.ack+="Route: "+this.request.headers.Route.toString()+"\r\n"),this.ack+="To: "+t.getHeader("to")+"\r\n",this.ack+="From: "+this.request.headers.From.toString()+"\r\n",this.ack+="Call-ID: "+this.request.headers["Call-ID"].toString()+"\r\n",this.ack+="Content-Length: 0\r\n",this.ack+="CSeq: "+this.request.headers.CSeq.toString().split(" ")[0],this.ack+=" ACK\r\n\r\n",this.D=e.Timers.setTimeout(this.timer_D.bind(this),e.Timers.TIMER_D),this.transport.send(this.ack)},r.prototype.cancel_request=function(n,l,r){var i=n.request;this.cancel=e.C.CANCEL+" "+i.ruri+" SIP/2.0\r\n",this.cancel+="Via: "+i.headers.Via.toString()+"\r\n",this.request.headers.Route&&(this.cancel+="Route: "+i.headers.Route.toString()+"\r\n"),this.cancel+="To: "+i.headers.To.toString()+"\r\n",this.cancel+="From: "+i.headers.From.toString()+"\r\n",this.cancel+="Call-ID: "+i.headers["Call-ID"].toString()+"\r\n",this.cancel+="CSeq: "+i.headers.CSeq.toString().split(" ")[0]+" CANCEL\r\n",l&&(this.cancel+="Reason: "+l+"\r\n"),r&&(this.cancel+=r),this.cancel+="Content-Length: 0\r\n\r\n",this.state===t.STATUS_PROCEEDING&&this.transport.send(this.cancel)},r.prototype.receiveResponse=function(n){var l=n.status_code;if(l>=100&&l<=199)switch(this.state){case t.STATUS_CALLING:this.stateChanged(t.STATUS_PROCEEDING),this.request_sender.receiveResponse(n),this.cancel&&this.transport.send(this.cancel);break;case t.STATUS_PROCEEDING:this.request_sender.receiveResponse(n)}else if(l>=200&&l<=299)switch(this.state){case t.STATUS_CALLING:case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_ACCEPTED),this.M=e.Timers.setTimeout(this.timer_M.bind(this),e.Timers.TIMER_M),this.request_sender.receiveResponse(n);break;case t.STATUS_ACCEPTED:this.request_sender.receiveResponse(n)}else if(l>=300&&l<=699)switch(this.state){case t.STATUS_CALLING:case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_COMPLETED),this.sendACK(n),this.request_sender.receiveResponse(n);break;case t.STATUS_COMPLETED:this.sendACK(n)}};var i=function(e,t,l){var r;this.transport=l,this.id="z9hG4bK"+Math.floor(1e7*Math.random()),this.request_sender=e,this.request=t,this.logger=e.ua.getLogger("sip.transaction.nict",this.id),r=n(e,l,this.id),this.request.setHeader("via",r)};(i.prototype=Object.create(e.EventEmitter.prototype)).send=function(){this.transport.send(this.request)||this.onTransportError()},i.prototype.onTransportError=function(){this.logger.log("transport error occurred, for an ACK client transaction "+this.id),this.request_sender.onTransportError()};var s=function(e,n){this.type=t.NON_INVITE_SERVER,this.id=e.via_branch,this.request=e,this.transport=e.transport,this.ua=n,this.last_response="",e.server_transaction=this,this.logger=n.getLogger("sip.transaction.nist",this.id),this.state=t.STATUS_TRYING,n.newTransaction(this)};(s.prototype=Object.create(e.EventEmitter.prototype)).stateChanged=function(e){this.state=e,this.emit("stateChanged")},s.prototype.timer_J=function(){this.logger.log("Timer J expired for non-INVITE server transaction "+this.id),this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this)},s.prototype.onTransportError=function(){this.transportError||(this.transportError=!0,this.logger.log("transport error occurred, deleting non-INVITE server transaction "+this.id),e.Timers.clearTimeout(this.J),this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this))},s.prototype.receiveResponse=function(n,l){var r=e.Utils.defer();if(100===n)switch(this.state){case t.STATUS_TRYING:this.stateChanged(t.STATUS_PROCEEDING),this.transport.send(l)||this.onTransportError();break;case t.STATUS_PROCEEDING:this.last_response=l,this.transport.send(l)?r.resolve():(this.onTransportError(),r.reject())}else if(n>=200&&n<=699)switch(this.state){case t.STATUS_TRYING:case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_COMPLETED),this.last_response=l,this.J=e.Timers.setTimeout(this.timer_J.bind(this),e.Timers.TIMER_J),this.transport.send(l)?r.resolve():(this.onTransportError(),r.reject())}return r.promise};var o=function(e,n){this.type=t.INVITE_SERVER,this.id=e.via_branch,this.request=e,this.transport=e.transport,this.ua=n,this.last_response="",e.server_transaction=this,this.logger=n.getLogger("sip.transaction.ist",this.id),this.state=t.STATUS_PROCEEDING,n.newTransaction(this),this.resendProvisionalTimer=null,e.reply(100)};(o.prototype=Object.create(e.EventEmitter.prototype)).stateChanged=function(e){this.state=e,this.emit("stateChanged")},o.prototype.timer_H=function(){this.logger.log("Timer H expired for INVITE server transaction "+this.id),this.state===t.STATUS_COMPLETED&&this.logger.warn("transactions","ACK for INVITE server transaction was never received, call will be terminated"),this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this)},o.prototype.timer_I=function(){this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this)},o.prototype.timer_L=function(){this.logger.log("Timer L expired for INVITE server transaction "+this.id),this.state===t.STATUS_ACCEPTED&&(this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this))},o.prototype.onTransportError=function(){this.transportError||(this.transportError=!0,this.logger.log("transport error occurred, deleting INVITE server transaction "+this.id),null!==this.resendProvisionalTimer&&(e.Timers.clearInterval(this.resendProvisionalTimer),this.resendProvisionalTimer=null),e.Timers.clearTimeout(this.L),e.Timers.clearTimeout(this.H),e.Timers.clearTimeout(this.I),this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this))},o.prototype.resend_provisional=function(){this.transport.send(this.last_response)||this.onTransportError()},o.prototype.receiveResponse=function(n,l){var r=this,i=e.Utils.defer();if(n>=100&&n<=199)switch(this.state){case t.STATUS_PROCEEDING:this.transport.send(l)||this.onTransportError(),this.last_response=l}if(n>100&&n<=199&&this.state===t.STATUS_PROCEEDING)null===this.resendProvisionalTimer&&(this.resendProvisionalTimer=e.Timers.setInterval(r.resend_provisional.bind(r),e.Timers.PROVISIONAL_RESPONSE_INTERVAL));else if(n>=200&&n<=299)switch(this.state){case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_ACCEPTED),this.last_response=l,this.L=e.Timers.setTimeout(r.timer_L.bind(r),e.Timers.TIMER_L),null!==this.resendProvisionalTimer&&(e.Timers.clearInterval(this.resendProvisionalTimer),this.resendProvisionalTimer=null);case t.STATUS_ACCEPTED:this.transport.send(l)?i.resolve():(this.onTransportError(),i.reject())}else if(n>=300&&n<=699)switch(this.state){case t.STATUS_PROCEEDING:null!==this.resendProvisionalTimer&&(e.Timers.clearInterval(this.resendProvisionalTimer),this.resendProvisionalTimer=null),this.transport.send(l)?(this.stateChanged(t.STATUS_COMPLETED),this.H=e.Timers.setTimeout(r.timer_H.bind(r),e.Timers.TIMER_H),i.resolve()):(this.onTransportError(),i.reject())}return i.promise};e.Transactions={C:t,checkTransaction:function(n,l){var r;switch(l.method){case e.C.INVITE:if(r=n.transactions.ist[l.via_branch]){switch(r.state){case t.STATUS_PROCEEDING:r.transport.send(r.last_response)}return!0}break;case e.C.ACK:if(!(r=n.transactions.ist[l.via_branch]))return!1;if(r.state===t.STATUS_ACCEPTED)return!1;if(r.state===t.STATUS_COMPLETED)return r.stateChanged(t.STATUS_CONFIRMED),r.I=e.Timers.setTimeout(r.timer_I.bind(r),e.Timers.TIMER_I),!0;break;case e.C.CANCEL:return(r=n.transactions.ist[l.via_branch])?(l.reply_sl(200),r.state!==t.STATUS_PROCEEDING):(l.reply_sl(481),!0);default:if(r=n.transactions.nist[l.via_branch]){switch(r.state){case t.STATUS_TRYING:break;case t.STATUS_PROCEEDING:case t.STATUS_COMPLETED:r.transport.send(r.last_response)}return!0}}},NonInviteClientTransaction:l,InviteClientTransaction:r,AckClientTransaction:i,NonInviteServerTransaction:s,InviteServerTransaction:o}}},function(e,t,n){"use strict";e.exports=function(e){var t,l=n(88)(e),r={STATUS_EARLY:1,STATUS_CONFIRMED:2};(t=function(t,n,l,i){var s;if(this.uac_pending_reply=!1,this.uas_pending_reply=!1,!n.hasHeader("contact"))return{error:"unable to create a Dialog without Contact header field"};i=n instanceof e.IncomingResponse?n.status_code<200?r.STATUS_EARLY:r.STATUS_CONFIRMED:i||r.STATUS_CONFIRMED,s=n.parseHeader("contact"),"UAS"===l?(this.id={call_id:n.call_id,local_tag:n.to_tag,remote_tag:n.from_tag,toString:function(){return this.call_id+this.local_tag+this.remote_tag}},this.state=i,this.remote_seqnum=n.cseq,this.local_uri=n.parseHeader("to").uri,this.remote_uri=n.parseHeader("from").uri,this.remote_target=s.uri,this.route_set=n.getHeaders("record-route"),this.invite_seqnum=n.cseq,this.local_seqnum=n.cseq):"UAC"===l&&(this.id={call_id:n.call_id,local_tag:n.from_tag,remote_tag:n.to_tag,toString:function(){return this.call_id+this.local_tag+this.remote_tag}},this.state=i,this.invite_seqnum=n.cseq,this.local_seqnum=n.cseq,this.local_uri=n.parseHeader("from").uri,this.pracked=[],this.remote_uri=n.parseHeader("to").uri,this.remote_target=s.uri,this.route_set=n.getHeaders("record-route").reverse(),this.state!==r.STATUS_EARLY||t.hasOffer||(this.mediaHandler=t.mediaHandlerFactory(t))),this.logger=t.ua.getLogger("sip.dialog",this.id.toString()),this.owner=t,t.ua.dialogs[this.id.toString()]=this,this.logger.log("new "+l+" dialog created with status "+(this.state===r.STATUS_EARLY?"EARLY":"CONFIRMED")),t.emit("dialog",this)}).prototype={update:function(e,t){this.state=r.STATUS_CONFIRMED,this.logger.log("dialog "+this.id.toString()+"  changed to CONFIRMED state"),"UAC"===t&&(this.route_set=e.getHeaders("record-route").reverse())},terminate:function(){this.logger.log("dialog "+this.id.toString()+" deleted"),this.mediaHandler&&this.state!==r.STATUS_CONFIRMED&&this.mediaHandler.peerConnection.close(),delete this.owner.ua.dialogs[this.id.toString()]},createRequest:function(t,n,l){var r,i;return n=(n||[]).slice(),this.local_seqnum||(this.local_seqnum=Math.floor(1e4*Math.random())),r=t===e.C.CANCEL||t===e.C.ACK?this.invite_seqnum:this.local_seqnum+=1,(i=new e.OutgoingRequest(t,this.remote_target,this.owner.ua,{cseq:r,call_id:this.id.call_id,from_uri:this.local_uri,from_tag:this.id.local_tag,to_uri:this.remote_uri,to_tag:this.id.remote_tag,route_set:this.route_set},n,l)).dialog=this,i},checkInDialogRequest:function(t){var n=this;if(this.remote_seqnum){if(t.cseq<this.remote_seqnum)return t.method!==e.C.ACK&&t.reply(500),t.cseq===this.invite_seqnum;t.cseq>this.remote_seqnum&&(this.remote_seqnum=t.cseq)}else this.remote_seqnum=t.cseq;switch(t.method){case e.C.INVITE:if(!0===this.uac_pending_reply)t.reply(491);else{if(!0===this.uas_pending_reply){var l=1+(10*Math.random()|0);return t.reply(500,null,["Retry-After:"+l]),!1}this.uas_pending_reply=!0,t.server_transaction.on("stateChanged",function t(){this.state!==e.Transactions.C.STATUS_ACCEPTED&&this.state!==e.Transactions.C.STATUS_COMPLETED&&this.state!==e.Transactions.C.STATUS_TERMINATED||(this.removeListener("stateChanged",t),n.uas_pending_reply=!1,!1===n.uac_pending_reply&&n.owner.onReadyToReinvite())})}t.hasHeader("contact")&&t.server_transaction.on("stateChanged",function(){this.state===e.Transactions.C.STATUS_ACCEPTED&&(n.remote_target=t.parseHeader("contact").uri)});break;case e.C.NOTIFY:t.hasHeader("contact")&&t.server_transaction.on("stateChanged",function(){this.state===e.Transactions.C.STATUS_COMPLETED&&(n.remote_target=t.parseHeader("contact").uri)})}return!0},sendRequest:function(e,t,n){var r=((n=n||{}).extraHeaders||[]).slice(),i=null;n.body&&(n.body.body?i=n.body:((i={}).body=n.body,n.contentType&&(i.contentType=n.contentType)));var s=this.createRequest(t,r,i);return new l(this,e,s).send(),s},receiveRequest:function(e){this.checkInDialogRequest(e)&&this.owner.receiveRequest(e)}},t.C=r,e.Dialog=t}},function(e,t,n){"use strict";e.exports=function(e){var t;return(t=function(e,t,n){this.dialog=e,this.applicant=t,this.request=n,this.reattempt=!1,this.reattemptTimer=null}).prototype={send:function(){var t=this,n=new e.RequestSender(this,this.dialog.owner.ua);n.send(),this.request.method===e.C.INVITE&&n.clientTransaction.state!==e.Transactions.C.STATUS_TERMINATED&&(this.dialog.uac_pending_reply=!0,n.clientTransaction.on("stateChanged",function n(){this.state!==e.Transactions.C.STATUS_ACCEPTED&&this.state!==e.Transactions.C.STATUS_COMPLETED&&this.state!==e.Transactions.C.STATUS_TERMINATED||(this.removeListener("stateChanged",n),t.dialog.uac_pending_reply=!1,!1===t.dialog.uas_pending_reply&&t.dialog.owner.onReadyToReinvite())}))},onRequestTimeout:function(){this.applicant.onRequestTimeout()},onTransportError:function(){this.applicant.onTransportError()},receiveResponse:function(t){var n=this;408===t.status_code||481===t.status_code?this.applicant.onDialogError(t):t.method===e.C.INVITE&&491===t.status_code?this.reattempt?this.applicant.receiveResponse(t):(this.request.cseq.value=this.dialog.local_seqnum+=1,this.reattemptTimer=e.Timers.setTimeout(function(){n.applicant.owner.status!==e.Session.C.STATUS_TERMINATED&&(n.reattempt=!0,n.request_sender.send())},this.getReattemptTimeout())):this.applicant.receiveResponse(t)}},t}},function(e,t,n){"use strict";e.exports=function(e){var t;(t=function(t,n){this.logger=n.getLogger("sip.requestsender"),this.ua=n,this.applicant=t,this.method=t.request.method,this.request=t.request,this.credentials=null,this.challenged=!1,this.staled=!1,n.status!==e.UA.C.STATUS_USER_CLOSED||this.method===e.C.BYE&&this.method===e.C.ACK||this.onTransportError()}).prototype={send:function(){switch(this.method){case"INVITE":this.clientTransaction=new e.Transactions.InviteClientTransaction(this,this.request,this.ua.transport);break;case"ACK":this.clientTransaction=new e.Transactions.AckClientTransaction(this,this.request,this.ua.transport);break;default:this.clientTransaction=new e.Transactions.NonInviteClientTransaction(this,this.request,this.ua.transport)}return this.clientTransaction.send(),this.clientTransaction},onRequestTimeout:function(){this.applicant.onRequestTimeout()},onTransportError:function(){this.applicant.onTransportError()},receiveResponse:function(t){var n,l,r,i=t.status_code;if(401===i||407===i){if(401===t.status_code?(l=t.parseHeader("www-authenticate"),r="authorization"):(l=t.parseHeader("proxy-authenticate"),r="proxy-authorization"),!l)return this.logger.warn(t.status_code+" with wrong or missing challenge, cannot authenticate"),void this.applicant.receiveResponse(t);if(!this.challenged||!this.staled&&!0===l.stale){if(this.credentials||(this.credentials=this.ua.configuration.authenticationFactory(this.ua)),this.challengeRequestHandler||(this.challengeRequestHandler=this.ua.configuration.challengeRequestHandlerFactory()),!this.credentials.authenticate(this.request,l))return void this.applicant.receiveResponse(t);this.challenged=!0,l.stale&&(this.staled=!0),t.method===e.C.REGISTER?n=this.applicant.cseq+=1:this.request.dialog?n=this.request.dialog.local_seqnum+=1:(n=this.request.cseq+1,this.request.cseq=n),this.request.setHeader("cseq",n+" "+this.method),this.request.setHeader(r,this.credentials.toString()),this.challengeRequestHandler&&this.challengeRequestHandler.handleRequest(this.request),this.send()}else this.applicant.receiveResponse(t)}else this.applicant.receiveResponse(t)}},e.RequestSender=t}},function(e,t,n){"use strict";e.exports=function(e){var t;(t=function(t){var n={},l=1;this.registrar=t.configuration.registrarServer,this.expires=t.configuration.registerExpires,this.flow_expires=0,t.configuration.disableRegId&&(l=0),this.contact=t.contact.toString(),l&&(this.contact+=";reg-id="+l,this.contact+=';+sip.instance="<urn:uuid:'+t.configuration.instanceId+'>"'),t.configuration.contactRegistrationAppendix&&(this.contact+=";"+t.configuration.contactRegistrationAppendix),this.call_id=e.Utils.createRandomToken(22),this.cseq=80,this.to_uri=t.configuration.uri,this.ua=t,n.to_uri=this.to_uri,n.to_displayName=t.configuration.displayName,n.call_id=this.call_id,n.cseq=this.cseq,e.Utils.augment(this,e.ClientContext,[t,"REGISTER",this.registrar,{params:n}]),this.registrationTimer=null,this.registrationExpiredTimer=null,this.registered=!1,this.logger=t.getLogger("sip.registercontext")}).prototype={register:function(t){var n,l=this;this.options=t||{},(n=(this.options.extraHeaders||[]).slice()).push("Contact: "+this.contact+";expires="+this.expires),n.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),this.closeHeaders=this.options.closeWithHeaders?(this.options.extraHeaders||[]).slice():[],this.receiveResponse=function(t){var n,r,i,s,o=t.getHeaders("contact").length;if(t.cseq===this.cseq)switch(null!==this.registrationTimer&&(e.Timers.clearTimeout(this.registrationTimer),this.registrationTimer=null),!0){case/^1[0-9]{2}$/.test(t.status_code):this.emit("progress",t);break;case/^2[0-9]{2}$/.test(t.status_code):if(this.emit("accepted",t),t.hasHeader("expires")&&(r=t.getHeader("expires")),t.hasHeader("Flow-Timer")&&(s=t.getHeader("Flow-Timer")),null!==this.registrationExpiredTimer&&(e.Timers.clearTimeout(this.registrationExpiredTimer),this.registrationExpiredTimer=null),!o){this.logger.warn("no Contact header in response to REGISTER, response ignored");break}for(;o--;){if((n=t.parseHeader("contact",o)).uri.user===this.ua.contact.uri.user||e.Utils.escapeUser(n.uri.user)===this.ua.contact.uri.user){r=n.getParam("expires");break}n=null}if(!n){this.logger.warn("no Contact header pointing to us, response ignored");break}r||(r=this.expires),s?this.flow_expires=s:s=this.flow_expires,s&&(0===l.ua.transport.keepAliveInterval||l.ua.transport.keepAliveInterval>s)&&(l.ua.transport.keepAliveInterval=s,l.ua.transport.stopSendingKeepAlives(),l.ua.transport.startSendingKeepAlives()),this.registrationTimer=e.Timers.setTimeout(function(){l.registrationTimer=null,l.register(l.options)},1e3*r-3e3),this.registrationExpiredTimer=e.Timers.setTimeout(function(){l.logger.warn("registration expired"),l.registered&&l.unregistered(null,e.C.causes.EXPIRES)},1e3*r),n.hasParam("temp-gruu")&&(this.ua.contact.temp_gruu=e.URI.parse(n.getParam("temp-gruu").replace(/"/g,""))),n.hasParam("pub-gruu")&&(this.ua.contact.pub_gruu=e.URI.parse(n.getParam("pub-gruu").replace(/"/g,""))),this.registered=!0,this.emit("registered",t||null);break;case/^423$/.test(t.status_code):t.hasHeader("min-expires")?(this.expires=t.getHeader("min-expires"),this.register(this.options)):(this.logger.warn("423 response received for REGISTER without Min-Expires"),this.registrationFailure(t,e.C.causes.SIP_FAILURE_CODE));break;case/^403$/.test(t.status_code):(this.request.getHeader("authorization")||this.request.getHeader("proxy-authorization"))&&(this.request.setHeader("authorization",null),this.request.setHeader("proxy-authorization",null),i=e.Utils.sipErrorCause(t.status_code),this.registrationFailure(t,i));break;default:i=e.Utils.sipErrorCause(t.status_code),this.registrationFailure(t,i)}},this.onRequestTimeout=function(){this.registrationFailure(null,e.C.causes.REQUEST_TIMEOUT)},this.onTransportError=function(){this.registrationFailure(null,e.C.causes.CONNECTION_ERROR)},this.cseq++,this.request.cseq=this.cseq,this.request.setHeader("cseq",this.cseq+" REGISTER"),this.request.extraHeaders=n,this.send()},registrationFailure:function(e,t){this.emit("failed",e||null,t||null)},onTransportClosed:function(){this.registered_before=this.registered,null!==this.registrationTimer&&(e.Timers.clearTimeout(this.registrationTimer),this.registrationTimer=null),null!==this.registrationExpiredTimer&&(e.Timers.clearTimeout(this.registrationExpiredTimer),this.registrationExpiredTimer=null),this.registered&&this.unregistered(null,e.C.causes.CONNECTION_ERROR)},onTransportConnected:function(){this.register(this.options)},close:function(){var e={all:!1,extraHeaders:this.closeHeaders};this.registered_before=this.registered,this.unregister(e)},unregister:function(t){var n;t=t||{},this.registered||t.all?(n=(t.extraHeaders||[]).slice(),this.registered=!1,null!==this.registrationTimer&&(e.Timers.clearTimeout(this.registrationTimer),this.registrationTimer=null),t.all?(n.push("Contact: *"),n.push("Expires: 0")):n.push("Contact: "+this.contact+";expires=0"),this.receiveResponse=function(t){var n;switch(!0){case/^1[0-9]{2}$/.test(t.status_code):this.emit("progress",t);break;case/^2[0-9]{2}$/.test(t.status_code):this.emit("accepted",t),null!==this.registrationExpiredTimer&&(e.Timers.clearTimeout(this.registrationExpiredTimer),this.registrationExpiredTimer=null),this.unregistered(t);break;default:n=e.Utils.sipErrorCause(t.status_code),this.unregistered(t,n)}},this.onRequestTimeout=function(){},this.onTransportError=function(){},this.cseq++,this.request.cseq=this.cseq,this.request.setHeader("cseq",this.cseq+" REGISTER"),this.request.extraHeaders=n,this.send()):this.logger.warn("already unregistered")},unregistered:function(e,t){this.registered=!1,this.emit("unregistered",e||null,t||null)}},e.RegisterContext=t}},function(e,t,n){"use strict";e.exports=function(e){var t=function(e,t){e=e,t=t};return t.prototype=Object.create(e.prototype,{isReady:{value:function(){}},close:{value:function(){}},getDescription:{value:function(e){e=e}},hasDescription:{value:function(e){e=e}},setDescription:{value:function(e){e=e}}}),t}},function(e,t,n){"use strict";e.exports=function(e){var t;((t=function(t,n,l,r){var i=l;if(void 0===l)throw new TypeError("Not enough arguments");if(this.ua=t,this.logger=t.getLogger("sip.clientcontext"),this.method=n,!(l=t.normalizeTarget(l)))throw new TypeError("Invalid target: "+i);(r=Object.create(r||Object.prototype)).extraHeaders=(r.extraHeaders||[]).slice(),this.request=new e.OutgoingRequest(this.method,l,this.ua,r.params,r.extraHeaders),r.body&&(this.body={},this.body.body=r.body,r.contentType&&(this.body.contentType=r.contentType),this.request.body=this.body),this.localIdentity=this.request.from,this.remoteIdentity=this.request.to,this.data={}}).prototype=Object.create(e.EventEmitter.prototype)).send=function(){return new e.RequestSender(this,this.ua).send(),this},t.prototype.cancel=function(t){(t=t||{}).extraHeaders=(t.extraHeaders||[]).slice();var n=e.Utils.getCancelReason(t.status_code,t.reason_phrase);this.request.cancel(n,t.extraHeaders),this.emit("cancel")},t.prototype.receiveResponse=function(t){var n=e.Utils.getReasonPhrase(t.status_code);switch(!0){case/^1[0-9]{2}$/.test(t.status_code):this.emit("progress",t,n);break;case/^2[0-9]{2}$/.test(t.status_code):this.ua.applicants[this]&&delete this.ua.applicants[this],this.emit("accepted",t,n);break;default:this.ua.applicants[this]&&delete this.ua.applicants[this],this.emit("rejected",t,n),this.emit("failed",t,n)}},t.prototype.onRequestTimeout=function(){this.emit("failed",null,e.C.causes.REQUEST_TIMEOUT)},t.prototype.onTransportError=function(){this.emit("failed",null,e.C.causes.CONNECTION_ERROR)},e.ClientContext=t}},function(e,t,n){"use strict";e.exports=function(e){var t;((t=function(t,n){this.ua=t,this.logger=t.getLogger("sip.servercontext"),this.request=n,n.method===e.C.INVITE?this.transaction=new e.Transactions.InviteServerTransaction(n,t):this.transaction=new e.Transactions.NonInviteServerTransaction(n,t),n.body&&(this.body=n.body),n.hasHeader("Content-Type")&&(this.contentType=n.getHeader("Content-Type")),this.method=n.method,this.data={},this.localIdentity=n.to,this.remoteIdentity=n.from}).prototype=Object.create(e.EventEmitter.prototype)).progress=function(e){return(e=Object.create(e||Object.prototype)).statusCode||(e.statusCode=180),e.minCode=100,e.maxCode=199,e.events=["progress"],this.reply(e)},t.prototype.accept=function(e){return(e=Object.create(e||Object.prototype)).statusCode||(e.statusCode=200),e.minCode=200,e.maxCode=299,e.events=["accepted"],this.reply(e)},t.prototype.reject=function(e){return(e=Object.create(e||Object.prototype)).statusCode||(e.statusCode=480),e.minCode=300,e.maxCode=699,e.events=["rejected","failed"],this.reply(e)},t.prototype.reply=function(t){var n,l=(t=t||{}).statusCode||100,r=t.minCode||100,i=t.maxCode||699,s=e.Utils.getReasonPhrase(l,t.reasonPhrase),o=t.extraHeaders||[],a=t.body,u=t.events||[];if(l<r||l>i)throw new TypeError("Invalid statusCode: "+l);return n=this.request.reply(l,s,o,a),u.forEach(function(e){this.emit(e,n,s)},this),this},t.prototype.onRequestTimeout=function(){this.emit("failed",null,e.C.causes.REQUEST_TIMEOUT)},t.prototype.onTransportError=function(){this.emit("failed",null,e.C.causes.CONNECTION_ERROR)},e.ServerContext=t}},function(e,t,n){"use strict";e.exports=function(e,t){var l,r,i,s=n(95)(e),o={STATUS_NULL:0,STATUS_INVITE_SENT:1,STATUS_1XX_RECEIVED:2,STATUS_INVITE_RECEIVED:3,STATUS_WAITING_FOR_ANSWER:4,STATUS_ANSWERED:5,STATUS_WAITING_FOR_PRACK:6,STATUS_WAITING_FOR_ACK:7,STATUS_CANCELED:8,STATUS_TERMINATED:9,STATUS_ANSWERED_WAITING_FOR_PRACK:10,STATUS_EARLY_MEDIA:11,STATUS_CONFIRMED:12};(l=function(n){this.status=o.STATUS_NULL,this.dialog=null,this.earlyDialogs={},this.mediaHandlerFactory=n||e.WebRTC.MediaHandler.defaultFactory,this.hasOffer=!1,this.hasAnswer=!1,this.env=t,this.timers={ackTimer:null,expiresTimer:null,invite2xxTimer:null,userNoAnswerTimer:null,rel1xxTimer:null,prackTimer:null},this.startTime=null,this.endTime=null,this.tones=null,this.local_hold=!1,this.remote_hold=!1,this.local_video=!0,this.local_audio=!0,this.pending_actions={actions:[],length:function(){return this.actions.length},isPending:function(e){for(var t=0,n=this.actions.length;t<n;t++)if(this.actions[t].name===e)return!0;return!1},shift:function(){return this.actions.shift()},push:function(e){this.actions.push({name:e})},pop:function(e){for(var t=0,n=this.actions.length;t<n;t++)this.actions[t].name===e&&(this.actions.splice(t,1),n--,t--)}},this.early_sdp=null,this.rel100=e.C.supported.UNSUPPORTED}).prototype={dtmf:function(t,n){var l=[],r=this;if(n=n||{},void 0===t)throw new TypeError("Not enough arguments");if(this.status!==o.STATUS_CONFIRMED&&this.status!==o.STATUS_WAITING_FOR_ACK)throw new e.Exceptions.InvalidStateError(this.status);if("string"!=typeof t&&"number"!=typeof t||!t.toString().match(/^[0-9A-D#*,]+$/i))throw new TypeError("Invalid tones: "+t);for(t=t.toString().split("");t.length>0;)l.push(new s(this,t.shift(),n));if(this.tones)return this.tones=this.tones.concat(l),this;var i=function(){var t,l;if(r.status===o.STATUS_TERMINATED||!r.tones||0===r.tones.length)return r.tones=null,this;(t=r.tones.shift()).on("failed",function(){r.tones=null}),t.send(n),l=t.duration+t.interToneGap,e.Timers.setTimeout(i,l)};return this.tones=l,i(),this},bye:function(t){var n=(t=Object.create(t||Object.prototype)).statusCode;if(this.status===o.STATUS_TERMINATED)return this.logger.error("Error: Attempted to send BYE in a terminated session."),this;if(this.logger.log("terminating Session"),n&&(n<200||n>=700))throw new TypeError("Invalid statusCode: "+n);return t.receiveResponse=function(){},this.sendRequest(e.C.BYE,t).terminated()},refer:function(t,n){var l=((n=n||{}).extraHeaders||[]).slice(),r=t instanceof e.InviteServerContext||t instanceof e.InviteClientContext,i=t;if(void 0===t)throw new TypeError("Not enough arguments");if(this.status!==o.STATUS_CONFIRMED)throw new e.Exceptions.InvalidStateError(this.status);if(r)t='"'+t.remoteIdentity.friendlyName+'" <'+t.dialog.remote_target.toString()+"?Replaces="+t.dialog.id.call_id+"%3Bto-tag%3D"+t.dialog.id.remote_tag+"%3Bfrom-tag%3D"+t.dialog.id.local_tag+">";else{try{t=e.Grammar.parse(t,"Refer_To").uri||t}catch(e){this.logger.debug(".refer() cannot parse Refer_To from",t),this.logger.debug("...falling through to normalizeTarget()")}if(!(t=this.ua.normalizeTarget(t)))throw new TypeError("Invalid target: "+i)}return l.push("Contact: "+this.contact),l.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),l.push("Refer-To: "+t),this.sendRequest(e.C.REFER,{extraHeaders:l,body:n.body,receiveResponse:function(e){/^2[0-9]{2}$/.test(e.status_code)&&(r||t.scheme&&t.scheme.toLowerCase().match(this.ua.configuration.supportedURISchemes))&&this.terminate()}.bind(this)}),this},followRefer:function(n){return function(n,l){var r=l.parseHeader("refer-to"),i=r.uri;if(i.scheme.match("^sips?$")){var s=[],o=i.getHeader("Replaces");void 0!==o&&s.push("Replaces: "+decodeURIComponent(o)),i.clearHeaders();var a=this.mediaHandler.getReferMedia,u=a?a.call(this.mediaHandler):this.mediaHint;e.Hacks.Chrome.getsConfusedAboutGUM(this);var c=this.ua.invite(i,{media:u,params:{to_displayName:r.friendlyName},extraHeaders:s});n.call(this,l,c),this.terminate()}else{var d=i.toString();"function"==typeof t.open?t.open(d):this.logger.warn("referred to non-SIP URI but `open` isn't in the environment: "+d)}}.bind(this,n)},sendRequest:function(t,n){n=n||{};var l=this,r=new e.OutgoingRequest(t,this.dialog.remote_target,this.ua,{cseq:n.cseq||(this.dialog.local_seqnum+=1),call_id:this.dialog.id.call_id,from_uri:this.dialog.local_uri,from_tag:this.dialog.id.local_tag,to_uri:this.dialog.remote_uri,to_tag:this.dialog.id.remote_tag,route_set:this.dialog.route_set,statusCode:n.statusCode,reasonPhrase:n.reasonPhrase},n.extraHeaders||[],n.body);return new e.RequestSender({request:r,onRequestTimeout:function(){l.onRequestTimeout()},onTransportError:function(){l.onTransportError()},receiveResponse:n.receiveResponse||function(e){l.receiveNonInviteResponse(e)}},this.ua).send(),this.emit(t.toLowerCase(),r),this.outgoingRequest=r,this},close:function(){var t;if(this.status===o.STATUS_TERMINATED)return this;for(t in this.logger.log("closing INVITE session "+this.id),this.mediaHandler&&this.mediaHandler.close(),this.timers)e.Timers.clearTimeout(this.timers[t]);for(t in this.dialog&&(this.dialog.terminate(),delete this.dialog),this.earlyDialogs)this.earlyDialogs[t].terminate(),delete this.earlyDialogs[t];return this.status=o.STATUS_TERMINATED,delete this.ua.sessions[this.id],this},createDialog:function(t,n,l){var r,i,s=t["UAS"===n?"to_tag":"from_tag"],o=t["UAS"===n?"from_tag":"to_tag"],a=t.call_id+s+o;if(i=this.earlyDialogs[a],l)return!!i||((i=new e.Dialog(this,t,n,e.Dialog.C.STATUS_EARLY)).error?(this.logger.error(i.error),this.failed(t,e.C.causes.INTERNAL_ERROR),!1):(this.earlyDialogs[a]=i,!0));if(i){for(var u in i.update(t,n),this.dialog=i,delete this.earlyDialogs[a],this.earlyDialogs)this.earlyDialogs[u].terminate(),delete this.earlyDialogs[u];return!0}return(r=new e.Dialog(this,t,n)).error?(this.logger.error(r.error),this.failed(t,e.C.causes.INTERNAL_ERROR),!1):(this.to_tag=t.to_tag,this.dialog=r,!0)},isReadyToReinvite:function(){return this.mediaHandler.isReady()&&!this.dialog.uac_pending_reply&&!this.dialog.uas_pending_reply},mute:function(e){var t=this.mediaHandler.mute(e);t&&this.onmute(t)},unmute:function(e){var t=this.mediaHandler.unmute(e);t&&this.onunmute(t)},hold:function(t){if(this.status!==o.STATUS_WAITING_FOR_ACK&&this.status!==o.STATUS_CONFIRMED)throw new e.Exceptions.InvalidStateError(this.status);this.mediaHandler.hold(),this.isReadyToReinvite()?!0!==this.local_hold&&(this.onhold("local"),this.sendReinvite(t)):this.pending_actions.isPending("unhold")?this.pending_actions.pop("unhold"):this.pending_actions.isPending("hold")||this.pending_actions.push("hold")},unhold:function(t){if(this.status!==o.STATUS_WAITING_FOR_ACK&&this.status!==o.STATUS_CONFIRMED)throw new e.Exceptions.InvalidStateError(this.status);this.mediaHandler.unhold(),this.isReadyToReinvite()?!1!==this.local_hold&&(this.onunhold("local"),this.sendReinvite(t)):this.pending_actions.isPending("hold")?this.pending_actions.pop("hold"):this.pending_actions.isPending("unhold")||this.pending_actions.push("unhold")},isOnHold:function(){return{local:this.local_hold,remote:this.remote_hold}},toggleLocalMedia:function(t){return this.isReadyToReinvite()?new e.Utils.Promise(function(e,n){this.sendReinvite(t,{resolve:e,reject:n})}.bind(this)):new e.Utils.Promise(function(t,n){n(new e.Exceptions.InvalidStateError("Reinvite not ready"))})},render:function(e){e&&(this.mediaHint.render=e),this.mediaHandler.render(e)},receiveReinvite:function(t){var n=this;if(!this.mediaHandler.hasDescription(t))return this.logger.warn("invalid Content-Type"),void t.reply(415);this.emit("onReinvite",t),this.mediaHandler.setDescription(t,"offer").then(this.mediaHandler.getDescription.bind(this.mediaHandler,this.mediaHint)).then(function(e){var l=["Contact: "+n.contact];t.extraHeaders&&(l=l.concat(t.extraHeaders)),n.status!==o.STATUS_TERMINATED?t.reply(200,null,l,e,function(){n.status=o.STATUS_WAITING_FOR_ACK,n.setInvite2xxTimer(t,e),n.setACKTimer(),n.remote_hold&&!n.mediaHandler.remote_hold?n.onunhold("remote"):!n.remote_hold&&n.mediaHandler.remote_hold&&n.onhold("remote")}):n.mediaHandler.close()}).catch(function(l){var r;l instanceof e.Exceptions.GetDescriptionError?r=500:(n.logger.error(l),r=488),t.reply(r)})},sendReinvite:function(t,n){var l,r=this,i=((t=t||{}).extraHeaders||[]).slice(),s=t.eventHandlers||{};return s.succeeded&&(l=s.succeeded),this.reinviteSucceeded=function(){e.Timers.clearTimeout(r.timers.ackTimer),e.Timers.clearTimeout(r.timers.invite2xxTimer),r.status=o.STATUS_CONFIRMED,l&&l.apply(this,arguments)},s.failed?this.reinviteFailed=s.failed:this.reinviteFailed=function(){},i.push("Contact: "+this.contact),i.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),this.receiveResponse=this.receiveReinviteResponse,t.media&&(r.mediaHint=t.media),this.mediaHandler.getDescription(r.mediaHint).then(function(t){r.dialog.sendRequest(r,e.C.INVITE,{extraHeaders:i,body:t}),n&&n.resolve()},function(e){r.isReadyToReinvite()&&r.onReadyToReinvite(),n?n.reject(e):r.reinviteFailed()})},receiveRequest:function(t){switch(t.method){case e.C.BYE:t.reply(200),this.status===o.STATUS_CONFIRMED&&(this.emit("bye",t),this.terminated(t,e.C.causes.BYE));break;case e.C.INVITE:this.status===o.STATUS_CONFIRMED&&(this.logger.log("re-INVITE received"),this.receiveReinvite(t));break;case e.C.INFO:if(this.status===o.STATUS_CONFIRMED||this.status===o.STATUS_WAITING_FOR_ACK){if(this.onInfo)return this.onInfo(t);var n,l,r,i=t.getHeader("content-type"),a=/^(Signal\s*?=\s*?)([0-9A-D#*]{1})(\s)?.*/,u=/^(Duration\s?=\s?)([0-9]{1,4})(\s)?.*/;i&&(i.match(/^application\/dtmf-relay/i)?(t.body&&2===(n=t.body.split("\r\n",2)).length&&(a.test(n[0])&&(l=n[0].replace(a,"$2")),u.test(n[1])&&(r=parseInt(n[1].replace(u,"$2"),10))),new s(this,l,{duration:r}).init_incoming(t)):t.reply(415,null,["Accept: application/dtmf-relay"]))}break;case e.C.REFER:var c;if(this.status===o.STATUS_CONFIRMED)this.logger.log("REFER received"),this.listeners("refer").length?(t.reply(202,"Accepted"),c="SIP/2.0 100 Trying",this.sendRequest(e.C.NOTIFY,{extraHeaders:["Event: refer","Subscription-State: terminated","Content-Type: message/sipfrag"],body:c,receiveResponse:function(){}}),this.emit("refer",t)):t.reply(603,"Declined");break;case e.C.NOTIFY:t.reply(200,"OK"),this.emit("notify",t)}},receiveReinviteResponse:function(t){var n=this;if(this.status!==o.STATUS_TERMINATED)switch(!0){case/^1[0-9]{2}$/.test(t.status_code):break;case/^2[0-9]{2}$/.test(t.status_code):if(this.status=o.STATUS_CONFIRMED,this.sendRequest(e.C.ACK,{cseq:t.cseq}),!this.mediaHandler.hasDescription(t)){this.reinviteFailed();break}this.emit("onReinviteResponse",t),this.mediaHandler.setDescription(t).then(function(){n.reinviteSucceeded()},function(){n.reinviteFailed()});break;default:this.reinviteFailed()}},acceptAndTerminate:function(t,n,l){var r=[];return n&&r.push("Reason: "+e.Utils.getReasonHeaderValue(n,l)),t.hasHeader("contact")?((this.dialog||this.createDialog(t,"UAC"))&&(this.sendRequest(e.C.ACK,{cseq:t.cseq}),this.sendRequest(e.C.BYE,{extraHeaders:r})),this):this},setInvite2xxTimer:function(t,n){var l=this,r=e.Timers.T1;this.timers.invite2xxTimer=e.Timers.setTimeout(function i(){if(l.status===o.STATUS_WAITING_FOR_ACK){l.logger.log("no ACK received, attempting to retransmit OK");var s=["Contact: "+l.contact];t.reply(200,null,s,n),r=Math.min(2*r,e.Timers.T2),l.timers.invite2xxTimer=e.Timers.setTimeout(i,r)}},r)},setACKTimer:function(){var t=this;this.timers.ackTimer=e.Timers.setTimeout(function(){t.status===o.STATUS_WAITING_FOR_ACK&&(t.logger.log("no ACK received for an extended period of time, terminating the call"),e.Timers.clearTimeout(t.timers.invite2xxTimer),t.sendRequest(e.C.BYE),t.terminated(null,e.C.causes.NO_ACK))},e.Timers.TIMER_H)},onReadyToReinvite:function(){var e=this.pending_actions.shift();e&&this[e.name]&&this[e.name]()},onTransportError:function(){this.status!==o.STATUS_CONFIRMED&&this.status!==o.STATUS_TERMINATED&&this.failed(null,e.C.causes.CONNECTION_ERROR)},onRequestTimeout:function(){this.status===o.STATUS_CONFIRMED?this.terminated(null,e.C.causes.REQUEST_TIMEOUT):this.status!==o.STATUS_TERMINATED&&(this.failed(null,e.C.causes.REQUEST_TIMEOUT),this.terminated(null,e.C.causes.REQUEST_TIMEOUT))},onDialogError:function(t){this.status===o.STATUS_CONFIRMED?this.terminated(t,e.C.causes.DIALOG_ERROR):this.status!==o.STATUS_TERMINATED&&(this.failed(t,e.C.causes.DIALOG_ERROR),this.terminated(t,e.C.causes.DIALOG_ERROR))},onhold:function(e){this["local"===e?"local_hold":"remote_hold"]=!0,this.emit("hold",{originator:e})},onunhold:function(e){this["local"===e?"local_hold":"remote_hold"]=!1,this.emit("unhold",{originator:e})},onmute:function(e){this.emit("muted",{audio:e.audio,video:e.video})},onunmute:function(e){this.emit("unmuted",{audio:e.audio,video:e.video})},failed:function(e,t){return this.status===o.STATUS_TERMINATED?this:(this.emit("failed",e||null,t||null),this)},rejected:function(e,t){return this.emit("rejected",e||null,t||null),this},canceled:function(e){return this.emit("cancel",e),this},accepted:function(t,n){return n=e.Utils.getReasonPhrase(t&&t.status_code,n),this.startTime=new Date,this.replacee&&(this.replacee.emit("replaced",this),this.replacee.terminate()),this.emit("accepted",t,n),this},terminated:function(e,t){return this.status===o.STATUS_TERMINATED?this:(this.endTime=new Date,this.close(),this.emit("terminated",e||this.outgoingRequest,t||null),this)},connecting:function(e){return this.emit("iceConnecting",{request:e}),this}},l.desugar=function(e){return t.HTMLMediaElement&&e instanceof t.HTMLMediaElement&&(e={media:{constraints:{audio:!0,video:"VIDEO"===e.tagName},render:{remote:e}}}),e||{}},l.C=o,e.Session=l,(r=function(t,n){var l,r=this,i=n.getHeader("Content-Type"),s=n.parseHeader("Content-Disposition");if(e.Utils.augment(this,e.ServerContext,[t,n]),e.Utils.augment(this,e.Session,[t.configuration.mediaHandlerFactory]),this.mediaHandler=this.mediaHandlerFactory(this,{RTCConstraints:{optional:[{DtlsSrtpKeyAgreement:"true"}]}}),!s&&!this.mediaHandler.hasDescription(n)||s&&"render"===s.type)this.renderbody=n.body,this.rendertype=i;else if(!this.mediaHandler.hasDescription(n)&&s&&"session"===s.type)return void n.reply(415);function a(e,t){n.hasHeader(e)&&n.getHeader(e).toLowerCase().indexOf("100rel")>=0&&(r.rel100=t)}if(this.status=o.STATUS_INVITE_RECEIVED,this.from_tag=n.from_tag,this.id=n.call_id+this.from_tag,this.request=n,this.contact=this.ua.contact.toString(),this.supportBlackBerryEarlyIce=t.configuration.enableBlackberryEarlyIce,this.receiveNonInviteResponse=function(){},this.logger=t.getLogger("sip.inviteservercontext",this.id),this.ua.sessions[this.id]=this,n.hasHeader("expires")&&(l=1e3*n.getHeader("expires")),a("require",e.C.supported.REQUIRED),a("supported",e.C.supported.SUPPORTED),n.to_tag=e.Utils.newTag(),this.createDialog(n,"UAS",!0))if(this.mediaHandler&&this.mediaHandler.getRemoteStreams&&(this.getRemoteStreams=this.mediaHandler.getRemoteStreams.bind(this.mediaHandler),this.getLocalStreams=this.mediaHandler.getLocalStreams.bind(this.mediaHandler)),!this.mediaHandler.hasDescription(n)||this.renderbody)e.Timers.setTimeout(c,0);else{this.hasOffer=!0;var u=n.body;e.Timers.setTimeout(function(){var t=e.Utils.defer();r.emit("earlyInvite",{request:n,defered:t}),r.mediaHandler.setDescription({body:u},"offer").then(function(){c(),t.resolve()},function(e){t.reject(e),r.logger.warn("invalid description"),r.logger.warn(e),n.reply(488)})},0)}else n.reply(500,"Missing Contact header field");function c(){var i={extraHeaders:["Contact: "+r.contact]};r.rel100===e.C.supported.REQUIRED||t.configuration.enableBlackberryEarlyIce||r.progress(i),r.status=o.STATUS_WAITING_FOR_ANSWER,r.timers.userNoAnswerTimer=e.Timers.setTimeout(function(){n.reply(408),r.failed(n,e.C.causes.NO_ANSWER),r.terminated(n,e.C.causes.NO_ANSWER)},r.ua.configuration.noAnswerTimeout),l&&(r.timers.expiresTimer=e.Timers.setTimeout(function(){r.status===o.STATUS_WAITING_FOR_ANSWER&&(n.reply(487),r.failed(n,e.C.causes.EXPIRES),r.terminated(n,e.C.causes.EXPIRES))},l)),r.emit("invite",n)}}).prototype={reject:function(t){if(this.status===o.STATUS_TERMINATED)throw new e.Exceptions.InvalidStateError(this.status);return this.logger.log("rejecting RTCSession"),e.ServerContext.prototype.reject.call(this,t),this.terminated()},terminate:function(t){var n,l=((t=t||{}).extraHeaders||[]).slice(),r=t.body,i=this;return this.status===o.STATUS_WAITING_FOR_ACK&&this.request.server_transaction.state!==e.Transactions.C.STATUS_TERMINATED?(n=this.dialog,this.receiveRequest=function(t){t.method===e.C.ACK&&(this.sendRequest(e.C.BYE,{extraHeaders:l,body:r}),n.terminate())},this.request.server_transaction.on("stateChanged",function(){this.state===e.Transactions.C.STATUS_TERMINATED&&this.dialog&&(this.request=new e.OutgoingRequest(e.C.BYE,this.dialog.remote_target,this.ua,{cseq:this.dialog.local_seqnum+=1,call_id:this.dialog.id.call_id,from_uri:this.dialog.local_uri,from_tag:this.dialog.id.local_tag,to_uri:this.dialog.remote_uri,to_tag:this.dialog.id.remote_tag,route_set:this.dialog.route_set},l,r),new e.RequestSender({request:this.request,onRequestTimeout:function(){i.onRequestTimeout()},onTransportError:function(){i.onTransportError()},receiveResponse:function(){}},this.ua).send(),n.terminate())}),this.emit("bye",this.request),this.terminated(),this.dialog=n,this.ua.dialogs[n.id.toString()]=n):this.status===o.STATUS_CONFIRMED?this.bye(t):this.reject(t),this},progress:function(t){var n,l,r=(t=t||{}).statusCode||180,i=t.reasonPhrase,s=(t.extraHeaders||[]).slice(),a=t.stunServers||(this.ua.configuration.stunServers.length?this.ua.configuration.stunServers:null),u=t.turnServers||(this.ua.configuration.turnServers.length?this.ua.configuration.turnServers:null),c=t.body,d=function(e,n,l){t.shortPromise&&!t.shortPromise.isResolve&&(n?t.shortPromise.reject(n):t.shortPromise.resolve(e)),l&&t.longPromise&&t.longPromise.resolve(e)}.bind(this);if(r<100||r>199)throw new TypeError("Invalid statusCode: "+r);if(this.isCanceled||this.status===o.STATUS_TERMINATED)return d(void 0,new e.Exceptions.InvalidStateError(this.status),!0),this;if(a||u){if(a){if(!(n=this.ua.getConfigurationCheck().optional.stunServers(a)))throw new TypeError("Invalid stunServers: "+a);this.stunServers=n}if(u){if(!(n=this.ua.getConfigurationCheck().optional.turnServers(u)))throw new TypeError("Invalid turnServers: "+u);this.turnServers=n}this.mediaHandler.updateIceServers({stunServers:this.stunServers,turnServers:this.turnServers})}var p=function(n,l){this.mediaHint=t.media,this.mediaHandler.getDescription(t.media,t.shortPromise).then(function(e){this.isCanceled||this.status===o.STATUS_TERMINATED||(this.mute(),this.early_sdp=e.body,this[this.hasOffer?"hasAnswer":"hasOffer"]=!0,n&&n.apply(this,[e]),d(void 0,void 0,!0))}.bind(this),function(t){d(void 0,t,!0),l?l.apply(this):(this.request.reply(480),this.failed(null,e.C.causes.WEBRTC_ERROR),this.terminated(null,e.C.causes.WEBRTC_ERROR))}.bind(this))}.bind(this);function g(e){l=this.request.reply(r,i,s,e),this.emit("progress",l,i)}return 100!==t.statusCode&&(this.rel100===e.C.supported.REQUIRED||this.rel100===e.C.supported.SUPPORTED&&t.rel100||this.rel100===e.C.supported.SUPPORTED&&this.ua.configuration.rel100===e.C.supported.REQUIRED)?function(){r=t.statusCode||183,this.status=o.STATUS_WAITING_FOR_PRACK,s.push("Contact: "+this.contact),s.push("Require: 100rel"),s.push("RSeq: "+Math.floor(1e4*Math.random())),p(function(t){var n=e.Timers.T1;this.timers.rel1xxTimer=e.Timers.setTimeout(function l(){this.request.reply(r,null,s,t),n*=2,this.timers.rel1xxTimer=e.Timers.setTimeout(l.bind(this),n)}.bind(this),n),this.timers.prackTimer=e.Timers.setTimeout(function(){this.status===o.STATUS_WAITING_FOR_PRACK&&(this.logger.log("no PRACK received, rejecting the call"),e.Timers.clearTimeout(this.timers.rel1xxTimer),this.request.reply(504),this.terminated(null,e.C.causes.NO_PRACK))}.bind(this),64*e.Timers.T1),g.apply(this,[t])})}.apply(this):this.supportBlackBerryEarlyIce?function(){p(g)}.apply(this):(g.apply(this,[c]),d(void 0,void 0,!0)),this},accept:function(t){t=Object.create(l.desugar(t)),e.Utils.optionsOverride(t,"media","mediaConstraints",!0,this.logger,this.ua.configuration.media),this.mediaHint=t.media,this.onInfo=t.onInfo;var n,r=this,i=this.request,s=(t.extraHeaders||[]).slice(),a=t.stunServers||(this.ua.configuration.stunServers.length?this.ua.configuration.stunServers:null),u=t.turnServers||(this.ua.configuration.turnServers.length?this.ua.configuration.turnServers:null),c=function(n){var l;r.mediaHandler.render(r.mediaHint?r.mediaHint.render:void 0),s.push("Contact: "+r.contact),s.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),r.hasOffer?r.hasAnswer=!0:r.hasOffer=!0,l=i.reply(200,null,s,n,function(){r.status=o.STATUS_WAITING_FOR_ACK,r.setInvite2xxTimer(i,n),r.setACKTimer()},function(){r.failed(null,e.C.causes.CONNECTION_ERROR),r.terminated(null,e.C.causes.CONNECTION_ERROR)}),r.status!==o.STATUS_TERMINATED&&r.accepted(l,e.Utils.getReasonPhrase(200)),t.shortPromise&&!t.shortPromise.isResolved&&t.shortPromise.resolve(),t.longPromise&&t.longPromise.resolve()};if(this.status===o.STATUS_WAITING_FOR_PRACK)return this.status=o.STATUS_ANSWERED_WAITING_FOR_PRACK,this;if(this.status===o.STATUS_WAITING_FOR_ANSWER)this.status=o.STATUS_ANSWERED;else if(this.status!==o.STATUS_EARLY_MEDIA)throw new e.Exceptions.InvalidStateError(this.status);if((a||u)&&this.status!==o.STATUS_EARLY_MEDIA&&this.status!==o.STATUS_ANSWERED_WAITING_FOR_PRACK){if(a){if(!(n=this.ua.getConfigurationCheck().optional.stunServers(a)))throw new TypeError("Invalid stunServers: "+a);this.stunServers=n}if(u){if(!(n=this.ua.getConfigurationCheck().optional.turnServers(u)))throw new TypeError("Invalid turnServers: "+u);this.turnServers=n}this.mediaHandler.updateIceServers({stunServers:this.stunServers,turnServers:this.turnServers})}return this.createDialog(i,"UAS")?(e.Timers.clearTimeout(this.timers.userNoAnswerTimer),this.status===o.STATUS_EARLY_MEDIA||this.supportBlackBerryEarlyIce&&this.early_sdp?(t.shortPromise&&t.shortPromise.resolve(),c(this.supportBlackBerryEarlyIce?this.early_sdp:{})):this.mediaHandler.getDescription(r.mediaHint,t.shortPromise).then(c,function(n){r.status!==o.STATUS_TERMINATED&&(t.shortPromise&&!t.shortPromise.isResolved&&t.shortPromise.reject(n),r.request.reply(480),r.failed(null,e.C.causes.WEBRTC_ERROR),r.terminated(null,e.C.causes.WEBRTC_ERROR))}),this):(i.reply(500,"Missing Contact header field"),this)},receiveRequest:function(t){function n(){var n;e.Timers.clearTimeout(this.timers.ackTimer),e.Timers.clearTimeout(this.timers.invite2xxTimer),this.status=o.STATUS_CONFIRMED,this.unmute(),n=t.getHeader("Content-Type"),this.mediaHandler.hasDescription(t)||(this.renderbody=t.body,this.rendertype=n),this.emit("confirmed",t)}switch(t.method){case e.C.CANCEL:this.status!==o.STATUS_WAITING_FOR_ANSWER&&this.status!==o.STATUS_WAITING_FOR_PRACK&&this.status!==o.STATUS_ANSWERED_WAITING_FOR_PRACK&&this.status!==o.STATUS_EARLY_MEDIA&&this.status!==o.STATUS_ANSWERED||(this.status=o.STATUS_CANCELED,this.request.reply(487),this.canceled(t),this.rejected(t,e.C.causes.CANCELED),this.failed(t,e.C.causes.CANCELED),this.terminated(t,e.C.causes.CANCELED));break;case e.C.ACK:this.status===o.STATUS_WAITING_FOR_ACK&&(this.hasAnswer?n.apply(this):this.mediaHandler.hasDescription(t)?(this.hasAnswer=!0,this.mediaHandler.setDescription(t).then(n.bind(this),function(n){this.logger.warn(n),this.terminate({statusCode:"488",reasonPhrase:"Bad Media Description"}),this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(t,e.C.causes.BAD_MEDIA_DESCRIPTION)}.bind(this))):this.early_sdp?n.apply(this):(this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(t,e.C.causes.BAD_MEDIA_DESCRIPTION)));break;case e.C.PRACK:this.status===o.STATUS_WAITING_FOR_PRACK||this.status===o.STATUS_ANSWERED_WAITING_FOR_PRACK?this.hasAnswer?(e.Timers.clearTimeout(this.timers.rel1xxTimer),e.Timers.clearTimeout(this.timers.prackTimer),t.reply(200),this.status===o.STATUS_ANSWERED_WAITING_FOR_PRACK&&(this.status=o.STATUS_EARLY_MEDIA,this.accept()),this.status=o.STATUS_EARLY_MEDIA,this.mute()):this.mediaHandler.hasDescription(t)?(this.hasAnswer=!0,this.mediaHandler.setDescription(t).then(function(){e.Timers.clearTimeout(this.timers.rel1xxTimer),e.Timers.clearTimeout(this.timers.prackTimer),t.reply(200),this.status===o.STATUS_ANSWERED_WAITING_FOR_PRACK&&(this.status=o.STATUS_EARLY_MEDIA,this.accept()),this.status=o.STATUS_EARLY_MEDIA,this.mute()}.bind(this),function(n){this.logger.warn(n),this.terminate({statusCode:"488",reasonPhrase:"Bad Media Description"}),this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(t,e.C.causes.BAD_MEDIA_DESCRIPTION)}.bind(this))):(this.terminate({statusCode:"488",reasonPhrase:"Bad Media Description"}),this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(t,e.C.causes.BAD_MEDIA_DESCRIPTION)):this.status===o.STATUS_EARLY_MEDIA&&t.reply(200);break;default:l.prototype.receiveRequest.apply(this,[t])}},onTransportError:function(){this.status!==o.STATUS_CONFIRMED&&this.status!==o.STATUS_TERMINATED&&this.failed(null,e.C.causes.CONNECTION_ERROR)},onRequestTimeout:function(){this.status===o.STATUS_CONFIRMED?this.terminated(null,e.C.causes.REQUEST_TIMEOUT):this.status!==o.STATUS_TERMINATED&&(this.failed(null,e.C.causes.REQUEST_TIMEOUT),this.terminated(null,e.C.causes.REQUEST_TIMEOUT))}},e.InviteServerContext=r,(i=function(t,n,r){(r=Object.create(l.desugar(r))).params=Object.create(r.params||Object.prototype);var i,s=(r.extraHeaders||[]).slice(),a=r.stunServers||(t.configuration.stunServers.length?t.configuration.stunServers:null),u=r.turnServers||(t.configuration.turnServers.length?t.configuration.turnServers:null),c=r.mediaHandlerFactory||t.configuration.mediaHandlerFactory,d=c.isSupported;if(this.supportBlackBerryEarlyIce=t.configuration.enableBlackberryEarlyIce,d&&!d())throw new e.Exceptions.NotSupportedError("Media not supported");if(this.RTCConstraints=r.RTCConstraints||{},this.inviteWithoutSdp=r.inviteWithoutSdp||!1,this.anonymous=r.anonymous||!1,this.renderbody=r.renderbody||null,this.rendertype=r.rendertype||"text/plain",r.params.from_tag=this.from_tag,this.contact=t.contact.toString({anonymous:this.anonymous,outbound:this.anonymous?!t.contact.temp_gruu:!t.contact.pub_gruu})+(r.params.contactAppendix?";"+r.params.contactAppendix:""),this.anonymous&&(r.params.from_displayName="Anonymous",r.params.from_uri="sip:anonymous@anonymous.invalid",s.push("P-Preferred-Identity: "+t.configuration.uri.toString()),s.push("Privacy: id")),s.push("Contact: "+this.contact),s.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),this.inviteWithoutSdp&&this.renderbody&&(s.push("Content-Type: "+this.rendertype),s.push("Content-Disposition: render;handling=optional")),t.configuration.rel100===e.C.supported.REQUIRED&&s.push("Require: 100rel"),t.configuration.replaces===e.C.supported.REQUIRED&&s.push("Require: replaces"),r.extraHeaders=s,e.Utils.augment(this,e.ClientContext,[t,e.C.INVITE,n,r]),e.Utils.augment(this,e.Session,[c]),this.status!==o.STATUS_NULL)throw new e.Exceptions.InvalidStateError(this.status);if(this.from_tag=e.Utils.newTag(),this.isCanceled=!1,this.received_100=!1,this.method=e.C.INVITE,this.receiveNonInviteResponse=this.receiveResponse,this.receiveResponse=this.receiveInviteResponse,this.logger=t.getLogger("sip.inviteclientcontext"),a){if(!(i=this.ua.getConfigurationCheck().optional.stunServers(a)))throw new TypeError("Invalid stunServers: "+a);this.stunServers=i}if(u){if(!(i=this.ua.getConfigurationCheck().optional.turnServers(u)))throw new TypeError("Invalid turnServers: "+u);this.turnServers=i}t.applicants[this]=this,this.id=this.request.call_id+this.from_tag,this.mediaHandler=this.mediaHandlerFactory(this,{RTCConstraints:this.RTCConstraints,stunServers:this.stunServers,turnServers:this.turnServers}),this.mediaHandler&&this.mediaHandler.getRemoteStreams&&(this.getRemoteStreams=this.mediaHandler.getRemoteStreams.bind(this.mediaHandler),this.getLocalStreams=this.mediaHandler.getLocalStreams.bind(this.mediaHandler)),e.Utils.optionsOverride(r,"media","mediaConstraints",!0,this.logger,this.ua.configuration.media),this.mediaHint=r.media,this.onInfo=r.onInfo}).prototype={invite:function(t){var n=this;return this.ua.sessions[this.id]=this,this.inviteWithoutSdp?(this.request.body=n.renderbody,this.status=o.STATUS_INVITE_SENT,this.send(),t&&t.resolve()):this.mediaHandler.getDescription(n.mediaHint,t).then(function(e){n.isCanceled||n.status===o.STATUS_TERMINATED||(n.hasOffer=!0,n.request.body=e,n.status=o.STATUS_INVITE_SENT,n.mute({audio:!0}),n.send(),n.emit("invited",n.request),t&&!t.isResolved&&t.resolve())},function(l){!t||t.isResolved?n.status!==o.STATUS_TERMINATED&&(n.failed(null,e.C.causes.WEBRTC_ERROR),n.terminated(null,e.C.causes.WEBRTC_ERROR)):t.reject(l)}),this},receiveInviteResponse:function(t){var n,l=this,r=t.call_id+t.from_tag+t.to_tag,i=[],s={};if(this.status!==o.STATUS_TERMINATED&&t.method===e.C.INVITE){if(this.dialog&&t.status_code>=200&&t.status_code<=299){if(r!==this.dialog.id.toString()){if(!this.createDialog(t,"UAC",!0))return;return this.earlyDialogs[r].sendRequest(this,e.C.ACK,{body:e.Utils.generateFakeSDP(t.body)}),this.earlyDialogs[r].sendRequest(this,e.C.BYE),void(this.status!==o.STATUS_CONFIRMED&&(this.failed(t,e.C.causes.WEBRTC_ERROR),this.terminated(t,e.C.causes.WEBRTC_ERROR)))}if(this.status===o.STATUS_CONFIRMED)return void this.sendRequest(e.C.ACK,{cseq:t.cseq});if(!this.hasAnswer)return}if(this.dialog&&t.status_code<200){if(-1!==this.dialog.pracked.indexOf(t.getHeader("rseq"))||this.dialog.pracked[this.dialog.pracked.length-1]>=t.getHeader("rseq")&&this.dialog.pracked.length>0)return;if(!this.earlyDialogs[r]&&!this.createDialog(t,"UAC",!0))return;if(-1!==this.earlyDialogs[r].pracked.indexOf(t.getHeader("rseq"))||this.earlyDialogs[r].pracked[this.earlyDialogs[r].pracked.length-1]>=t.getHeader("rseq")&&this.earlyDialogs[r].pracked.length>0)return;return i.push("RAck: "+t.getHeader("rseq")+" "+t.getHeader("cseq")),this.earlyDialogs[r].pracked.push(t.getHeader("rseq")),void this.earlyDialogs[r].sendRequest(this,e.C.PRACK,{extraHeaders:i,body:e.Utils.generateFakeSDP(t.body)})}if(this.isCanceled)t.status_code>=100&&t.status_code<200?(this.request.cancel(this.cancelReason,i),this.canceled(null)):t.status_code>=200&&t.status_code<299?(this.acceptAndTerminate(t),this.emit("bye",this.request)):t.status_code>=300&&(n=e.C.REASON_PHRASE[t.status_code]||e.C.causes.CANCELED,this.rejected(t,n),this.failed(t,n),this.terminated(t,n));else switch(!0){case/^100$/.test(t.status_code):this.received_100=!0,this.emit("progress",t);break;case/^1[0-9]{2}$/.test(t.status_code):if(!t.to_tag){this.logger.warn("1xx response received without to tag");break}if(t.hasHeader("contact")&&!this.createDialog(t,"UAC",!0))break;if(this.status=o.STATUS_1XX_RECEIVED,t.hasHeader("require")&&-1!==t.getHeader("require").indexOf("100rel")){if(this.dialog||!this.earlyDialogs[r])break;if(-1!==this.earlyDialogs[r].pracked.indexOf(t.getHeader("rseq"))||this.earlyDialogs[r].pracked[this.earlyDialogs[r].pracked.length-1]>=t.getHeader("rseq")&&this.earlyDialogs[r].pracked.length>0)return;if(this.mediaHandler.hasDescription(t))if(this.hasOffer){if(!this.createDialog(t,"UAC"))break;this.hasAnswer=!0,this.dialog.pracked.push(t.getHeader("rseq")),this.mediaHandler.setDescription(t).then(function(){i.push("RAck: "+t.getHeader("rseq")+" "+t.getHeader("cseq")),l.sendRequest(e.C.PRACK,{extraHeaders:i,receiveResponse:function(){}}),l.status=o.STATUS_EARLY_MEDIA,l.mute(),l.emit("progress",t)},function(n){l.logger.warn(n),l.acceptAndTerminate(t,488,"Not Acceptable Here"),l.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION)})}else{var a=this.earlyDialogs[r],u=a.mediaHandler;a.pracked.push(t.getHeader("rseq")),u.setDescription(t,"offer").then(u.getDescription.bind(u,l.mediaHint)).then(function(n){i.push("RAck: "+t.getHeader("rseq")+" "+t.getHeader("cseq")),a.sendRequest(l,e.C.PRACK,{extraHeaders:i,body:n}),l.status=o.STATUS_EARLY_MEDIA,l.emit("progress",t)}).catch(function(n){if(n instanceof e.Exceptions.GetDescriptionError){if(a.pracked.push(t.getHeader("rseq")),l.status===o.STATUS_TERMINATED)return;l.failed(null,e.C.causes.WEBRTC_ERROR),l.terminated(null,e.C.causes.WEBRTC_ERROR)}else a.pracked.splice(a.pracked.indexOf(t.getHeader("rseq")),1),l.logger.warn("invalid description"),l.logger.warn(n)})}else i.push("RAck: "+t.getHeader("rseq")+" "+t.getHeader("cseq")),this.earlyDialogs[r].pracked.push(t.getHeader("rseq")),this.earlyDialogs[r].sendRequest(this,e.C.PRACK,{extraHeaders:i}),this.emit("progress",t)}else if(this.emit("progress",t),this.supportBlackBerryEarlyIce&&this.hasOffer&&this.mediaHandler.hasDescription(t)){if(this.dialog||this.earlyDialogs[r])break;this.hasAnswer=!0,l.status=o.STATUS_EARLY_MEDIA,l.mute(),this.mediaHandler.setDescription(t).then(function(){},function(n){l.logger.warn(n),l.acceptAndTerminate(t,488,"Not Acceptable Here"),l.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION)})}break;case/^2[0-9]{2}$/.test(t.status_code):if(this.request.cseq+" "+this.request.method!==t.getHeader("cseq"))break;var c=this.status;if(c===o.STATUS_EARLY_MEDIA&&this.supportBlackBerryEarlyIce&&this.hasAnswer&&!this.createDialog(t,"UAC"))break;if(c===o.STATUS_EARLY_MEDIA&&this.dialog){this.status=o.STATUS_CONFIRMED,this.unmute(),s={},this.renderbody&&(i.push("Content-Type: "+this.rendertype),s.extraHeaders=i,s.body=this.renderbody),s.cseq=t.cseq,this.sendRequest(e.C.ACK,s),this.accepted(t);break}if(this.dialog)break;if(this.hasOffer)if(this.hasAnswer)this.renderbody&&(i.push("Content-Type: "+l.rendertype),s.extraHeaders=i,s.body=this.renderbody),this.sendRequest(e.C.ACK,s);else{if(!this.mediaHandler.hasDescription(t)){this.acceptAndTerminate(t,400,"Missing session description"),this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION);break}if(!this.createDialog(t,"UAC"))break;this.hasAnswer=!0,this.mediaHandler.setDescription(t).then(function(){var n={};l.status=o.STATUS_CONFIRMED,l.unmute(),l.renderbody&&(i.push("Content-Type: "+l.rendertype),n.extraHeaders=i,n.body=l.renderbody),n.cseq=t.cseq,l.sendRequest(e.C.ACK,n),l.accepted(t)},function(n){l.logger.warn(n),l.acceptAndTerminate(t,488,"Not Acceptable Here"),l.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION)})}else if(this.earlyDialogs[r]&&this.earlyDialogs[r].mediaHandler.localMedia){if(this.hasOffer=!0,this.hasAnswer=!0,this.mediaHandler=this.earlyDialogs[r].mediaHandler,!this.createDialog(t,"UAC"))break;this.status=o.STATUS_CONFIRMED,this.sendRequest(e.C.ACK,{cseq:t.cseq}),this.unmute(),this.accepted(t)}else{if(!this.mediaHandler.hasDescription(t)){this.acceptAndTerminate(t,400,"Missing session description"),this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION);break}if(!this.createDialog(t,"UAC"))break;this.hasOffer=!0,this.mediaHandler.setDescription(t,"offer").then(this.mediaHandler.getDescription.bind(this.mediaHandler,this.mediaHint)).then(function(n){l.isCanceled||l.status===o.STATUS_TERMINATED||(l.status=o.STATUS_CONFIRMED,l.hasAnswer=!0,l.unmute(),l.sendRequest(e.C.ACK,{body:n,cseq:t.cseq}),l.accepted(t))}).catch(function(n){n instanceof e.Exceptions.GetDescriptionError?l.logger.warn("there was a problem"):(l.logger.warn("invalid description"),l.logger.warn(n),l.acceptAndTerminate(t,488,"Invalid session description"),l.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION))})}break;default:n=e.Utils.sipErrorCause(t.status_code),this.rejected(t,n),this.failed(t,n),this.terminated(t,n)}}},cancel:function(t){if((t=t||{}).extraHeaders=(t.extraHeaders||[]).slice(),this.status===o.STATUS_TERMINATED||this.status===o.STATUS_CONFIRMED)throw new e.Exceptions.InvalidStateError(this.status);this.logger.log("canceling RTCSession");var n=e.Utils.getCancelReason(t.status_code,t.reason_phrase);return this.status===o.STATUS_NULL||this.status===o.STATUS_INVITE_SENT&&!this.received_100?(this.isCanceled=!0,this.cancelReason=n,this.emit("cancel_before_100")):this.status!==o.STATUS_INVITE_SENT&&this.status!==o.STATUS_1XX_RECEIVED&&this.status!==o.STATUS_EARLY_MEDIA||this.request.cancel(n,t.extraHeaders),this.canceled(t)},terminate:function(e){return this.status===o.STATUS_TERMINATED?this:(this.status===o.STATUS_WAITING_FOR_ACK||this.status===o.STATUS_CONFIRMED?this.bye(e):this.cancel(e),this)},receiveRequest:function(t){return t.method,e.C.CANCEL,t.method===e.C.ACK&&this.status===o.STATUS_WAITING_FOR_ACK&&(e.Timers.clearTimeout(this.timers.ackTimer),e.Timers.clearTimeout(this.timers.invite2xxTimer),this.status=o.STATUS_CONFIRMED,this.unmute(),this.accepted()),l.prototype.receiveRequest.apply(this,[t])},onTransportError:function(){this.status!==o.STATUS_CONFIRMED&&this.status!==o.STATUS_TERMINATED&&this.failed(null,e.C.causes.CONNECTION_ERROR)},onRequestTimeout:function(){this.status===o.STATUS_CONFIRMED?this.terminated(null,e.C.causes.REQUEST_TIMEOUT):this.status!==o.STATUS_TERMINATED&&(this.failed(null,e.C.causes.REQUEST_TIMEOUT),this.terminated(null,e.C.causes.REQUEST_TIMEOUT))}},e.InviteClientContext=i}},function(e,t,n){"use strict";e.exports=function(e){var t;return(t=function(n,l,r){var i,s;if(void 0===l)throw new TypeError("Not enough arguments");if(this.logger=n.ua.getLogger("sip.invitecontext.dtmf",n.id),this.owner=n,this.direction=null,i=(r=r||{}).duration||null,s=r.interToneGap||null,"string"==typeof l)l=l.toUpperCase();else{if("number"!=typeof l)throw new TypeError("Invalid tone: "+l);l=l.toString()}if(!l.match(/^[0-9A-D#*]$/))throw new TypeError("Invalid tone: "+l);if(this.tone=l,i&&!e.Utils.isDecimal(i))throw new TypeError("Invalid tone duration: "+i);if(i?i<t.C.MIN_DURATION?(this.logger.warn('"duration" value is lower than the minimum allowed, setting it to '+t.C.MIN_DURATION+" milliseconds"),i=t.C.MIN_DURATION):i>t.C.MAX_DURATION?(this.logger.warn('"duration" value is greater than the maximum allowed, setting it to '+t.C.MAX_DURATION+" milliseconds"),i=t.C.MAX_DURATION):i=Math.abs(i):i=t.C.DEFAULT_DURATION,this.duration=i,s&&!e.Utils.isDecimal(s))throw new TypeError("Invalid interToneGap: "+s);s?s<t.C.MIN_INTER_TONE_GAP?(this.logger.warn('"interToneGap" value is lower than the minimum allowed, setting it to '+t.C.MIN_INTER_TONE_GAP+" milliseconds"),s=t.C.MIN_INTER_TONE_GAP):s=Math.abs(s):s=t.C.DEFAULT_INTER_TONE_GAP,this.interToneGap=s}).prototype=Object.create(e.EventEmitter.prototype),t.prototype.send=function(t){var n,l={};if(this.direction="outgoing",this.owner.status!==e.Session.C.STATUS_CONFIRMED&&this.owner.status!==e.Session.C.STATUS_WAITING_FOR_ACK)throw new e.Exceptions.InvalidStateError(this.owner.status);n=(t=t||{}).extraHeaders?t.extraHeaders.slice():[],l.contentType="application/dtmf-relay",l.body="Signal= "+this.tone+"\r\n",l.body+="Duration= "+this.duration,this.request=this.owner.dialog.sendRequest(this,e.C.INFO,{extraHeaders:n,body:l}),this.owner.emit("dtmf",this.request,this)},t.prototype.receiveResponse=function(t){var n;switch(!0){case/^1[0-9]{2}$/.test(t.status_code):break;case/^2[0-9]{2}$/.test(t.status_code):this.emit("succeeded",{originator:"remote",response:t});break;default:n=e.Utils.sipErrorCause(t.status_code),this.emit("failed",t,n)}},t.prototype.onRequestTimeout=function(){this.emit("failed",null,e.C.causes.REQUEST_TIMEOUT),this.owner.onRequestTimeout()},t.prototype.onTransportError=function(){this.emit("failed",null,e.C.causes.CONNECTION_ERROR),this.owner.onTransportError()},t.prototype.onDialogError=function(t){this.emit("failed",t,e.C.causes.DIALOG_ERROR),this.owner.onDialogError(t)},t.prototype.init_incoming=function(e){this.direction="incoming",this.request=e,e.reply(200),this.tone&&this.duration?this.owner.emit("dtmf",e,this):this.logger.warn("invalid INFO DTMF received, discarded")},t.C={MIN_DURATION:70,MAX_DURATION:6e3,DEFAULT_DURATION:100,MIN_INTER_TONE_GAP:50,DEFAULT_INTER_TONE_GAP:500},t}},function(e,t,n){"use strict";e.exports=function(e){e.Subscription=function(t,n,l,r){if(r=Object.create(r||Object.prototype),this.extraHeaders=r.extraHeaders=(r.extraHeaders||[]).slice(),this.id=null,this.state="init",!l)throw new TypeError("Event necessary to create a subscription.");this.event=l,"number"!=typeof r.expires?(t.logger.warn("expires must be a number. Using default of 3600."),this.expires=3600):this.expires=r.expires,r.extraHeaders.push("Event: "+this.event),r.extraHeaders.push("Expires: "+this.expires),r.body&&(this.body=r.body),this.contact=t.contact.toString(),r.extraHeaders.push("Contact: "+this.contact),r.extraHeaders.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),e.Utils.augment(this,e.ClientContext,[t,e.C.SUBSCRIBE,n,r]),this.logger=t.getLogger("sip.subscription"),this.dialog=null,this.timers={N:null,sub_duration:null},this.errorCodes=[404,405,410,416,480,481,482,483,484,485,489,501,604]},e.Subscription.prototype={subscribe:function(){return"active"===this.state?(this.refresh(),this):"notify_wait"===this.state?this:(e.Timers.clearTimeout(this.timers.sub_duration),e.Timers.clearTimeout(this.timers.N),this.timers.N=e.Timers.setTimeout(this.timer_fire.bind(this),e.Timers.TIMER_N),this.ua.earlySubscriptions[this.request.call_id+this.request.from.parameters.tag+this.event]=this,this.send(),this.state="notify_wait",this)},refresh:function(){"terminated"!==this.state&&"pending"!==this.state&&"notify_wait"!==this.state&&this.dialog.sendRequest(this,e.C.SUBSCRIBE,{extraHeaders:this.extraHeaders,body:this.body})},receiveResponse:function(t){var n,l=e.Utils.getReasonPhrase(t.status_code);"notify_wait"===this.state&&t.status_code>=300||"notify_wait"!==this.state&&-1!==this.errorCodes.indexOf(t.status_code)?this.failed(t,null):/^2[0-9]{2}$/.test(t.status_code)?(this.emit("accepted",t,l),(n=t.getHeader("Expires"))&&n<=this.expires?(this.expires=n,this.timers.sub_duration=e.Timers.setTimeout(this.refresh.bind(this),900*n)):n?(this.logger.warn("Expires header in a 200-class response to SUBSCRIBE with a higher value than the one in the request"),this.failed(t,e.C.INVALID_EXPIRES_HEADER)):(this.logger.warn("Expires header missing in a 200-class response to SUBSCRIBE"),this.failed(t,e.C.EXPIRES_HEADER_MISSING))):t.statusCode>300&&(this.emit("failed",t,l),this.emit("rejected",t,l))},unsubscribe:function(){var t=[];this.state="terminated",t.push("Event: "+this.event),t.push("Expires: 0"),t.push("Contact: "+this.contact),t.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),this.receiveResponse=function(){},this.dialog.sendRequest(this,this.method,{extraHeaders:t,body:this.body}),e.Timers.clearTimeout(this.timers.sub_duration),e.Timers.clearTimeout(this.timers.N),this.timers.N=e.Timers.setTimeout(this.timer_fire.bind(this),e.Timers.TIMER_N)},timer_fire:function(){"terminated"===this.state?(this.terminateDialog(),e.Timers.clearTimeout(this.timers.N),e.Timers.clearTimeout(this.timers.sub_duration),delete this.ua.subscriptions[this.id]):"notify_wait"===this.state||"pending"===this.state?this.close():this.refresh()},close:function(){"notify_wait"===this.state?(this.state="terminated",e.Timers.clearTimeout(this.timers.N),e.Timers.clearTimeout(this.timers.sub_duration),this.receiveResponse=function(){},delete this.ua.earlySubscriptions[this.request.call_id+this.request.from.parameters.tag+this.event]):"terminated"!==this.state&&this.unsubscribe()},createConfirmedDialog:function(t,n){var l;return this.terminateDialog(),(l=new e.Dialog(this,t,n)).invite_seqnum=this.request.cseq,l.local_seqnum=this.request.cseq,!l.error&&(this.dialog=l,!0)},terminateDialog:function(){this.dialog&&(delete this.ua.subscriptions[this.id],this.dialog.terminate(),delete this.dialog)},receiveRequest:function(t){var n,l=this;function r(){n.expires&&(e.Timers.clearTimeout(l.timers.sub_duration),n.expires=Math.min(l.expires,Math.max(n.expires,0)),l.timers.sub_duration=e.Timers.setTimeout(l.refresh.bind(l),900*n.expires))}if(this.matchEvent(t))if(this.dialog||this.createConfirmedDialog(t,"UAS")&&(this.id=this.dialog.id.toString(),delete this.ua.earlySubscriptions[this.request.call_id+this.request.from.parameters.tag+this.event],this.ua.subscriptions[this.id]=this),n=t.parseHeader("Subscription-State"),t.reply(200,e.C.REASON_200),e.Timers.clearTimeout(this.timers.N),this.emit("notify",{request:t}),"terminated"!==this.state)switch(n.state){case"active":this.state="active",r();break;case"pending":"notify_wait"===this.state&&r(),this.state="pending";break;case"terminated":if(e.Timers.clearTimeout(this.timers.sub_duration),n.reason)switch(this.logger.log("terminating subscription with reason "+n.reason),n.reason){case"deactivated":case"timeout":return void this.subscribe();case"probation":case"giveup":return void(n.params&&n.params["retry-after"]?this.timers.sub_duration=e.Timers.setTimeout(l.subscribe.bind(l),n.params["retry-after"]):this.subscribe())}this.close()}else"terminated"===n.state&&(this.terminateDialog(),e.Timers.clearTimeout(this.timers.N),e.Timers.clearTimeout(this.timers.sub_duration),delete this.ua.subscriptions[this.id]);else t.reply(489)},failed:function(e,t){return this.close(),this.emit("failed",e,t),this.emit("rejected",e,t),this},onDialogError:function(t){this.failed(t,e.C.causes.DIALOG_ERROR)},matchEvent:function(e){var t;return e.hasHeader("Event")?e.hasHeader("Subscription-State")?(t=e.parseHeader("event").event,this.event===t||(this.logger.warn("event match failed"),e.reply(481,"Event Match Failed"),!1)):(this.logger.warn("missing Subscription-State header"),!1):(this.logger.warn("missing Event header"),!1)}}}},function(e,t,n){"use strict";e.exports=function(e,t){var l,r;return(l={}).MediaHandler=n(98)(e),l.MediaStreamManager=n(99)(e,t),l.env=t,l.isSupported=function(){return void 0!==r?r:(l.MediaStream=t.MediaStream,l.getUserMedia=t.getUserMedia,l.RTCPeerConnection=t.RTCPeerConnection,l.RTCSessionDescription=t.RTCSessionDescription,l.RTCPeerConnection&&l.RTCSessionDescription?(t.getUserMediaPromise?l.getUserMedia=t.getUserMediaPromise:l.getUserMedia=e.Utils.promisify(t,"getUserMedia"),r=!0):r=!1,r)},l}},function(e,t,n){"use strict";e.exports=function(e){var t=function(t,n){n=n||{},this.logger=t.ua.getLogger("sip.invitecontext.mediahandler",t.id),this.session=t,this.localMedia=null,this.ready=!0,this.mediaStreamManager=n.mediaStreamManager||new e.WebRTC.MediaStreamManager(this.logger),this.audioMuted=!1,this.videoMuted=!1,this.local_hold=!1,this.remote_hold=!1;var l=this.prepareIceServers(n.stunServers,n.turnServers);function r(e,t){e.mediaStreamManager.on&&e.mediaStreamManager.on(t,function(){e.emit.apply(e,[t].concat(Array.prototype.slice.call(arguments)))})}this.RTCConstraints=n.RTCConstraints||{},this.initPeerConnection(l),r(this,"userMediaRequest"),r(this,"userMedia"),r(this,"userMediaFailed")};return(t.defaultFactory=function(e,n){return new t(e,n)}).isSupported=function(){return e.WebRTC.isSupported()},t.prototype=Object.create(e.MediaHandler.prototype,{isReady:{writable:!0,value:function(){return this.ready}},close:{writable:!0,value:function(){this.logger.log("closing PeerConnection"),this._remoteStreams=[],this.peerConnection&&"closed"!==this.peerConnection.signalingState&&(this.peerConnection.close(),this.localMedia&&this.mediaStreamManager.release(this.localMedia))}},getDescription:{writable:!0,value:function(t,n){var l,r=this,i=r.mediaStreamManager.acquire;function s(t){var n=[],l=r.localMedia;if(!r.mediaHint.constraints[t])return function(t,n){t.forEach(function(t){var l=[];t.getTracks().forEach(function(e){e.kind!==n||e.remote||l.push(e)}),l.forEach(function(n){var l=e.WebRTC.MediaStreamManager.streamId(t);n.stop(),t.removeTrack(n),r.peerConnection&&r.peerConnection.removeTrack&&r.peerConnection.getSenders().forEach(function(e){e.track.id===n.id&&r.peerConnection.removeTrack(e)}),r.mediaStreamManager.update(l,t)})})}(l,t),e.Utils.Promise.resolve(l);if(l.forEach(function(e){e.getTracks().some(function(e){return e.kind===t&&!e.remote})||n.push(e)}),0===n.length)return e.Utils.Promise.resolve(l);var s="audio"===t?{constraints:{audio:!0,video:!1}}:{constraints:{audio:!1,video:!0}};return i.call(r.mediaStreamManager,s).then(function(i){var s;if(r.logger.log("acquired local media streams"),i.forEach(function(e){for(var n=0,l=e.getTracks();n<l.length;n++)if(l[n].kind===t&&!l[n].remote){s=l[n];break}}),!s)throw new e.Exceptions.MediaPermissionError("Failed to acquire media type:"+t);return n.forEach(function(t){var n=e.WebRTC.MediaStreamManager.streamId(t),l=s.clone();if(t.addTrack(l),r.mediaStreamManager.update(n,t),r.peerConnection&&r.peerConnection.addTrack)try{r.peerConnection.addTrack(l,t)}catch(e){r.logger.error(e)}}),r.mediaStreamManager.release(i),l},function(e){throw r.logger.error("unable to acquire streams"),r.logger.error(e),e})}return i.length>1&&(i=e.Utils.promisify(this.mediaStreamManager,"acquire",!0)),!0===(t=t||{}).dataChannel&&(t.dataChannel={}),this.mediaHint=t,r.localMedia?(r.logger.log("already have local media"),l=s("video").then(function(e){return r.localMedia=e,s("audio")})):(r.logger.log("acquiring local media"),l=i.call(r.mediaStreamManager,t).then(function(n){var l={video:!1,audio:!1},i=t.constraints;if(i&&(n.forEach(function(e){e.getTracks().forEach(function(e){"video"===e.kind&&(l.video=!0),"audio"===e.kind&&(l.audio=!0)})}),l.video!==!!i.video||l.audio!==!!i.audio))throw r.mediaStreamManager.release(n),new e.Exceptions.MediaPermissionError("Failed to acquire media type:"+(l.video?"audio":"video"));return r.logger.log("acquired local media streams"),r.localMedia=n,r.session.connecting(),n},function(e){throw r.logger.error("unable to acquire streams"),r.logger.error(e),r.session.connecting(),e}).then(this.addStreams.bind(this)).catch(function(e){throw r.localMedia&&(r.mediaStreamManager.release(r.localMedia),r.localMedia=null),e})),l.then(function(){return r.hasOffer("remote")?r.peerConnection.ondatachannel=function(e){r.dataChannel=e.channel,r.emit("dataChannel",r.dataChannel)}:t.dataChannel&&r.peerConnection.createDataChannel&&(r.dataChannel=r.peerConnection.createDataChannel("sipjs",t.dataChannel),r.emit("dataChannel",r.dataChannel)),r.render(),r.createOfferOrAnswer(r.RTCConstraints,n)}).then(function(e){return{body:e,contentType:"application/sdp"}})}},hasDescription:{writeable:!0,value:function(e){return"application/sdp"===e.getHeader("Content-Type")&&!!e.body}},setDescription:{writable:!0,value:function(t,n){var l=this;if((n=n||"answer")===this.phase)return new e.Utils.Promise(function(t,l){l(new e.Exceptions.InvalidStateError("phase error: local:"+this.phase+" remote:"+n))}.bind(this));var r=t.body,i=this.session.env.sdp.parse(r);this.remote_hold=e.Hacks.AllBrowsers.checkMediaState(i,["sendonly","inactive"]),"answer"===n&&e.Hacks.Firefox.dataBackwardCompatibleAnswer(i,this.peerConnection),e.Hacks.AllBrowsers.maskDtls(i),e.Hacks.AllBrowsers.removeUnnecessaryIceAttrs(i),e.Hacks.Firefox.updateRolesFromRemote(i,this.peerConnection,this.logger),e.Hacks.AllBrowsers.needsExplicitlyInactiveSDP(i),e.Hacks.AllBrowsers.fixInactiveProtocol(i),e.Hacks.Firefox.removeH264(i);var s=!e.Hacks.AllBrowsers.isMediaActive(i,"video"),o=!e.Hacks.AllBrowsers.isMediaActive(i,"audio"),a={type:this.hasOffer("local")?"answer":"offer",sdp:r,sdpParsed:i};return this.emit("setDescription",a),(a.promise||e.Utils.Promise.resolve(a)).catch(function(e){throw l.emit("setDescriptionEventFailed",e),e}).then(function(t){t.sdp=l.session.env.sdp.write(t.sdpParsed);var r=new e.WebRTC.RTCSessionDescription(t);return e.Utils.promisify(l.peerConnection,"setRemoteDescription")(r).catch(function(e){throw l.emit("peerConnection-setRemoteDescriptionFailed",e),e}).then(function(){l.phase=n;var e=!1;l.getRemoteStreams(!0).forEach(function(t){t.getTracks().forEach(function(t){t.enabled&&"live"===t.readyState&&(o&&"audio"===t.kind?(t._disabled=!0,t.onended=null,e=!0,l.logger.log("audio track stopped:",t)):s&&"video"===t.kind?(t._disabled=!0,t.onended=null,e=!0,l.logger.log("video track stopped:",t)):t._disabled&&(delete t._disabled,e=!0,l.logger.log("track resumed:",t)))})}),e&&l.render(l.mediaHint&&l.mediaHint.render?{remote:l.mediaHint.render.remote}:void 0),l.emit("remoteDescription")})})}},getReferMedia:{writable:!0,value:function(){function e(e,t){return t[e]().length>0}function t(t){return this.getLocalStreams().some(e.bind(null,t))&&this.getRemoteStreams().some(e.bind(null,t))}return{constraints:{audio:t.call(this,"getAudioTracks"),video:t.call(this,"getVideoTracks")}}}},updateIceServers:{writeable:!0,value:function(e){var t=this.prepareIceServers(e.stunServers,e.turnServers),n=e.RTCConstraints||this.RTCConstraints,l=!1;if(JSON.stringify(n)!==JSON.stringify(this.RTCConstraints)&&(this.RTCConstraints=n,l=!0),l||JSON.stringify(this.servers)===JSON.stringify(t)||(l=!0),l){if(this.pc&&"stable"!==this.pc.signalingState)throw new Error("cannot update pc when it is in a state");this.initPeerConnection(t)}}},isMuted:{writable:!0,value:function(){return{audio:this.audioMuted,video:this.videoMuted}}},mute:{writable:!0,value:function(e){if(0!==this.getLocalStreams().length){var t=!1,n=!1;return(e=e||{audio:this.getLocalStreams()[0].getAudioTracks().length>0,video:this.getLocalStreams()[0].getVideoTracks().length>0}).audio&&!this.audioMuted&&(t=!0,this.audioMuted=!0,this.toggleMuteAudio(!0)),e.video&&!this.videoMuted&&(n=!0,this.videoMuted=!0,this.toggleMuteVideo(!0)),t||n?{audio:t,video:n}:void 0}}},unmute:{writable:!0,value:function(e){if(0!==this.getLocalStreams().length){var t=!1,n=!1;return(e=e||{audio:this.getLocalStreams()[0].getAudioTracks().length>0,video:this.getLocalStreams()[0].getVideoTracks().length>0}).audio&&this.audioMuted&&(t=!0,this.audioMuted=!1,this.toggleMuteAudio(!1)),e.video&&this.videoMuted&&(n=!0,this.videoMuted=!1,this.toggleMuteVideo(!1)),t||n?{audio:t,video:n}:void 0}}},hold:{writable:!0,value:function(){this.local_hold=!0,this.toggleMuteAudio(!0),this.toggleMuteVideo(!0)}},unhold:{writable:!0,value:function(){this.local_hold=!1,this.audioMuted||this.toggleMuteAudio(!1),this.videoMuted||this.toggleMuteVideo(!1)}},getLocalStreams:{writable:!0,value:function(){var t=this.peerConnection;if(t&&"closed"===t.signalingState)return this.logger.warn("peerConnection is closed, getLocalStreams returning []"),[];if(e.Hacks.Firefox.isFirefox()&&t.getSenders){var n=t.getSenders();t._localStream=t._localStream||new this.session.env.MediaStream;var l=[t._localStream];return t._localStream.getTracks().forEach(function(e){t._localStream.removeTrack(e)}),n.forEach(function(e){e.track&&t._localStream.addTrack(e.track)}),l}return t.getLocalStreams&&t.getLocalStreams()||t.localStreams||[]}},getRemoteStreams:{writable:!0,value:function(t){var n=this.peerConnection;if(n&&"closed"===n.signalingState)return this.logger.warn("peerConnection is closed, getRemoteStreams returning this._remoteStreams"),this._remoteStreams;if(e.Hacks.Firefox.isFirefox()&&n.getReceivers){var l=n.getReceivers();n._remoteStream=n._remoteStream||new this.session.env.MediaStream;var r=[n._remoteStream];return n._remoteStream.getTracks().forEach(function(e){n._remoteStream.removeTrack(e)}),l.forEach(function(e){!e.track||!t&&e.track._disabled||n._remoteStream.addTrack(e.track)}),r}return n.getRemoteStreams&&n.getRemoteStreams()||n.remoteStreams||[]}},render:{writable:!0,value:function(t){if(!(t=t||this.mediaHint&&this.mediaHint.render))return!1;this.mediaHint.render=t;var n={local:"getLocalStreams",remote:"getRemoteStreams"};Object.keys(n).forEach(function(l){var r=this[n[l]]();e.WebRTC.MediaStreamManager.render(r,t[l],l,this.mediaStreamManager)}.bind(this))}},hasOffer:{writable:!0,value:function(e){var t="have-"+e+"-offer";return this.peerConnection.signalingState===t}},prepareIceServers:{writable:!0,value:function(e,t){var n=[],l=this.session.ua.configuration;return e=e||l.stunServers,t=t||l.turnServers,[].concat(e).forEach(function(e){n.push({urls:e})}),[].concat(t).forEach(function(e){var t={urls:e.urls};e.username&&(t.username=e.username),e.password&&(t.credential=e.password),n.push(t)}),n}},initPeerConnection:{writable:!0,value:function(t){var n=this,l=this.session.ua.configuration;this.onIceCompleted=function(){n.onIceCompletedDeferred||(n.logger.log("Pending Ice gathering complete"),n.onIceCompletedDeferred=e.Utils.defer(),n.onIceCompletedDeferred.promise.then(function(t){n.logger.log("Ice gathering complete"),n.emit("iceGatheringComplete",t),n.iceCheckingTimer&&(e.Timers.clearTimeout(n.iceCheckingTimer),n.iceCheckingTimer=null)}),n.startIceCheckingTimer());return n.onIceCompletedDeferred},this.peerConnection&&this.peerConnection.close();var r={iceServers:t,rtcpMuxPolicy:"negotiate",bundlePolicy:"max-compat"};function i(e){n._remoteStreams.push(e),n.render(n.mediaHint&&n.mediaHint.render?{remote:n.mediaHint.render.remote}:void 0),n.emit("addStream",{stream:e})}l.rtcpMuxPolicy&&(r.rtcpMuxPolicy=l.rtcpMuxPolicy),this.peerConnection=new e.WebRTC.RTCPeerConnection(r),this._remoteStreams=[],this.servers=t,void 0!==this.peerConnection.ontrack?this.peerConnection.ontrack=function(e){n.logger.log("track stream added: "+e.streams[0].id),i(e.streams[0])}:this.peerConnection.onaddstream=function(e){n.logger.log("stream added: "+e.stream.id),i(e.stream)},this.peerConnection.onremovestream=function(e){n.logger.log("stream removed: "+e.stream.id),n._remoteStreams=n._remoteStreams.filter(function(t){return t.id!==e.stream.id})},this.startIceCheckingTimer=function(t){n.iceCheckingTimer&&t&&(e.Timers.clearTimeout(n.iceCheckingTimer),n.iceCheckingTimer=void 0);var r=l.iceCheckingTimeout;e.Hacks.Firefox.isFirefox()&&"offer"===n.phase&&(r=Math.min(r,8e3),n.logger.debug("Overriding ice checking timeout to: "+r)),n.iceCheckingTimer||(n.iceCheckingTimer=e.Timers.setTimeout(function(){n.logger.log("RTCIceChecking Timeout Triggered after "+r+" milliseconds"),n.onIceCompleted().resolve(this)}.bind(this.peerConnection),r))},this.peerConnection.onicecandidate=function(e){n.emit("iceCandidate",e),e.candidate?(n.logger.debug("ICE candidate received: "+(null===e.candidate.candidate?null:e.candidate.candidate.trim())),n.startIceCheckingTimer()):(n.logger.log("ICE candidate completed due to null candidate"),n.onIceCompleted().resolve(this))},this.peerConnection.onicegatheringstatechange=function(){n.logger.log("RTCIceGatheringState changed: "+this.iceGatheringState),"gathering"===this.iceGatheringState&&n.emit("iceGathering",this),"complete"===this.iceGatheringState&&n.onIceCompleted().resolve(this)},this.peerConnection.oniceconnectionstatechange=function(){var e;switch("checking"===this.iceConnectionState&&n.startIceCheckingTimer(!0),n.logger.log("Ice connection state changed: "+this.iceConnectionState),this.iceConnectionState){case"new":e="iceConnection";break;case"checking":e="iceConnectionChecking";break;case"connected":e="iceConnectionConnected";break;case"completed":e="iceConnectionCompleted";break;case"failed":e="iceConnectionFailed";break;case"disconnected":e="iceConnectionDisconnected";break;case"closed":e="iceConnectionClosed";break;default:return void n.logger.warn("Unknown iceConnection state:",this.iceConnectionState)}n.emit(e,this)},this.peerConnection.onstatechange=function(){n.logger.log('PeerConnection state changed to "'+this.readyState+'"')}}},createOfferOrAnswer:{writable:!0,value:function(t,n){var l,r=this,i=r.peerConnection;return r.ready=!1,l=r.hasOffer("remote")?"createAnswer":"createOffer",e.Utils.promisify(i,l,!0)(t).catch(function(e){throw r.emit("peerConnection-"+l+"Failed",e),e}).then(function(n){return new e.Utils.Promise(function(s,o){var a=n.sdp,u=r.session.env.sdp.parse(a),c=r.mediaHint.constraints||t;e.Hacks.AllBrowsers.cleanupInactiveMedia(u),"createAnswer"===l?(e.Hacks.Firefox.fixRolesWithAnswer(u,i,r.logger),e.Hacks.AllBrowsers.needsExplicitlyInactiveSDP(u),e.Hacks.AllBrowsers.fixIceAttributes(u)):(e.Hacks.Firefox.updateRolesWithOffer(u,i),e.Hacks.Firefox.removeH264(u),e.Hacks.Firefox.dataBackwardCompatible(u,i),e.Hacks.AllBrowsers.removeGroupBundle(u),e.Hacks.AllBrowsers.removeMediaCodec(u,"audio","telephone-event")),!1===c.audio&&e.Hacks.AllBrowsers.stopSendingMedia(u,"audio"),!1===c.video&&e.Hacks.AllBrowsers.stopSendingMedia(u,"video"),r.local_hold&&e.Hacks.AllBrowsers.stopReceivingMedia(u),a=r.session.env.sdp.write(u);var d={type:n.type,sdp:a};delete r.onIceCompletedDeferred,i.setLocalDescription(d,function(){s()},function(e){o(e)})})}).then(function(){var t=e.Utils.defer();if(n&&(n.isResolved=!0,n.resolve()),r.onIceCompleted().promise.then(t.resolve),"complete"===i.iceGatheringState&&"checking"!==i.iceConnectionState&&("connected"===i.iceConnectionState||"completed"===i.iceConnectionState)&&!e.Hacks.Firefox.isFirefox())var l=e.Timers.setTimeout(function(){"complete"!==i.iceGatheringState||"checking"===i.iceConnectionState||"connected"!==i.iceConnectionState&&"completed"!==i.iceConnectionState||r.onIceCompleted().resolve(i),e.Timers.clearTimeout(l),l=null},50);return t.promise}).then(function(){var t=i.localDescription.sdp,n=r.session.env.sdp.parse(t);e.Hacks.Firefox.hasMissingCLineInSDP(n),e.Hacks.AllBrowsers.needsExplicitlyInactiveSDP(n),e.Hacks.AllBrowsers.cleanupInactiveMedia(n),r.local_hold&&e.Hacks.AllBrowsers.stopReceivingMedia(n),e.Hacks.AllBrowsers.unmaskDtls(n),r.session.ua.configuration.hackStripTcp&&e.Hacks.AllBrowsers.stripCandidates(n,["transport:tcp"]),r.phase="createOffer"===l?"offer":"answer";var s={type:r.phase,sdp:t,sdpParsed:n};return r.emit("getDescription",s),s.promise||e.Utils.Promise.resolve(s)}).then(function(e){return e.sdp=r.session.env.sdp.write(e.sdpParsed),r.ready=!0,e.sdp}).catch(function(t){throw r.logger.error(t),r.ready=!0,new e.Exceptions.GetDescriptionError(t)})}},addStreams:{writable:!0,value:function(t){try{(t=[].concat(t)).forEach(function(e){this.peerConnection.addStream(e)},this)}catch(t){return this.logger.error("error adding stream"),this.logger.error(t),e.Utils.Promise.reject(t)}return e.Utils.Promise.resolve()}},toggleMuteHelper:{writable:!0,value:function(e,t){this.getLocalStreams().forEach(function(n){n[e]().forEach(function(e){e.enabled=!t})})}},toggleMuteAudio:{writable:!0,value:function(e){this.toggleMuteHelper("getAudioTracks",e)}},toggleMuteVideo:{writable:!0,value:function(e){this.toggleMuteHelper("getVideoTracks",e)}}}),t}},function(e,t,n){"use strict";e.exports=function(e,t){var n=function(t,n){if(!e.WebRTC.isSupported())throw new e.Exceptions.NotSupportedError("Media not supported");this.mediaHint=n||{constraints:{audio:!0,video:!0}},this.acquisitions={},this.streamLocalDisplay=void 0};return n.streamId=function(e){return e.getAudioTracks().concat(e.getVideoTracks()).map(function(e){return e.id}).join("")},n.render=function(n,l,r,i){if(!l)return!1;if(Array.isArray(l)&&!l.length)throw new TypeError("elements must not be empty");l=[].concat(l),[].concat(n).forEach(function(n,l,s){var o=n[s%n.length];"function"==typeof o&&(o=o()),function(e,n){var l=n,s="local"===r?i.streamLocalDisplay:null;s&&n.getVideoTracks().some(function(e){return"live"===e.readyState||"muted"===e.readyState})?l=s:s&&(i.streamLocalDisplay.getTracks().forEach(function(e){e.stop()}),i.streamLocalDisplay=null),t.attachMediaStream?t.attachMediaStream(e,l):e.srcObject=l,"local"===r&&(e.muted=!0)}(o,l),function(t){void 0!==t.ensurePlayingIntervalId&&e.Timers.clearInterval(t.ensurePlayingIntervalId),t.load&&t.load(),t.ensurePlayingIntervalId=e.Timers.setInterval(function(){t.paused&&t.srcObject?t.play():(e.Timers.clearInterval(t.ensurePlayingIntervalId),t.ensurePlayingIntervalId=void 0)}.bind(t),100)}(o)}.bind(null,l))},n.prototype=Object.create(e.EventEmitter.prototype,{acquire:{writable:!0,value:function(t){t=Object.keys(t||{}).length?t:this.mediaHint;var l=function(t,l){return(l=[].concat(l)).forEach(function(e){var l=n.streamId(e);this.acquisitions[l]=!!t},this),e.Utils.Promise.resolve(l)}.bind(this);if(t.stream)return l(!0,t.stream);var r=t.constraints||this.mediaHint&&this.mediaHint.constraints||{audio:!0,video:!0},i=e.Utils.defer();return e.Timers.setTimeout(function(){this.emit("userMediaRequest",r);var t=function(e,t){var n=Array.prototype.slice.call(arguments,2),l=[e].concat(n);return this.emit.apply(this,l),t.apply(null,n)}.bind(this);r.audio||r.video?i.resolve(e.WebRTC.getUserMedia(r).then(function(t){if(r.video){var n={audio:!1,video:!0};return new e.Utils.Promise(function(l,r){e.WebRTC.getUserMedia(n).then(function(e){this.streamLocalDisplay=e,l(t)}.bind(this)).catch(r)}.bind(this))}return new e.Utils.Promise(function(e){e(t)})}.bind(this)).then(t.bind(this,"userMedia",l.bind(null,!1)),t.bind(this,"userMediaFailed",function(e){throw e}))):i.resolve([])}.bind(this),0),i.promise}},update:{writable:!0,value:function(e,t){if(void 0===this.acquisitions[e])throw Error("stream "+e+" not found");this.acquisitions[n.streamId(t)]=this.acquisitions[e],delete this.acquisitions[e]}},release:{writable:!0,value:function(e){(e=[].concat(e)).forEach(function(e){var t=n.streamId(e);!1===this.acquisitions[t]&&(e.getTracks().forEach(function(e){e.stop()}),this.streamLocalDisplay&&(this.streamLocalDisplay.getTracks().forEach(function(e){e.stop()}),this.streamLocalDisplay=null)),delete this.acquisitions[t]},this)}}}),n}},function(e,t,n){"use strict";(function(t){e.exports=function(e,n){var l,r={STATUS_INIT:0,STATUS_STARTING:1,STATUS_READY:2,STATUS_USER_CLOSED:3,STATUS_NOT_READY:4,CONFIGURATION_ERROR:1,NETWORK_ERROR:2,ALLOWED_METHODS:["ACK","CANCEL","INVITE","MESSAGE","BYE","OPTIONS","INFO","NOTIFY","REFER"],ACCEPTED_BODY_TYPES:["application/sdp","application/dtmf-relay"],MAX_FORWARDS:70,TAG_LENGTH:10};function i(t){if(t instanceof Function)return t.initialize||(t.initialize=function(){return e.Utils.Promise.resolve()}),t}function s(e){if(e instanceof Function)return e}((l=function(t){var n=this;function l(e){return n.emit.bind(n,e)}r.ACCEPTED_BODY_TYPES=r.ACCEPTED_BODY_TYPES.toString(),this.log=new e.LoggerFactory,this.logger=this.getLogger("sip.ua"),this.cache={credentials:{}},this.configuration={},this.dialogs={},this.applicants={},this.data={},this.sessions={},this.subscriptions={},this.earlySubscriptions={},this.transport=null,this.contact=null,this.status=r.STATUS_INIT,this.error=null,this.transactions={nist:{},nict:{},ist:{},ict:{}},this.transportRecoverAttempts=0,this.transportRecoveryTimer=null,Object.defineProperties(this,{transactionsCount:{get:function(){var e,t=["nist","nict","ist","ict"],n=0;for(e in t)n+=Object.keys(this.transactions[t[e]]).length;return n}},nictTransactionsCount:{get:function(){return Object.keys(this.transactions.nict).length}},nistTransactionsCount:{get:function(){return Object.keys(this.transactions.nist).length}},ictTransactionsCount:{get:function(){return Object.keys(this.transactions.ict).length}},istTransactionsCount:{get:function(){return Object.keys(this.transactions.ist).length}}}),void 0===t?t={}:("string"==typeof t||t instanceof String)&&(t={uri:t}),t.log&&(t.log.hasOwnProperty("builtinEnabled")&&(this.log.builtinEnabled=t.log.builtinEnabled),t.log.hasOwnProperty("level")&&(this.log.level=t.log.level),t.log.hasOwnProperty("connector")&&(this.log.connector=t.log.connector));try{this.loadConfig(t)}catch(e){throw this.status=r.STATUS_NOT_READY,this.error=r.CONFIGURATION_ERROR,e}this.registerContext=new e.RegisterContext(this),this.registerContext.on("failed",l("registrationFailed")),this.registerContext.on("registered",l("registered")),this.registerContext.on("unregistered",l("unregistered")),this.configuration.autostart&&this.start()}).prototype=Object.create(e.EventEmitter.prototype)).register=function(e){return this.configuration.register=!0,this.registerContext.register(e),this},l.prototype.unregister=function(e){this.configuration.register=!1;var t=this.registerContext;return this.afterConnected(t.unregister.bind(t,e)),this},l.prototype.isRegistered=function(){return this.registerContext.registered},l.prototype.isConnected=function(){return!!this.transport&&this.transport.connected},l.prototype.afterConnected=function(e){this.isConnected()?e():this.once("connected",e)},l.prototype.invite=function(t,n,l){var r=new e.InviteClientContext(this,t,n);return this.afterConnected(r.invite.bind(r,l)),this.emit("inviteSent",r),r},l.prototype.subscribe=function(t,n,l){var r=new e.Subscription(this,t,n,l);return this.afterConnected(r.subscribe.bind(r)),r},l.prototype.message=function(t,n,l){if(void 0===n)throw new TypeError("Not enough arguments");return(l=Object.create(l||Object.prototype)).contentType||(l.contentType="text/plain"),l.body=n,this.request(e.C.MESSAGE,t,l)},l.prototype.request=function(t,n,l){var r=new e.ClientContext(this,t,n,l);return this.afterConnected(r.send.bind(r)),r},l.prototype.stop=function(){var l,i,s,o=this;if(this.logger.log("user requested closure..."),this.status===r.STATUS_USER_CLOSED)return this.logger.warn("UA already closed"),this;for(l in e.Timers.clearTimeout(this.transportRecoveryTimer),this.transportRecoveryTimer=null,this.logger.log("closing registerContext"),this.registerContext.close(),this.sessions)this.logger.log("closing session "+l),this.sessions[l].terminate();for(i in this.subscriptions)this.logger.log("unsubscribing from subscription "+i),this.subscriptions[i].close();for(i in this.earlySubscriptions)this.logger.log("unsubscribing from early subscription "+i),this.earlySubscriptions[i].close();for(s in this.applicants)this.applicants[s].close();return this.status=r.STATUS_USER_CLOSED,0===this.nistTransactionsCount&&0===this.nictTransactionsCount?(this.transport.disconnect(),this.transport=null):this.on("transactionDestroyed",function e(){0===o.nistTransactionsCount&&0===o.nictTransactionsCount&&(o.removeListener("transactionDestroyed",e),o.transport.disconnect(),o.transport=null)}),"function"==typeof n.removeEventListener&&(t.chrome&&t.chrome.app&&t.chrome.app.runtime||n.removeEventListener("unload",this.environListener)),this},l.prototype.start=function(){var l;return this.logger.log("user requested startup..."),this.status===r.STATUS_INIT?(l=this.getNextWsServer(),this.status=r.STATUS_STARTING,new e.Transport(this,l)):this.status===r.STATUS_USER_CLOSED?(this.logger.log("resuming"),this.status=r.STATUS_READY,this.transport.connect()):this.status===r.STATUS_STARTING?this.logger.log("UA is in STARTING status, not opening new connection"):this.status===r.STATUS_READY?this.logger.log("UA is in READY status, not resuming"):this.logger.error("Connection is down. Auto-Recovery system is trying to connect"),this.configuration.autostop&&"function"==typeof n.addEventListener&&(t.chrome&&t.chrome.app&&t.chrome.app.runtime||(this.environListener=this.stop.bind(this),n.addEventListener("unload",this.environListener))),this},l.prototype.normalizeTarget=function(t){return e.Utils.normalizeTarget(t,this.configuration.hostportParams)},l.prototype.saveCredentials=function(e){return this.cache.credentials[e.realm]=this.cache.credentials[e.realm]||{},this.cache.credentials[e.realm][e.uri]=e,this},l.prototype.getCredentials=function(e){var t,n;return t=e.ruri.host,this.cache.credentials[t]&&this.cache.credentials[t][e.ruri]&&((n=this.cache.credentials[t][e.ruri]).method=e.method),n},l.prototype.getLogger=function(e,t){return this.log.getLogger(e,t)},l.prototype.onTransportClosed=function(t){var n,l,r,i=["nict","ict","nist","ist"];for(t.server.status=e.Transport.C.STATUS_DISCONNECTED,this.logger.log("connection state set to "+e.Transport.C.STATUS_DISCONNECTED),r=i.length,n=0;n<r;n++)for(l in this.transactions[i[n]])this.transactions[i[n]][l].onTransportError();this.contact.pub_gruu||this.closeSessionsOnTransportError()},l.prototype.onTransportError=function(t){var n;this.logger.log("transport "+t.server.ws_uri+" failed | connection state set to "+e.Transport.C.STATUS_ERROR),t.server.status=e.Transport.C.STATUS_ERROR,this.emit("disconnected",{transport:t}),this.status!==r.STATUS_USER_CLOSED&&((n=this.getNextWsServer())?new e.Transport(this,n):(this.closeSessionsOnTransportError(),this.error&&this.error===r.NETWORK_ERROR||(this.status=r.STATUS_NOT_READY,this.error=r.NETWORK_ERROR),this.recoverTransport()))},l.prototype.onTransportConnected=function(t){this.transport=t,this.transportRecoverAttempts=0,t.server.status=e.Transport.C.STATUS_READY,this.logger.log("connection state set to "+e.Transport.C.STATUS_READY),this.status!==r.STATUS_USER_CLOSED&&(this.status=r.STATUS_READY,this.error=null,this.configuration.register&&this.configuration.authenticationFactory.initialize().then(function(){this.registerContext.onTransportConnected()}.bind(this)),this.emit("connected",{transport:t}))},l.prototype.onTransportConnecting=function(e,t){this.emit("connecting",{transport:e,attempts:t})},l.prototype.newTransaction=function(e){this.transactions[e.type][e.id]=e,this.emit("newTransaction",{transaction:e})},l.prototype.destroyTransaction=function(e){delete this.transactions[e.type][e.id],this.emit("transactionDestroyed",{transaction:e})},l.prototype.receiveRequest=function(t){var n,l,i,s,o,a,u=t.method,c=this;function d(e){if(!e)return!1;if(e.user===t.ruri.user)return!0;if(e.parameters)for(var n in e.parameters)if(e.parameters.hasOwnProperty(n)&&n.toLowerCase().match(c.configuration.supportedURISchemes)&&e.parameters[n].toLowerCase()===t.ruri.user.toLowerCase())return!0;return!1}if(!(d(this.configuration.uri)||d(this.contact.uri)||d(this.contact.pub_gruu)||d(this.contact.temp_gruu)))return this.logger.warn("Request-URI does not point to us"),void(t.method!==e.C.ACK&&t.reply_sl(404));if(!t.ruri.scheme||t.ruri.scheme.toLowerCase().match(this.configuration.supportedURISchemes)){if(!e.Transactions.checkTransaction(this,t))if(u===e.C.OPTIONS?(new e.Transactions.NonInviteServerTransaction(t,this),t.reply(200,null,["Allow: "+e.UA.C.ALLOWED_METHODS.toString(),"Accept: "+r.ACCEPTED_BODY_TYPES])):u===e.C.MESSAGE?((i=new e.ServerContext(this,t)).body=t.body,i.content_type=t.getHeader("Content-Type")||"text/plain",t.reply(200,null),this.emit("message",i)):u!==e.C.INVITE&&u!==e.C.ACK&&new e.ServerContext(this,t),t.to_tag)(n=this.findDialog(t))?(u===e.C.INVITE&&new e.Transactions.InviteServerTransaction(t,this),n.receiveRequest(t)):u===e.C.NOTIFY?(l=this.findSession(t),s=this.findEarlySubscription(t),l?l.receiveRequest(t):s?s.receiveRequest(t):(this.logger.warn("received NOTIFY request for a non existent session or subscription"),t.reply(481,"Subscription does not exist"))):u!==e.C.ACK&&t.reply(481);else switch(u){case e.C.INVITE:if(o=this.configuration.replaces!==e.C.supported.UNSUPPORTED&&t.parseHeader("replaces")){if(!(a=this.dialogs[o.call_id+o.replaces_to_tag+o.replaces_from_tag]))return void t.reply_sl(481,null);if(a.owner.status===e.Session.C.STATUS_TERMINATED)return void t.reply_sl(603,null);if(a.state===e.Dialog.C.STATUS_CONFIRMED&&o.early_only)return void t.reply_sl(486,null)}var p=this.configuration.mediaHandlerFactory.isSupported;!p||p()?((l=new e.InviteServerContext(this,t)).replacee=a&&a.owner,l.on("invite",function(){c.emit("invite",this)}),l.on("earlyInvite",function(e){c.emit("earlyInvite",{session:this,defered:e.defered})})):(this.logger.warn("INVITE received but WebRTC is not supported"),t.reply(488));break;case e.C.BYE:t.reply(481);break;case e.C.CANCEL:(l=this.findSession(t))?l.receiveRequest(t):this.logger.warn("received CANCEL request for a non existent session");break;case e.C.ACK:break;case e.C.NOTIFY:this.configuration.allowLegacyNotifications&&this.listeners("notify").length>0?(t.reply(200,null),c.emit("notify",{request:t})):t.reply(481,"Subscription does not exist");break;default:t.reply(405)}}else t.reply_sl(416)},l.prototype.findSession=function(e){return this.sessions[e.call_id+e.from_tag]||this.sessions[e.call_id+e.to_tag]||null},l.prototype.findDialog=function(e){return this.dialogs[e.call_id+e.from_tag+e.to_tag]||this.dialogs[e.call_id+e.to_tag+e.from_tag]||null},l.prototype.findEarlySubscription=function(e){return this.earlySubscriptions[e.call_id+e.to_tag+e.getHeader("event")]||null},l.prototype.getNextWsServer=function(){var t,n,l,r=[];for(n=this.configuration.wsServers.length,t=0;t<n;t++)(l=this.configuration.wsServers[t]).status!==e.Transport.C.STATUS_ERROR&&(0===r.length?r.push(l):l.weight>r[0].weight?r=[l]:l.weight===r[0].weight&&r.push(l));return r[t=Math.floor(Math.random()*r.length)]},l.prototype.closeSessionsOnTransportError=function(){var e;for(e in this.sessions)this.sessions[e].onTransportError();this.registerContext.onTransportClosed()},l.prototype.recoverTransport=function(t){var n,l,r,i,s;for(i=(t=t||this).transportRecoverAttempts,l=t.configuration.wsServers.length,n=0;n<l;n++)t.configuration.wsServers[n].status=0;s=t.getNextWsServer(),(r=Math.floor(Math.random()*Math.pow(2,i)+1)*t.configuration.connectionRecoveryMinInterval)>t.configuration.connectionRecoveryMaxInterval&&(this.logger.log("time for next connection attempt exceeds connectionRecoveryMaxInterval, resetting counter"),r=t.configuration.connectionRecoveryMinInterval,i=0),this.logger.log("next connection attempt in "+r+" seconds"),this.transportRecoveryTimer&&(e.Timers.clearTimeout(this.transportRecoveryTimer),this.transportRecoveryTimer=null),this.transportRecoveryTimer=e.Timers.setTimeout(function(){t.transportRecoverAttempts=i+1,new e.Transport(t,s)},1e3*r)};var o=function(){};o.prototype.handleRequest=function(e){return!1},l.prototype.loadConfig=function(t){var n,l,r,a,u,c={viaHost:e.Utils.createRandomToken(12)+".invalid",uri:new e.URI("sip","anonymous."+e.Utils.createRandomToken(6),"anonymous.invalid",null,null),wsServers:[{scheme:"WSS",sip_uri:"<sip:edge.sip.onsip.com;transport=ws;lr>",status:0,weight:0,ws_uri:"wss://edge.sip.onsip.com"}],custom:{},displayName:"",password:null,registerExpires:600,register:!0,registrarServer:null,wsServerMaxReconnection:3,wsServerReconnectionTimeout:4,connectionRecoveryMinInterval:2,connectionRecoveryMaxInterval:30,keepAliveInterval:0,extraSupported:[],usePreloadedRoute:!1,userAgentString:e.C.USER_AGENT,iceCheckingTimeout:5e3,noAnswerTimeout:60,stunServers:[],turnServers:[],traceSip:!1,hackViaTcp:!1,hackIpInContact:!1,hackWssInTransport:!1,hackAllowUnregisteredOptionTags:!1,hackCleanJitsiSdpImageattr:!1,hackStripTcp:!1,contactTransport:"ws",forceRport:!1,autostart:!0,autostop:!0,rel100:e.C.supported.UNSUPPORTED,replaces:e.C.supported.UNSUPPORTED,mediaHandlerFactory:e.WebRTC.MediaHandler.defaultFactory,authenticationFactory:i(function(t){return new e.DigestAuthentication(t)}),allowLegacyNotifications:!1,contactUser:e.Utils.createRandomToken(8),contactParams:null,contactHeaders:{},challengeRequestHandlerFactory:s(function(){return new o}),keepAliveData:null,disableRegId:!1,contactRegistrationAppendix:null,supportedURISchemes:"^(sips?)$",socketFactory:e.Transport.defaultFactory,enableBlackberryEarlyIce:!1};function d(e,n){var l=e.replace(/([a-z][A-Z])/g,function(e){return e[0]+"_"+e[1].toLowerCase()});if(e!==l){var r=t.hasOwnProperty(e);t.hasOwnProperty(l)&&(n.warn(l+" is deprecated, please use "+e),r&&n.warn(e+" overriding "+l)),t[e]=r?t[e]:t[l]}}var p=this.getConfigurationCheck();for(n in p.mandatory){if(d(n,this.logger),!t.hasOwnProperty(n))throw new e.Exceptions.ConfigurationError(n);if(l=t[n],void 0===(r=p.mandatory[n](l)))throw new e.Exceptions.ConfigurationError(n,l);c[n]=r}e.Utils.optionsOverride(t,"rel100","reliable",!0,this.logger,e.C.supported.UNSUPPORTED);var g=["stunServers","turnServers"];for(n in p.optional)if(d(n,this.logger),t.hasOwnProperty(n)){if((l=t[n])instanceof Array&&0===l.length&&g.indexOf(n)<0)continue;if(null===l||""===l||void 0===l)continue;if("number"==typeof l&&isNaN(l))continue;if(void 0===(r=p.optional[n](l)))throw new e.Exceptions.ConfigurationError(n,l);c[n]=r}if(c.connectionRecoveryMaxInterval<c.connectionRecoveryMinInterval)throw new e.Exceptions.ConfigurationError("connectionRecoveryMaxInterval",c.connectionRecoveryMaxInterval);0===c.displayName&&(c.displayName="0"),c.instanceId||(c.instanceId=e.Utils.newUUID()),c.sipjsId=e.Utils.createRandomToken(5),(a=c.uri.clone()).user=null,c.hostportParams=a.toRaw().replace(/^sip:/i,""),c.authorizationUser||(c.authorizationUser=c.uri.user),c.registrarServer||((u=c.uri.clone()).user=null,c.registrarServer=u),c.noAnswerTimeout=1e3*c.noAnswerTimeout,c.hackIpInContact&&("boolean"==typeof c.hackIpInContact?c.viaHost=e.Utils.getRandomTestNetIP():"string"==typeof c.hackIpInContact&&(c.viaHost=c.hackIpInContact)),c.hackWssInTransport&&(c.contactTransport="wss"),c.contactHeaders.transport=c.contactTransport,this.contact={pub_gruu:null,temp_gruu:null,uri:new e.URI("sip",c.contactUser,c.viaHost,c.contactParams,c.contactHeaders),toString:function(e){var t=(e=e||{}).anonymous||null,n=e.outbound||null,l="<";return l+=t?(this.temp_gruu||"sip:anonymous@anonymous.invalid;transport="+c.contactTransport).toString():(this.pub_gruu||this.uri).toString(),n&&(l+=";ob"),l+=">"}},e.Utils.optionsOverride(c,"media","mediaConstraints",!0,this.logger);var h={};for(n in c)h[n]={value:c[n],writable:"register"===n||"custom"===n||"stunServers"===n||"turnServers"===n,configurable:!1};for(n in Object.defineProperties(this.configuration,h),this.logger.log("configuration parameters after validation:"),c)switch(n){case"uri":case"registrarServer":case"mediaHandlerFactory":this.logger.log("· "+n+": "+c[n]);break;case"password":this.logger.log("· "+n+": NOT SHOWN");break;default:this.logger.log("· "+n+": "+JSON.stringify(c[n]))}},l.prototype.updateIceServers=function(e,t){var n=l.prototype.getConfigurationCheck().optional;void 0!==e&&n.stunServers(e)&&(this.configuration.stunServers=e),void 0!==t&&n.turnServers(t)&&(this.configuration.turnServers=t)},l.prototype.getConfigurationCheck=function(){return{mandatory:{},optional:{uri:function(t){var n;return/^sip:/i.test(t)||(t=e.C.SIP+":"+t),(n=e.URI.parse(t))&&n.user?n:void 0},wsServers:function(t){var n,l,r;if("string"==typeof t)t=[{ws_uri:t}];else{if(!(t instanceof Array))return;for(l=t.length,n=0;n<l;n++)"string"==typeof t[n]&&(t[n]={ws_uri:t[n]})}if(0===t.length)return!1;for(l=t.length,n=0;n<l;n++){if(!t[n].ws_uri)return;if(t[n].weight&&!Number(t[n].weight))return;if(-1===(r=e.Grammar.parse(t[n].ws_uri,"absoluteURI")))return;if(["wss","ws","udp"].indexOf(r.scheme)<0)return;t[n].sip_uri="<sip:"+r.host+(r.port?":"+r.port:"")+";transport="+r.scheme.replace(/^wss$/i,"ws")+";lr>",t[n].weight||(t[n].weight=0),t[n].status=0,t[n].scheme=r.scheme.toUpperCase()}return t},authorizationUser:function(t){return-1===e.Grammar.parse('"'+t+'"',"quoted_string")?void 0:t},connectionRecoveryMaxInterval:function(t){var n;if(e.Utils.isDecimal(t)&&(n=Number(t))>0)return n},connectionRecoveryMinInterval:function(t){var n;if(e.Utils.isDecimal(t)&&(n=Number(t))>0)return n},displayName:function(t){return-1===e.Grammar.parse('"'+t+'"',"displayName")?void 0:t},hackViaTcp:function(e){if("boolean"==typeof e)return e},hackIpInContact:function(t){return"boolean"==typeof t?t:"string"==typeof t&&-1!==e.Grammar.parse(t,"host")?t:void 0},iceCheckingTimeout:function(t){if(e.Utils.isDecimal(t))return Math.max(500,t)},hackWssInTransport:function(e){if("boolean"==typeof e)return e},hackAllowUnregisteredOptionTags:function(e){if("boolean"==typeof e)return e},hackCleanJitsiSdpImageattr:function(e){if("boolean"==typeof e)return e},hackStripTcp:function(e){if("boolean"==typeof e)return e},contactTransport:function(e){if("string"==typeof e)return e},forceRport:function(e){if("boolean"==typeof e)return e},instanceId:function(t){if("string"==typeof t)return/^uuid:/i.test(t)&&(t=t.substr(5)),-1===e.Grammar.parse(t,"uuid")?void 0:t},keepAliveInterval:function(t){var n;if(e.Utils.isDecimal(t)&&(n=Number(t))>0)return n},extraSupported:function(e){var t,n;if(e instanceof Array){for(n=e.length,t=0;t<n;t++)if("string"!=typeof e[t])return;return e}},noAnswerTimeout:function(t){var n;if(e.Utils.isDecimal(t)&&(n=Number(t))>0)return n},password:function(e){return String(e)},rel100:function(t){return t===e.C.supported.REQUIRED?e.C.supported.REQUIRED:t===e.C.supported.SUPPORTED?e.C.supported.SUPPORTED:e.C.supported.UNSUPPORTED},replaces:function(t){return t===e.C.supported.REQUIRED?e.C.supported.REQUIRED:t===e.C.supported.SUPPORTED?e.C.supported.SUPPORTED:e.C.supported.UNSUPPORTED},register:function(e){if("boolean"==typeof e)return e},registerExpires:function(t){var n;if(e.Utils.isDecimal(t)&&(n=Number(t))>0)return n},registrarServer:function(t){var n;if("string"==typeof t)return/^sip:/i.test(t)||(t=e.C.SIP+":"+t),(n=e.URI.parse(t))?n.user?void 0:n:void 0},stunServers:function(t){var n,l,r;if("string"==typeof t)t=[t];else if(!(t instanceof Array))return;for(l=t.length,n=0;n<l;n++){if(r=t[n],/^stuns?:/.test(r)||(r="stun:"+r),-1===e.Grammar.parse(r,"stun_URI"))return;t[n]=r}return t},traceSip:function(e){if("boolean"==typeof e)return e},turnServers:function(t){var n,l,r,i,s,o;for(t instanceof Array||(t=[t]),r=t.length,n=0;n<r;n++){if((i=t[n]).server&&(i.urls=[i.server]),!i.urls)return;for(i.urls instanceof Array?s=i.urls.length:(i.urls=[i.urls],s=1),l=0;l<s;l++)if(o=i.urls[l],/^turns?:/.test(o)||(o="turn:"+o),-1===e.Grammar.parse(o,"turn_URI"))return}return t},rtcpMuxPolicy:function(e){if("string"==typeof e)return e},userAgentString:function(e){if("string"==typeof e)return e},usePreloadedRoute:function(e){if("boolean"==typeof e)return e},wsServerMaxReconnection:function(t){var n;if(e.Utils.isDecimal(t)&&(n=Number(t))>0)return n},wsServerReconnectionTimeout:function(t){var n;if(e.Utils.isDecimal(t)&&(n=Number(t))>0)return n},autostart:function(e){if("boolean"==typeof e)return e},autostop:function(e){if("boolean"==typeof e)return e},mediaHandlerFactory:function(t){if(t instanceof Function){var n=function(){var n=t.apply(this,arguments);function l(t){if(n[t].length>1){var l="getDescription"===t;n[t]=e.Utils.promisify(n,t,l)}}return l("getDescription"),l("setDescription"),n};return n.isSupported=t.isSupported,n}},authenticationFactory:i,allowLegacyNotifications:function(e){if("boolean"==typeof e)return e},custom:function(e){if("object"==typeof e)return e},contactUser:function(e){if("string"==typeof e)return e},contactParams:function(e){if("object"==typeof e)return e},contactHeaders:function(e){if("object"==typeof e)return e},challengeRequestHandlerFactory:s,keepAliveData:function(e){if("string"==typeof e)return e},disableRegId:function(e){if("boolean"==typeof e)return e},contactRegistrationAppendix:function(e){if("string"==typeof e)return e},supportedURISchemes:function(e){if("string"==typeof e)return e},socketFactory:function(e){if(e instanceof Function)return e},enableBlackberryEarlyIce:function(e){if("boolean"==typeof e)return e}}}},l.C=r,e.UA=l}}).call(this,n(33))},function(e,t,n){"use strict";e.exports=function(e){return e=e,{C:{ROLE_UNDEFINED:1,ROLE_ACTIVE:2,ROLE_PASSIVE:3},AllBrowsers:{maskDtls:function(e){e.media&&e.media.forEach(function(e){e.protocol=e.protocol.replace(/^UDP\/TLS\/RTP\/SAVP/gim,"RTP/SAVP")})},unmaskDtls:function(e){e.media&&e.media.forEach(function(e){e.protocol=e.protocol.replace(/^RTP\/SAVP$/gim,"UDP/TLS/RTP/SAVP")})},fixIceAttributes:function(e){var t,n;e.media&&(e.media.some(function(e){return e.icePwd&&!n&&(n=e.icePwd),e.iceUfrag&&!t&&(t=e.iceUfrag),!0}),t&&n&&e.media.forEach(function(e){e.icePwd=n,e.iceUfrag=t}))},removeUnnecessaryIceAttrs:function(e){e.media&&e.icePwd&&e.iceUfrag&&e.media.some(function(e){return e.icePwd&&e.iceUfrag})&&(delete e.icePwd,delete e.iceUfrag)},cleanupInactiveMedia:function(e){e.media&&e.media.forEach(function(e){if("inactive"===e.direction){e.port=0,e.connection={ip:"0.0.0.0",version:4};var t=["direction","port","connection","type","protocol"];for(var n in e)e.hasOwnProperty(n)&&-1===t.indexOf(n)&&delete e[n]}})},fixInactiveProtocol:function(e){var t;e.media&&(e.media.some(function(e){return"inactive"!==e.direction&&(t=e.protocol,!0)}),t&&e.media.forEach(function(e){"inactive"===e.direction&&(e.protocol=t)}))},isMediaActive:function(e,t){if(e.media)return e.media.some(function(e){return e.type===t&&("sendrecv"===e.direction||"sendonly"===e.direction)})},checkMediaState:function(e,t){if(e.media)return e.media.some(function(e){return t.forEach(function(t){if(t===e.direction)return!0}),!1})},needsExplicitlyInactiveSDP:function(e){e.media&&e.media.forEach(function(e){e.direction||0!==e.port||(e.direction="inactive")})},stopReceivingMedia:function(e,t){e.media&&e.media.forEach(function(e){t&&e.type!==t||(e.direction&&"sendrecv"!==e.direction?"recvonly"===e.direction&&(e.direction="inactive"):e.direction="sendonly")})},stopSendingMedia:function(e,t){e.media&&e.media.forEach(function(e){t&&e.type!==t||("sendrecv"===e.direction?e.direction="recvonly":e.direction&&"sendonly"!==e.direction||(e.direction="inactive"))})},stripCandidates:function(e,t){e.media&&e.media.forEach(function(e){e.candidates&&(e.candidates=e.candidates.filter(function(e){return!t.some(function(t){var n=t.split(":");return!!e[n[0]]&&n[1]===e[n[0]].toLowerCase()})}))})},removeGroupBundle:function(e){e.groups&&(e.groups=e.groups.filter(function(e){return"bundle"!==e.type.toLowerCase()}))},removeTrickleIce:function(e){e.iceOptions&&delete e.iceOptions},removeMediaCodec:function(e,t,n){e.media&&e.media.forEach(function(e){if(e.type===t){var l=[];if(e.rtp=e.rtp.filter(function(e){if(e.codec.toLowerCase()!==n)return!0;l.push(e.payload)}),e.fmtp&&(e.fmtp=e.fmtp.filter(function(e){return-1===l.indexOf(e.payload)})),e.rtcpFb&&(e.rtcpFb=e.rtcpFb.filter(function(e){return-1===l.indexOf(e.payload)})),e.payloads){var r=e.payloads.split(" ");r=r.filter(function(e){return-1===l.indexOf(parseInt(e,10))}),e.payloads=r.join(" ")}}})}},Firefox:{isFirefox:function(){return"undefined"!=typeof mozRTCPeerConnection},updateRolesFromRemote:function(t,n,l){if(this.isFirefox()){for(var r=this.findAllDtlsRoleIds(t),i=n.roleIds||[],s=0;s<r.length;s++)switch(r[s]){case e.Hacks.C.ROLE_UNDEFINED:s>0&&i[s-1]!==e.Hacks.C.ROLE_UNDEFINED&&void 0===i[s]&&(i[s]=i[s-1]),i[s]=i[s]||e.Hacks.C.ROLE_UNDEFINED;break;case e.Hacks.C.ROLE_PASSIVE:i[s]=i[s]||e.Hacks.C.ROLE_ACTIVE,i[s]!==e.Hacks.C.ROLE_ACTIVE&&l.warn("Change of DTLS role found from "+i[s]+" to "+e.Hacks.C.ROLE_ACTIVE),i[s]=e.Hacks.C.ROLE_ACTIVE;break;case e.Hacks.C.ROLE_ACTIVE:i[s]=i[s]||e.Hacks.C.ROLE_PASSIVE,i[s]!==e.Hacks.C.ROLE_PASSIVE&&l.warn("Change of DTLS role found from "+i[s]+" to "+e.Hacks.C.ROLE_PASSIVE),i[s]=e.Hacks.C.ROLE_PASSIVE}n.roleIds=i}},updateRolesWithOffer:function(t,n){if(this.isFirefox()){for(var l=this.findAllDtlsRoleIds(t),r=n.roleIds||[],i=0;i<l.length;i++)switch(l[i]){case e.Hacks.C.ROLE_UNDEFINED:r[i]=r[i]||e.Hacks.C.ROLE_UNDEFINED;break;case e.Hacks.C.ROLE_ACTIVE:r[i]=e.Hacks.C.ROLE_ACTIVE;break;case e.Hacks.C.ROLE_PASSIVE:r[i]=e.Hacks.C.ROLE_PASSIVE}n.roleIds=r}},dataBackwardCompatible:function(e,t){this.isFirefox()&&e.media&&(delete t.dataMids,e.media.forEach(function(e){if("application"===e.type&&!e.sctpmap&&"UDP/DTLS/SCTP"===e.protocol){var n;if(e.sctpPort)n=e.sctpPort;else{var l=e.invalid||[];l.forEach(function(e){e.value.indexOf("sctp-port:")>-1&&(n=e.value.split(":")[1])}),e.invalid=l.filter(function(e){return-1===e.value.indexOf("sctp-port:")&&e.value.indexOf("max-message-size:")})}n&&(e.sctpmap={app:"webrtc-datachannel",maxMessageSize:1024,sctpmapNumber:n},e.protocol="DTLS/SCTP",e.payloads=n,t.dataMids=t.dataMids||[],t.dataMids.push(e.mid))}}))},dataBackwardCompatibleAnswer:function(e,t){this.isFirefox()&&e.media&&e.media.forEach(function(e,n){var l=t.dataMids||[];"application"===e.type&&l.length>n&&l[n]!==e.mid&&(e.mid=l[n])})},fixRolesWithAnswer:function(t,n,l){if(this.isFirefox()&&n.roleIds&&t.media){var r=this.findAllDtlsRoleIds(t);if(!e.Utils.arraysEqual(r,n.roleIds))for(var i=0;i<t.media.length;i++)r[i]!==n.roleIds[i]&&n.roleIds[i]!==e.Hacks.C.ROLE_UNDEFINED&&(l.warn("Fixing dtls ssl role for media "+t.media[i].type+" from "+r[i]+" to "+n.roleIds[i]),t.media[i].setup=s(n.roleIds[i]))}function s(t){switch(t){default:case e.Hacks.C.ROLE_UNDEFINED:return"actpass";case e.Hacks.C.ROLE_ACTIVE:return"active";case e.Hacks.C.ROLE_PASSIVE:return"passive"}}},findAllDtlsRoleIds:function(t){var n=[];if(this.isFirefox()){if(!t.media)return n;t.media.forEach(function(t){if(t.setup&&t.setup.length>0)switch(t.setup){default:case"actpass":n.push(e.Hacks.C.ROLE_UNDEFINED);break;case"passive":n.push(e.Hacks.C.ROLE_PASSIVE);break;case"active":n.push(e.Hacks.C.ROLE_ACTIVE)}else n.push(e.Hacks.C.ROLE_UNDEFINED)})}return n},removeH264:function(e){this.isFirefox()&&e.media.forEach(function(e){if("video"===e.type&&e.rtp&&!(e.rtp.length<2)){for(var t=e.rtp.length-1;t>=0;t--)if("H264"===e.rtp[t].codec.toUpperCase()){var n=e.rtp.splice(t,1);e.rtcpFb&&(e.rtcpFb=l(e.rtcpFb,n[0].payload))}e.payloads=e.rtp.map(function(e){return e.payload}).join(" ")}function l(e,t){return e.filter(function(e){return e.payload!==t})}})},hasMissingCLineInSDP:function(e){e.media&&e.media.forEach(function(e){e.connection||(e.connection={version:4,ip:"0.0.0.0"})})}},Chrome:{getsConfusedAboutGUM:function(e){e.mediaHandler&&e.mediaHandler.close()}}}}},function(e,t,n){"use strict";e.exports=function(e){var t,n=[],l=[],r=[];function i(t,n,l){for(var r,i=e.Utils.buildStatusLine(t),s=n.getHeaders("via"),o=s.length,a=0;a<o;a++)i+="Via: "+s[a]+"\r\n";r=n.getHeader("To"),n.to_tag||(r+=";tag="+e.Utils.newTag()),i+="To: "+r+"\r\n",i+="From: "+n.getHeader("From")+"\r\n",i+="Call-ID: "+n.call_id+"\r\n",i+="CSeq: "+n.cseq+" "+n.method+"\r\n",i+="\r\n",l.send(i)}n.push(function(e,t,n){if(!e.ruri||!e.ruri.scheme.toLowerCase().match(t.configuration.supportedURISchemes))return i(416,e,n),!1}),n.push(function(e,t,n){if(!e.to_tag&&e.call_id.substr(0,5)===t.configuration.sipjsId)return i(482,e,n),!1}),n.push(function(t,n,l){if(e.Utils.str_utf8_length(t.body)<t.getHeader("content-length"))return i(400,t,l),!1}),n.push(function(t,n,l){var r,s,o=t.from_tag,a=t.call_id,u=t.cseq;if(!t.to_tag)if(t.method===e.C.INVITE){if(r=n.transactions.ist[t.via_branch])return;for(s in n.transactions.ist)if((r=n.transactions.ist[s]).request.from_tag===o&&r.request.call_id===a&&r.request.cseq===u)return i(482,t,l),!1}else{if(r=n.transactions.nist[t.via_branch])return;for(s in n.transactions.nist)if((r=n.transactions.nist[s]).request.from_tag===o&&r.request.call_id===a&&r.request.cseq===u)return i(482,t,l),!1}}),l.push(function(e,t){if(e.getHeaders("via").length>1)return t.getLogger("sip.sanitycheck").warn("More than one Via header field present in the response. Dropping the response"),!1}),l.push(function(e,t){var n=t.configuration.viaHost;if(e.via.host!==n||void 0!==e.via.port)return t.getLogger("sip.sanitycheck").warn("Via sent-by in the response does not match UA Via host value. Dropping the response"),!1}),l.push(function(t,n){if(e.Utils.str_utf8_length(t.body)<t.getHeader("content-length"))return n.getLogger("sip.sanitycheck").warn("Message body length is lower than the value in Content-Length header field. Dropping the response"),!1}),r.push(function(e,t){for(var n=["from","to","call_id","cseq","via"],l=n.length;l--;)if(!e.hasHeader(n[l]))return t.getLogger("sip.sanitycheck").warn("Missing mandatory header field : "+n[l]+". Dropping the response"),!1}),t=function(t,i,s){var o;for(o=r.length;o--;)if(!1===r[o](t,i,s))return!1;if(t instanceof e.IncomingRequest){for(o=n.length;o--;)if(!1===n[o](t,i,s))return!1}else if(t instanceof e.IncomingResponse)for(o=l.length;o--;)if(!1===l[o](t,i,s))return!1;return!0},e.sanityCheck=t}},function(e,t,n){"use strict";e.exports=function(e){var t;return(t=function(e){this.logger=e.getLogger("sipjs.digestauthentication"),this.username=e.configuration.authorizationUser,this.password=e.configuration.password,this.cnonce=null,this.nc=0,this.ncHex="00000000",this.response=null}).prototype.authenticate=function(t,n){if(this.algorithm=n.algorithm,this.realm=n.realm,this.nonce=n.nonce,this.opaque=n.opaque,this.stale=n.stale,this.algorithm){if("MD5"!==this.algorithm)return this.logger.warn('challenge with Digest algorithm different than "MD5", authentication aborted'),!1}else this.algorithm="MD5";if(!this.realm)return this.logger.warn("challenge without Digest realm, authentication aborted"),!1;if(!this.nonce)return this.logger.warn("challenge without Digest nonce, authentication aborted"),!1;if(n.qop)if(n.qop.indexOf("auth")>-1)this.qop="auth";else{if(!(n.qop.indexOf("auth-int")>-1))return this.logger.warn('challenge without Digest qop different than "auth" or "auth-int", authentication aborted'),!1;this.qop="auth-int"}else this.qop=null;return this.method=t.method,this.uri=t.ruri,this.cnonce=e.createRandomToken(12),this.nc+=1,this.updateNcHex(),4294967296===this.nc&&(this.nc=1,this.ncHex="00000001"),this.calculateResponse(),!0},t.prototype.calculateResponse=function(){var t,n;t=e.calculateMD5(this.username+":"+this.realm+":"+this.password),"auth"===this.qop?(n=e.calculateMD5(this.method+":"+this.uri),this.response=e.calculateMD5(t+":"+this.nonce+":"+this.ncHex+":"+this.cnonce+":auth:"+n)):"auth-int"===this.qop?(n=e.calculateMD5(this.method+":"+this.uri+":"+e.calculateMD5(this.body?this.body:"")),this.response=e.calculateMD5(t+":"+this.nonce+":"+this.ncHex+":"+this.cnonce+":auth-int:"+n)):null===this.qop&&(n=e.calculateMD5(this.method+":"+this.uri),this.response=e.calculateMD5(t+":"+this.nonce+":"+n))},t.prototype.toString=function(){var e=[];if(!this.response)throw new Error("response field does not exist, cannot generate Authorization header");return e.push("algorithm="+this.algorithm),e.push('username="'+this.username+'"'),e.push('realm="'+this.realm+'"'),e.push('nonce="'+this.nonce+'"'),e.push('uri="'+this.uri+'"'),e.push('response="'+this.response+'"'),this.opaque&&e.push('opaque="'+this.opaque+'"'),this.qop&&(e.push("qop="+this.qop),e.push('cnonce="'+this.cnonce+'"'),e.push("nc="+this.ncHex)),"Digest "+e.join(", ")},t.prototype.updateNcHex=function(){var e=Number(this.nc).toString(16);this.ncHex="00000000".substr(0,8-e.length)+e},t}},function(e,t,n){"use strict";var l=n(105);e.exports=function(e){return{parse:function(t,n){var r={startRule:n,SIP:e};try{l.parse(t,r)}catch(e){r.data=-1}return r.data}}}},function(e,t){e.exports=function(){function e(e,t,n,l,r,i){this.message=e,this.expected=t,this.found=n,this.offset=l,this.line=r,this.column=i,this.name="SyntaxError"}return function(e,t){function n(){this.constructor=e}n.prototype=t.prototype,e.prototype=new n}(e,Error),{SyntaxError:e,parse:function(t){var n,l=arguments.length>1?arguments[1]:{},r={},i={Contact:124,Name_Addr_Header:161,Record_Route:181,Request_Response:87,SIP_URI:45,Subscription_State:191,Supported:196,Require:187,Via:199,absoluteURI:90,Call_ID:123,Content_Disposition:135,Content_Length:140,Content_Type:141,CSeq:151,displayName:127,Event:154,From:156,host:57,Max_Forwards:159,Min_SE:218,Proxy_Authenticate:162,quoted_string:40,Refer_To:183,Replaces:184,Session_Expires:215,stun_URI:222,To:197,turn_URI:229,uuid:232,WWW_Authenticate:214,challenge:163},s=124,o=["\r\n",{type:"literal",value:"\r\n",description:'"\\r\\n"'},/^[0-9]/,{type:"class",value:"[0-9]",description:"[0-9]"},/^[a-zA-Z]/,{type:"class",value:"[a-zA-Z]",description:"[a-zA-Z]"},/^[0-9a-fA-F]/,{type:"class",value:"[0-9a-fA-F]",description:"[0-9a-fA-F]"},/^[\0-\xFF]/,{type:"class",value:"[\\0-\\xFF]",description:"[\\0-\\xFF]"},/^["]/,{type:"class",value:'["]',description:'["]'}," ",{type:"literal",value:" ",description:'" "'},"\t",{type:"literal",value:"\t",description:'"\\t"'},/^[a-zA-Z0-9]/,{type:"class",value:"[a-zA-Z0-9]",description:"[a-zA-Z0-9]"},";",{type:"literal",value:";",description:'";"'},"/",{type:"literal",value:"/",description:'"/"'},"?",{type:"literal",value:"?",description:'"?"'},":",{type:"literal",value:":",description:'":"'},"@",{type:"literal",value:"@",description:'"@"'},"&",{type:"literal",value:"&",description:'"&"'},"=",{type:"literal",value:"=",description:'"="'},"+",{type:"literal",value:"+",description:'"+"'},"$",{type:"literal",value:"$",description:'"$"'},",",{type:"literal",value:",",description:'","'},"-",{type:"literal",value:"-",description:'"-"'},"_",{type:"literal",value:"_",description:'"_"'},".",{type:"literal",value:".",description:'"."'},"!",{type:"literal",value:"!",description:'"!"'},"~",{type:"literal",value:"~",description:'"~"'},"*",{type:"literal",value:"*",description:'"*"'},"'",{type:"literal",value:"'",description:'"\'"'},"(",{type:"literal",value:"(",description:'"("'},")",{type:"literal",value:")",description:'")"'},r,"%",{type:"literal",value:"%",description:'"%"'},null,[],function(){return" "},function(){return":"},/^[!-~]/,{type:"class",value:"[!-~]",description:"[!-~]"},/^[\x80-\uFFFF]/,{type:"class",value:"[\\x80-\\uFFFF]",description:"[\\x80-\\uFFFF]"},/^[\x80-\xBF]/,{type:"class",value:"[\\x80-\\xBF]",description:"[\\x80-\\xBF]"},/^[a-f]/,{type:"class",value:"[a-f]",description:"[a-f]"},"`",{type:"literal",value:"`",description:'"`"'},"<",{type:"literal",value:"<",description:'"<"'},">",{type:"literal",value:">",description:'">"'},"\\",{type:"literal",value:"\\",description:'"\\\\"'},"[",{type:"literal",value:"[",description:'"["'},"]",{type:"literal",value:"]",description:'"]"'},"{",{type:"literal",value:"{",description:'"{"'},"}",{type:"literal",value:"}",description:'"}"'},function(){return"*"},function(){return"/"},function(){return"="},function(){return"("},function(){return")"},function(){return">"},function(){return"<"},function(){return","},function(){return";"},function(){return":"},function(){return'"'},/^[!-']/,{type:"class",value:"[!-']",description:"[!-']"},/^[*-[]/,{type:"class",value:"[*-[]",description:"[*-[]"},/^[\]-~]/,{type:"class",value:"[\\]-~]",description:"[\\]-~]"},function(e){return e},/^[#-[]/,{type:"class",value:"[#-[]",description:"[#-[]"},/^[\0-\t]/,{type:"class",value:"[\\0-\\t]",description:"[\\0-\\t]"},/^[\x0B-\f]/,{type:"class",value:"[\\x0B-\\f]",description:"[\\x0B-\\f]"},/^[\x0E-]/,{type:"class",value:"[\\x0E-]",description:"[\\x0E-]"},function(){l.data.uri=new l.SIP.URI(l.data.scheme,l.data.user,l.data.host,l.data.port),delete l.data.scheme,delete l.data.user,delete l.data.host,delete l.data.host_type,delete l.data.port},function(){l.data.uri=new l.SIP.URI(l.data.scheme,l.data.user,l.data.host,l.data.port,l.data.uri_params,l.data.uri_headers),delete l.data.scheme,delete l.data.user,delete l.data.host,delete l.data.host_type,delete l.data.port,delete l.data.uri_params,"SIP_URI"===l.startRule&&(l.data=l.data.uri)},"sips",{type:"literal",value:"sips",description:'"sips"'},"sip",{type:"literal",value:"sip",description:'"sip"'},function(e){l.data.scheme=e},function(){},function(){l.data.uri=new l.SIP.URI(l.data.scheme,l.data.user,l.data.host,l.data.port,l.data.uri_params,l.data.uri_headers),delete l.data.scheme,delete l.data.user,delete l.data.host,delete l.data.host_type,delete l.data.port,delete l.data.uri_params,"SIP_URI_BSIP"===l.startRule&&(l.data=l.data.uri)},"mbx",{type:"literal",value:"mbx",description:'"mbx"'},"pin",{type:"literal",value:"pin",description:'"pin"'},function(e){l.data.scheme=e},function(){l.data.user=m()},function(){l.data.user=decodeURIComponent(m().slice(0,-1))},function(){l.data.password=m()},function(){return l.data.host=m(),l.data.host},function(){return l.data.host_type="domain",m()},/^[a-zA-Z0-9_\-]/,{type:"class",value:"[a-zA-Z0-9_\\-]",description:"[a-zA-Z0-9_\\-]"},/^[a-zA-Z0-9\-]/,{type:"class",value:"[a-zA-Z0-9\\-]",description:"[a-zA-Z0-9\\-]"},function(){return l.data.host_type="IPv6",m()},"::",{type:"literal",value:"::",description:'"::"'},function(){return l.data.host_type="IPv6",m()},function(){return l.data.host_type="IPv4",m()},"25",{type:"literal",value:"25",description:'"25"'},/^[0-5]/,{type:"class",value:"[0-5]",description:"[0-5]"},"2",{type:"literal",value:"2",description:'"2"'},/^[0-4]/,{type:"class",value:"[0-4]",description:"[0-4]"},"1",{type:"literal",value:"1",description:'"1"'},/^[1-9]/,{type:"class",value:"[1-9]",description:"[1-9]"},function(e){return e=parseInt(e.join("")),l.data.port=e,e},"transport=",{type:"literal",value:"transport=",description:'"transport="'},"udp",{type:"literal",value:"udp",description:'"udp"'},"tcp",{type:"literal",value:"tcp",description:'"tcp"'},"sctp",{type:"literal",value:"sctp",description:'"sctp"'},"tls",{type:"literal",value:"tls",description:'"tls"'},function(e){l.data.uri_params||(l.data.uri_params={}),l.data.uri_params.transport=e.toLowerCase()},"user=",{type:"literal",value:"user=",description:'"user="'},"phone",{type:"literal",value:"phone",description:'"phone"'},"ip",{type:"literal",value:"ip",description:'"ip"'},function(e){l.data.uri_params||(l.data.uri_params={}),l.data.uri_params.user=e.toLowerCase()},"method=",{type:"literal",value:"method=",description:'"method="'},function(e){l.data.uri_params||(l.data.uri_params={}),l.data.uri_params.method=e},"ttl=",{type:"literal",value:"ttl=",description:'"ttl="'},function(e){l.data.params||(l.data.params={}),l.data.params.ttl=e},"maddr=",{type:"literal",value:"maddr=",description:'"maddr="'},function(e){l.data.uri_params||(l.data.uri_params={}),l.data.uri_params.maddr=e},"lr",{type:"literal",value:"lr",description:'"lr"'},function(){l.data.uri_params||(l.data.uri_params={}),l.data.uri_params.lr=void 0},function(e,t){l.data.uri_params||(l.data.uri_params={}),t=null===t?void 0:t[1],l.data.uri_params[e.toLowerCase()]=t&&t.toLowerCase()},function(e,t){e=e.join("").toLowerCase(),t=t.join(""),l.data.uri_headers||(l.data.uri_headers={}),l.data.uri_headers[e]?l.data.uri_headers[e].push(t):l.data.uri_headers[e]=[t]},function(){"Refer_To"===l.startRule&&(l.data.uri=new l.SIP.URI(l.data.scheme,l.data.user,l.data.host,l.data.port,l.data.uri_params,l.data.uri_headers),delete l.data.scheme,delete l.data.user,delete l.data.host,delete l.data.host_type,delete l.data.port,delete l.data.uri_params)},"//",{type:"literal",value:"//",description:'"//"'},function(){l.data.scheme=m()},{type:"literal",value:"SIP",description:'"SIP"'},function(){l.data.sip_version=m()},"INVITE",{type:"literal",value:"INVITE",description:'"INVITE"'},"ACK",{type:"literal",value:"ACK",description:'"ACK"'},"VXACH",{type:"literal",value:"VXACH",description:'"VXACH"'},"OPTIONS",{type:"literal",value:"OPTIONS",description:'"OPTIONS"'},"BYE",{type:"literal",value:"BYE",description:'"BYE"'},"CANCEL",{type:"literal",value:"CANCEL",description:'"CANCEL"'},"REGISTER",{type:"literal",value:"REGISTER",description:'"REGISTER"'},"SUBSCRIBE",{type:"literal",value:"SUBSCRIBE",description:'"SUBSCRIBE"'},"NOTIFY",{type:"literal",value:"NOTIFY",description:'"NOTIFY"'},"REFER",{type:"literal",value:"REFER",description:'"REFER"'},function(){return l.data.method=m(),l.data.method},function(e){l.data.status_code=parseInt(e.join(""))},function(){l.data.reason_phrase=m()},function(){l.data=m()},function(){var e,t;for(t=l.data.multi_header.length,e=0;e<t;e++)if(null===l.data.multi_header[e].parsed){l.data=null;break}null!==l.data?l.data=l.data.multi_header:l.data=-1},function(){var e;l.data.multi_header||(l.data.multi_header=[]);try{e=new l.SIP.NameAddrHeader(l.data.uri,l.data.displayName,l.data.params),delete l.data.uri,delete l.data.displayName,delete l.data.params}catch(t){e=null}l.data.multi_header.push({position:u,offset:y(),parsed:e})},function(e){'"'===(e=m().trim())[0]&&(e=e.substring(1,e.length-1)),l.data.displayName=e},"q",{type:"literal",value:"q",description:'"q"'},function(e){l.data.params||(l.data.params={}),l.data.params.q=e},"expires",{type:"literal",value:"expires",description:'"expires"'},function(e){l.data.params||(l.data.params={}),l.data.params.expires=e},function(e){return parseInt(e.join(""))},"0",{type:"literal",value:"0",description:'"0"'},function(){return parseFloat(m())},function(e,t){l.data.params||(l.data.params={}),t=null===t?void 0:t[1],l.data.params[e.toLowerCase()]=t},"render",{type:"literal",value:"render",description:'"render"'},"session",{type:"literal",value:"session",description:'"session"'},"icon",{type:"literal",value:"icon",description:'"icon"'},"alert",{type:"literal",value:"alert",description:'"alert"'},function(){"Content_Disposition"===l.startRule&&(l.data.type=m().toLowerCase())},"handling",{type:"literal",value:"handling",description:'"handling"'},"optional",{type:"literal",value:"optional",description:'"optional"'},"required",{type:"literal",value:"required",description:'"required"'},function(e){l.data=parseInt(e.join(""))},function(){l.data=m()},"text",{type:"literal",value:"text",description:'"text"'},"image",{type:"literal",value:"image",description:'"image"'},"audio",{type:"literal",value:"audio",description:'"audio"'},"video",{type:"literal",value:"video",description:'"video"'},"application",{type:"literal",value:"application",description:'"application"'},"message",{type:"literal",value:"message",description:'"message"'},"multipart",{type:"literal",value:"multipart",description:'"multipart"'},"x-",{type:"literal",value:"x-",description:'"x-"'},function(e){l.data.value=parseInt(e.join(""))},function(e){l.data=e},function(e){l.data.event=e.toLowerCase()},function(){var e=l.data.tag;l.data=new l.SIP.NameAddrHeader(l.data.uri,l.data.displayName,l.data.params),e&&l.data.setParam("tag",e)},"tag",{type:"literal",value:"tag",description:'"tag"'},function(e){l.data.tag=e},function(e){l.data=parseInt(e.join(""))},function(e){l.data=e},function(){l.data=new l.SIP.NameAddrHeader(l.data.uri,l.data.displayName,l.data.params)},"digest",{type:"literal",value:"Digest",description:'"Digest"'},"realm",{type:"literal",value:"realm",description:'"realm"'},function(e){l.data.realm=e},"domain",{type:"literal",value:"domain",description:'"domain"'},"nonce",{type:"literal",value:"nonce",description:'"nonce"'},function(e){l.data.nonce=e},"opaque",{type:"literal",value:"opaque",description:'"opaque"'},function(e){l.data.opaque=e},"stale",{type:"literal",value:"stale",description:'"stale"'},"true",{type:"literal",value:"true",description:'"true"'},function(){l.data.stale=!0},"false",{type:"literal",value:"false",description:'"false"'},function(){l.data.stale=!1},"algorithm",{type:"literal",value:"algorithm",description:'"algorithm"'},"md5",{type:"literal",value:"MD5",description:'"MD5"'},"md5-sess",{type:"literal",value:"MD5-sess",description:'"MD5-sess"'},function(e){l.data.algorithm=e.toUpperCase()},"qop",{type:"literal",value:"qop",description:'"qop"'},"auth-int",{type:"literal",value:"auth-int",description:'"auth-int"'},"auth",{type:"literal",value:"auth",description:'"auth"'},function(e){l.data.qop||(l.data.qop=[]),l.data.qop.push(e.toLowerCase())},function(e){l.data.value=parseInt(e.join(""))},function(){var e,t;for(t=l.data.multi_header.length,e=0;e<t;e++)if(null===l.data.multi_header[e].parsed){l.data=null;break}null!==l.data?l.data=l.data.multi_header:l.data=-1},function(){var e;l.data.multi_header||(l.data.multi_header=[]);try{e=new l.SIP.NameAddrHeader(l.data.uri,l.data.displayName,l.data.params),delete l.data.uri,delete l.data.displayName,delete l.data.params}catch(t){e=null}l.data.multi_header.push({position:u,offset:y(),parsed:e})},function(){l.data=new l.SIP.NameAddrHeader(l.data.uri,l.data.displayName,l.data.params)},function(){l.data.replaces_from_tag&&l.data.replaces_to_tag||(l.data=-1)},function(){l.data={call_id:l.data}},"from-tag",{type:"literal",value:"from-tag",description:'"from-tag"'},function(e){l.data.replaces_from_tag=e},"to-tag",{type:"literal",value:"to-tag",description:'"to-tag"'},function(e){l.data.replaces_to_tag=e},"early-only",{type:"literal",value:"early-only",description:'"early-only"'},function(){l.data.early_only=!0},function(e){return e},function(e,t){return function(e,t){return[e].concat(t)}(e,t)},function(e){"Require"===l.startRule&&(l.data=e||[])},function(e){l.data.value=parseInt(e.join(""))},"active",{type:"literal",value:"active",description:'"active"'},"pending",{type:"literal",value:"pending",description:'"pending"'},"terminated",{type:"literal",value:"terminated",description:'"terminated"'},function(){l.data.state=m()},"reason",{type:"literal",value:"reason",description:'"reason"'},function(e){void 0!==e&&(l.data.reason=e)},function(e){void 0!==e&&(l.data.expires=e)},"retry_after",{type:"literal",value:"retry_after",description:'"retry_after"'},function(e){void 0!==e&&(l.data.retry_after=e)},"deactivated",{type:"literal",value:"deactivated",description:'"deactivated"'},"probation",{type:"literal",value:"probation",description:'"probation"'},"rejected",{type:"literal",value:"rejected",description:'"rejected"'},"timeout",{type:"literal",value:"timeout",description:'"timeout"'},"giveup",{type:"literal",value:"giveup",description:'"giveup"'},"noresource",{type:"literal",value:"noresource",description:'"noresource"'},"invariant",{type:"literal",value:"invariant",description:'"invariant"'},function(e){"Supported"===l.startRule&&(l.data=e||[])},function(){var e=l.data.tag;l.data=new l.SIP.NameAddrHeader(l.data.uri,l.data.displayName,l.data.params),e&&l.data.setParam("tag",e)},"ttl",{type:"literal",value:"ttl",description:'"ttl"'},function(e){l.data.ttl=e},"maddr",{type:"literal",value:"maddr",description:'"maddr"'},function(e){l.data.maddr=e},"received",{type:"literal",value:"received",description:'"received"'},function(e){l.data.received=e},"branch",{type:"literal",value:"branch",description:'"branch"'},function(e){l.data.branch=e},"rport",{type:"literal",value:"rport",description:'"rport"'},function(){"undefined"!=typeof response_port&&(l.data.rport=response_port.join(""))},function(e){l.data.protocol=e},{type:"literal",value:"UDP",description:'"UDP"'},{type:"literal",value:"TCP",description:'"TCP"'},{type:"literal",value:"TLS",description:'"TLS"'},{type:"literal",value:"SCTP",description:'"SCTP"'},function(e){l.data.transport=e},function(){l.data.host=m()},function(e){l.data.port=parseInt(e.join(""))},function(e){return parseInt(e.join(""))},function(e){"Session_Expires"===l.startRule&&(l.data.deltaSeconds=e)},"refresher",{type:"literal",value:"refresher",description:'"refresher"'},"uas",{type:"literal",value:"uas",description:'"uas"'},"uac",{type:"literal",value:"uac",description:'"uac"'},function(e){"Session_Expires"===l.startRule&&(l.data.refresher=e)},function(e){"Min_SE"===l.startRule&&(l.data=e)},"stuns",{type:"literal",value:"stuns",description:'"stuns"'},"stun",{type:"literal",value:"stun",description:'"stun"'},function(e){l.data.scheme=e},function(e){l.data.host=e},"?transport=",{type:"literal",value:"?transport=",description:'"?transport="'},"turns",{type:"literal",value:"turns",description:'"turns"'},"turn",{type:"literal",value:"turn",description:'"turn"'},function(){l.data.transport=transport},function(){l.data=m()}],a=[I('. ""2 3!'),I('0"""1!3#'),I('0$""1!3%'),I('0&""1!3\''),I("7'*# \"7("),I('0(""1!3)'),I('0*""1!3+'),I('.,""2,3-'),I('..""2.3/'),I('00""1!31'),I('.2""2233* ".4""2435*} ".6""2637*q ".8""2839*e ".:""2:3;*Y ".<""2<3=*M ".>""2>3?*A ".@""2@3A*5 ".B""2B3C*) ".D""2D3E'),I('7)*# "7,'),I('.F""2F3G*} ".H""2H3I*q ".J""2J3K*e ".L""2L3M*Y ".N""2N3O*M ".P""2P3Q*A ".R""2R3S*5 ".T""2T3U*) ".V""2V3W'),I('!!.Y""2Y3Z+7$7#+-%7#+#%\'#%$## X$"# X"# X+! (%'),I('!! \\7$,#&7$"+-$7 +#%\'"%$"# X"# X*# " [+@$ \\7$+&$,#&7$""" X+\'%4"6]" %$"# X"# X'),I('7.*# " ['),I('! \\7\'*# "7(,)&7\'*# "7("+A$.8""2839+1%7/+\'%4#6^# %$## X$"# X"# X'),I('!! \\72+&$,#&72""" X+o$ \\! \\7.,#&7."+-$72+#%\'"%$"# X"# X,@&! \\7.,#&7."+-$72+#%\'"%$"# X"# X"+#%\'"%$"# X"# X+! (%'),I('0_""1!3`*# "73'),I('0a""1!3b'),I('0c""1!3d'),I('7!*) "0e""1!3f'),I('! \\7)* ".F""2F3G* ".J""2J3K*} ".L""2L3M*q ".Y""2Y3Z*e ".P""2P3Q*Y ".H""2H3I*M ".@""2@3A*A ".g""2g3h*5 ".R""2R3S*) ".N""2N3O+$,&7)* ".F""2F3G* ".J""2J3K*} ".L""2L3M*q ".Y""2Y3Z*e ".P""2P3Q*Y ".H""2H3I*M ".@""2@3A*A ".g""2g3h*5 ".R""2R3S*) ".N""2N3O""" X+! (%'),I('! \\7)* ".F""2F3G*} ".L""2L3M*q ".Y""2Y3Z*e ".P""2P3Q*Y ".H""2H3I*M ".@""2@3A*A ".g""2g3h*5 ".R""2R3S*) ".N""2N3O+$,&7)* ".F""2F3G*} ".L""2L3M*q ".Y""2Y3Z*e ".P""2P3Q*Y ".H""2H3I*M ".@""2@3A*A ".g""2g3h*5 ".R""2R3S*) ".N""2N3O""" X+! (%'),I('.T""2T3U*ã ".V""2V3W*× ".i""2i3j*Ë ".k""2k3l*¿ ".:""2:3;*³ ".D""2D3E*§ ".2""2233* ".8""2839* ".m""2m3n* "7&*} ".4""2435*q ".o""2o3p*e ".q""2q3r*Y ".6""2637*M ".>""2>3?*A ".s""2s3t*5 ".u""2u3v*) "7\'*# "7('),I('! \\7)*ī ".F""2F3G*ğ ".J""2J3K*ē ".L""2L3M*ć ".Y""2Y3Z*û ".P""2P3Q*ï ".H""2H3I*ã ".@""2@3A*× ".g""2g3h*Ë ".R""2R3S*¿ ".N""2N3O*³ ".T""2T3U*§ ".V""2V3W* ".i""2i3j* ".k""2k3l* ".8""2839*w ".m""2m3n*k "7&*e ".4""2435*Y ".o""2o3p*M ".q""2q3r*A ".6""2637*5 ".s""2s3t*) ".u""2u3v+Ĵ$,ı&7)*ī ".F""2F3G*ğ ".J""2J3K*ē ".L""2L3M*ć ".Y""2Y3Z*û ".P""2P3Q*ï ".H""2H3I*ã ".@""2@3A*× ".g""2g3h*Ë ".R""2R3S*¿ ".N""2N3O*³ ".T""2T3U*§ ".V""2V3W* ".i""2i3j* ".k""2k3l* ".8""2839*w ".m""2m3n*k "7&*e ".4""2435*Y ".o""2o3p*M ".q""2q3r*A ".6""2637*5 ".s""2s3t*) ".u""2u3v""" X+! (%'),I('!7/+A$.P""2P3Q+1%7/+\'%4#6w# %$## X$"# X"# X'),I('!7/+A$.4""2435+1%7/+\'%4#6x# %$## X$"# X"# X'),I('!7/+A$.>""2>3?+1%7/+\'%4#6y# %$## X$"# X"# X'),I('!7/+A$.T""2T3U+1%7/+\'%4#6z# %$## X$"# X"# X'),I('!7/+A$.V""2V3W+1%7/+\'%4#6{# %$## X$"# X"# X'),I('!.k""2k3l+1$7/+\'%4"6|" %$"# X"# X'),I('!7/+7$.i""2i3j+\'%4"6}" %$"# X"# X'),I('!7/+A$.D""2D3E+1%7/+\'%4#6~# %$## X$"# X"# X'),I('!7/+A$.2""2233+1%7/+\'%4#6# %$## X$"# X"# X'),I('!7/+A$.8""2839+1%7/+\'%4#6# %$## X$"# X"# X'),I('!7/+1$7&+\'%4"6" %$"# X"# X'),I('!7&+1$7/+\'%4"6" %$"# X"# X'),I('!7=+W$ \\7G*) "7K*# "7F,/&7G*) "7K*# "7F"+-%7>+#%\'#%$## X$"# X"# X'),I('0""1!3*A "0""1!3*5 "0""1!3*) "73*# "7.'),I('!!7/+U$7&+K% \\7J*# "7K,)&7J*# "7K"+-%7&+#%\'$%$$# X$## X$"# X"# X+! (%'),I('!7/+`$7&+V%! \\7J*# "7K,)&7J*# "7K"+! (%+2%7&+(%4$6$!!%$$# X$## X$"# X"# X'),I('7.*G ".L""2L3M*; "0""1!3*/ "0""1!3*# "73'),I('!.m""2m3n+K$0""1!3*5 "0""1!3*) "0""1!3+#%\'"%$"# X"# X'),I('!7N+Q$.8""2839+A%7T*# " [+1%7X+\'%4$6$ %$$# X$## X$"# X"# X'),I('!7N+k$.8""2839+[%7T*# " [+K%7X+A%7e+7%7r*# " [+\'%4&6& %$&# X$%# X$$# X$## X$"# X"# X'),I('!/""1$3*) "/""1#3+\' 4!6!! %'),I('7Q*. "!7M+& 4!6! %'),I('7Q*. "!7L+& 4!6! %'),I('!7R+G$.8""2839+7%7S*# " [+\'%4#6# %$## X$"# X"# X'),I('!/""1#3*) "/""1#3+\' 4!6!! %'),I("!76+& 4!6! %"),I('!7U+b$!.8""2839+-$7W+#%\'"%$"# X"# X*# " [+7%.:""2:3;+\'%4#6 # %$## X$"# X"# X'),I(' \\7+*) "7-*# "7V+2$,/&7+*) "7-*# "7V""" X'),I('.<""2<3=*q ".>""2>3?*e ".@""2@3A*Y ".B""2B3C*M ".D""2D3E*A ".2""2233*5 ".6""2637*) ".4""2435'),I('! \\7+*_ "7-*Y ".<""2<3=*M ".>""2>3?*A ".@""2@3A*5 ".B""2B3C*) ".D""2D3E,e&7+*_ "7-*Y ".<""2<3=*M ".>""2>3?*A ".@""2@3A*5 ".B""2B3C*) ".D""2D3E"+& 4!6¡! %'),I('!7Y+N$!.8""2839+-$7d+#%\'"%$"# X"# X*# " [+#%\'"%$"# X"# X'),I('!7Z*) "7b*# "7^+& 4!6¢! %'),I('! \\!7[+3$.J""2J3K+#%\'"%$"# X"# X,>&!7[+3$.J""2J3K+#%\'"%$"# X"# X"+G$7]+=%.J""2J3K*# " [+\'%4#6£# %$## X$"# X"# X'),I(' \\0¤""1!3¥+,$,)&0¤""1!3¥""" X'),I('!0$""1!3%+A$ \\0¦""1!3§,)&0¦""1!3§"+#%\'"%$"# X"# X'),I('!00""1!31+A$ \\0¦""1!3§,)&0¦""1!3§"+#%\'"%$"# X"# X'),I('!.o""2o3p+A$7_+7%.q""2q3r+\'%4#6¨# %$## X$"# X"# X'),I('!!7`+¿$.8""2839+¯%7`+¥%.8""2839+%7`+%.8""2839+{%7`+q%.8""2839+a%7`+W%.8""2839+G%7`+=%.8""2839+-%7a+#%\'-%$-# X$,# X$+# X$*# X$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*࠸ "!.©""2©3ª+¯$7`+¥%.8""2839+%7`+%.8""2839+{%7`+q%.8""2839+a%7`+W%.8""2839+G%7`+=%.8""2839+-%7a+#%\',%$,# X$+# X$*# X$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*ޕ "!.©""2©3ª+$7`+%.8""2839+{%7`+q%.8""2839+a%7`+W%.8""2839+G%7`+=%.8""2839+-%7a+#%\'*%$*# X$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*܌ "!.©""2©3ª+{$7`+q%.8""2839+a%7`+W%.8""2839+G%7`+=%.8""2839+-%7a+#%\'(%$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*ڝ "!.©""2©3ª+a$7`+W%.8""2839+G%7`+=%.8""2839+-%7a+#%\'&%$&# X$%# X$$# X$## X$"# X"# X*و "!.©""2©3ª+G$7`+=%.8""2839+-%7a+#%\'$%$$# X$## X$"# X"# X*؍ "!.©""2©3ª+-$7a+#%\'"%$"# X"# X*׬ "!.©""2©3ª+-$7`+#%\'"%$"# X"# X*׋ "!7`+¥$.©""2©3ª+%7`+%.8""2839+{%7`+q%.8""2839+a%7`+W%.8""2839+G%7`+=%.8""2839+-%7a+#%\'+%$+# X$*# X$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*Ը "!7`+¶$!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+%.©""2©3ª+{%7`+q%.8""2839+a%7`+W%.8""2839+G%7`+=%.8""2839+-%7a+#%\'*%$*# X$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*Ҕ "!7`+Ç$!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+q%.©""2©3ª+a%7`+W%.8""2839+G%7`+=%.8""2839+-%7a+#%\')%$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*ϟ "!7`+Ø$!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+­%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+W%.©""2©3ª+G%7`+=%.8""2839+-%7a+#%\'(%$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*̙ "!7`+é$!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+¾%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+h%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+=%.©""2©3ª+-%7a+#%\'\'%$\'# X$&# X$%# X$$# X$## X$"# X"# X*ɂ "!7`+Ĕ$!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+é%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+¾%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+h%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+=%.©""2©3ª+-%7`+#%\'(%$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*ŀ "!7`+ĵ$!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+Ċ%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+ß%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+´%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+^%!.8""2839+-$7`+#%\'"%$"# X"# X*# " [+3%.©""2©3ª+#%\'(%$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X+& 4!6«! %'),I('!7#+S$7#*# " [+C%7#*# " [+3%7#*# " [+#%\'$%$$# X$## X$"# X"# X'),I('!7`+=$.8""2839+-%7`+#%\'#%$## X$"# X"# X*# "7b'),I('!7c+u$.J""2J3K+e%7c+[%.J""2J3K+K%7c+A%.J""2J3K+1%7c+\'%4\'6¬\' %$\'# X$&# X$%# X$$# X$## X$"# X"# X'),I('!.­""2­3®+3$0¯""1!3°+#%\'"%$"# X"# X*  "!.±""2±3²+=$0³""1!3´+-%7!+#%\'#%$## X$"# X"# X*o "!.µ""2µ3¶+7$7!+-%7!+#%\'#%$## X$"# X"# X*D "!0·""1!3¸+-$7!+#%\'"%$"# X"# X*# "7!'),I('!!7!*# " [+c$7!*# " [+S%7!*# " [+C%7!*# " [+3%7!*# " [+#%\'%%$%# X$$# X$## X$"# X"# X+\' 4!6¹!! %'),I(' \\!.2""2233+-$7f+#%\'"%$"# X"# X,>&!.2""2233+-$7f+#%\'"%$"# X"# X"'),I('7g*A "7h*; "7i*5 "7j*/ "7k*) "7l*# "7m'),I('!/º""1*3»+b$/¼""1#3½*G "/¾""1#3¿*; "/À""1$3Á*/ "/Â""1#3Ã*# "76+(%4"6Ä"! %$"# X"# X'),I('!/Å""1%3Æ+J$/Ç""1%3È*/ "/É""1"3Ê*# "76+(%4"6Ë"! %$"# X"# X'),I('!/Ì""1\'3Í+2$7+(%4"6Î"! %$"# X"# X'),I('!/Ï""1$3Ð+2$7õ+(%4"6Ñ"! %$"# X"# X'),I('!/Ò""1&3Ó+2$7Y+(%4"6Ô"! %$"# X"# X'),I('!/Õ""1"3Ö+R$!.>""2>3?+-$76+#%\'"%$"# X"# X*# " [+\'%4"6×" %$"# X"# X'),I('!7n+T$!.>""2>3?+-$7o+#%\'"%$"# X"# X*# " [+)%4"6Ø""! %$"# X"# X'),I('! \\7p+&$,#&7p""" X+! (%'),I('! \\7p+&$,#&7p""" X+! (%'),I('7q*) "7+*# "7-'),I('.o""2o3p*e ".q""2q3r*Y ".4""2435*M ".8""2839*A ".<""2<3=*5 ".@""2@3A*) ".B""2B3C'),I('!.6""2637+u$7s+k% \\!.<""2<3=+-$7s+#%\'"%$"# X"# X,>&!.<""2<3=+-$7s+#%\'"%$"# X"# X"+#%\'#%$## X$"# X"# X'),I('!7t+C$.>""2>3?+3%7u+)%4#6Ù#"" %$## X$"# X"# X'),I(' \\7v*) "7+*# "7-+2$,/&7v*) "7+*# "7-""" X'),I(' \\7v*) "7+*# "7-,/&7v*) "7+*# "7-"'),I('.o""2o3p*e ".q""2q3r*Y ".4""2435*M ".6""2637*A ".8""2839*5 ".@""2@3A*) ".B""2B3C'),I('7*# "7x'),I("!7+K$7'+A%7y+7%7'+-%7+#%'%%$%# X$$# X$## X$\"# X\"# X"),I('7O*# "7z'),I('!7+G$.8""2839+7%7{*# "7~+\'%4#6Ú# %$## X$"# X"# X'),I('!7|*# "7}+N$!.6""2637+-$7+#%\'"%$"# X"# X*# " [+#%\'"%$"# X"# X'),I('!.Û""2Û3Ü+=$7+3%7}*# " [+#%\'#%$## X$"# X"# X'),I('!.4""2435+-$7+#%\'"%$"# X"# X'),I('!7+5$ \\7,#&7"+#%\'"%$"# X"# X'),I('7**) "7+*# "7-'),I('7+* "7-* ".2""2233*} ".6""2637*q ".8""2839*e ".:""2:3;*Y ".<""2<3=*M ".>""2>3?*A ".@""2@3A*5 ".B""2B3C*) ".D""2D3E'),I('!7+k$ \\!.4""2435+-$7+#%\'"%$"# X"# X,>&!.4""2435+-$7+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),I('! \\7,#&7"+k$ \\!.2""2233+-$7+#%\'"%$"# X"# X,>&!.2""2233+-$7+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),I(' \\7,#&7"'),I('7+*w "7-*q ".8""2839*e ".:""2:3;*Y ".<""2<3=*M ".>""2>3?*A ".@""2@3A*5 ".B""2B3C*) ".D""2D3E'),I('!7"+$ \\7"*G "7!*A ".@""2@3A*5 ".F""2F3G*) ".J""2J3K,M&7"*G "7!*A ".@""2@3A*5 ".F""2F3G*) ".J""2J3K"+\'%4"6Ý" %$"# X"# X'),I('7*# "7'),I('!!7T+3$.:""2:3;+#%\'"%$"# X"# X*# " [+-$7X+#%\'"%$"# X"# X*# " ['),I(' \\7+* "7-*} ".B""2B3C*q ".D""2D3E*e ".2""2233*Y ".8""2839*M ".:""2:3;*A ".<""2<3=*5 ".>""2>3?*) ".@""2@3A+$,&7+* "7-*} ".B""2B3C*q ".D""2D3E*e ".2""2233*Y ".8""2839*M ".:""2:3;*A ".<""2<3=*5 ".>""2>3?*) ".@""2@3A""" X'),I(' \\7,#&7"'),I('!/""1#3Þ+y$.4""2435+i% \\7!+&$,#&7!""" X+P%.J""2J3K+@% \\7!+&$,#&7!""" X+\'%4%6ß% %$%# X$$# X$## X$"# X"# X'),I('.à""2à3á'),I('.â""2â3ã'),I('.ä""2ä3å'),I('.æ""2æ3ç'),I('.è""2è3é'),I('.ê""2ê3ë'),I('.ì""2ì3í'),I('.î""2î3ï'),I('.ð""2ð3ñ'),I('.ò""2ò3ó'),I('!7*S "7*M "7*G "7*A "7*; "7*5 "7*/ "7*) "7*# "76+& 4!6ô! %'),I('!7+W$7\'+M%7+C%7\'*# " [+3%7*# " [+#%\'%%$%# X$$# X$## X$"# X"# X'),I("!7+' 4!6õ!! %"),I('!7!+7$7!+-%7!+#%\'#%$## X$"# X"# X'),I('! \\7**A "7+*; "7-*5 "73*/ "74*) "7\'*# "7(,G&7**A "7+*; "7-*5 "73*/ "74*) "7\'*# "7("+& 4!6ö! %'),I('!7»+_$ \\!7A+-$7»+#%\'"%$"# X"# X,8&!7A+-$7»+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),I('!79+R$!.:""2:3;+-$79+#%\'"%$"# X"# X*# " [+\'%4"6÷" %$"# X"# X'),I('!7:*j "!7+_$ \\!7A+-$7+#%\'"%$"# X"# X,8&!7A+-$7+#%\'"%$"# X"# X"+#%\'"%$"# X"# X+& 4!6ø! %'),I('!7P*# "7+c$ \\!7B+-$7 +#%\'"%$"# X"# X,8&!7B+-$7 +#%\'"%$"# X"# X"+\'%4"6ù" %$"# X"# X'),I('!7*# " [+A$7@+7%7O+-%7?+#%\'$%$$# X$## X$"# X"# X'),I('!!76+_$ \\!7.+-$76+#%\'"%$"# X"# X,8&!7.+-$76+#%\'"%$"# X"# X"+#%\'"%$"# X"# X*# "7H+\' 4!6ú!! %'),I('7¡*) "7¢*# "7¥'),I('!/û""1!3ü+<$7<+2%7¤+(%4#6ý#! %$## X$"# X"# X'),I('!/þ""1\'3ÿ+<$7<+2%7£+(%4#6Ā#! %$## X$"# X"# X'),I('! \\7!+&$,#&7!""" X+\' 4!6ā!! %'),I('!.Ă""2Ă3ă+x$!.J""2J3K+S$7!*# " [+C%7!*# " [+3%7!*# " [+#%\'$%$$# X$## X$"# X"# X*# " [+\'%4"6Ą" %$"# X"# X'),I('!76+N$!7<+-$7¦+#%\'"%$"# X"# X*# " [+)%4"6ą""! %$"# X"# X'),I('76*) "7Y*# "7H'),I('!7¨+_$ \\!7B+-$7©+#%\'"%$"# X"# X,8&!7B+-$7©+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),I('!/Ć""1&3ć*G "/Ĉ""1\'3ĉ*; "/Ċ""1$3ċ*/ "/Č""1%3č*# "76+& 4!6Ď! %'),I('7ª*# "7¥'),I('!/ď""1(3Đ+O$7<+E%/đ""1(3Ē*/ "/ē""1(3Ĕ*# "76+#%\'#%$## X$"# X"# X'),I('!76+_$ \\!7A+-$76+#%\'"%$"# X"# X,8&!7A+-$76+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),I('! \\7!+&$,#&7!""" X+\' 4!6ĕ!! %'),I("!7®+& 4!6Ė! %"),I('!7¯+s$7;+i%7´+_% \\!7B+-$7µ+#%\'"%$"# X"# X,8&!7B+-$7µ+#%\'"%$"# X"# X"+#%\'$%$$# X$## X$"# X"# X'),I('7°*# "7±'),I('/ė""1$3Ę*S "/ę""1%3Ě*G "/ě""1%3Ĝ*; "/ĝ""1%3Ğ*/ "/ğ""1+3Ġ*# "7²'),I('/ġ""1\'3Ģ*/ "/ģ""1)3Ĥ*# "7²'),I('76*# "7³'),I('!/ĥ""1"3Ħ+-$76+#%\'"%$"# X"# X'),I('7²*# "76'),I('!76+7$7<+-%7¶+#%\'#%$## X$"# X"# X'),I('76*# "7H'),I('!7¸+7$7.+-%7+#%\'#%$## X$"# X"# X'),I('! \\7!+&$,#&7!""" X+\' 4!6ħ!! %'),I("!7£+' 4!6Ĩ!! %"),I('!7»+d$ \\!7B+-$7¥+#%\'"%$"# X"# X,8&!7B+-$7¥+#%\'"%$"# X"# X"+(%4"6ĩ"!!%$"# X"# X'),I('!!77+k$ \\!.J""2J3K+-$77+#%\'"%$"# X"# X,>&!.J""2J3K+-$77+#%\'"%$"# X"# X"+#%\'"%$"# X"# X+! (%'),I('!7P*# "7+c$ \\!7B+-$7½+#%\'"%$"# X"# X,8&!7B+-$7½+#%\'"%$"# X"# X"+\'%4"6Ī" %$"# X"# X'),I('7¾*# "7¥'),I('!/ī""1#3Ĭ+<$7<+2%76+(%4#6ĭ#! %$## X$"# X"# X'),I('! \\7!+&$,#&7!""" X+\' 4!6Į!! %'),I("!7£+' 4!6į!! %"),I('! \\7,#&7"+$7@+w%7O+m%7?+c% \\!7B+-$7¥+#%\'"%$"# X"# X,8&!7B+-$7¥+#%\'"%$"# X"# X"+\'%4%6İ% %$%# X$$# X$## X$"# X"# X'),I("7Ã"),I('!/ı""1&3Ĳ+s$7.+i%7Æ+_% \\!7A+-$7Æ+#%\'"%$"# X"# X,8&!7A+-$7Æ+#%\'"%$"# X"# X"+#%\'$%$$# X$## X$"# X"# X*# "7Ä'),I('!76+s$7.+i%7Å+_% \\!7A+-$7Å+#%\'"%$"# X"# X,8&!7A+-$7Å+#%\'"%$"# X"# X"+#%\'$%$$# X$## X$"# X"# X'),I('!76+=$7<+3%76*# "7H+#%\'#%$## X$"# X"# X'),I('7Ç*G "7É*A "7Ë*; "7Í*5 "7Î*/ "7Ï*) "7Ð*# "7Å'),I('!/ĳ""1%3Ĵ+7$7<+-%7È+#%\'#%$## X$"# X"# X'),I("!7I+' 4!6ĵ!! %"),I('!/Ķ""1&3ķ+¥$7<+%7D+%7Ê+% \\! \\7\'+&$,#&7\'""" X+-$7Ê+#%\'"%$"# X"# X,G&! \\7\'+&$,#&7\'""" X+-$7Ê+#%\'"%$"# X"# X"+-%7E+#%\'&%$&# X$%# X$$# X$## X$"# X"# X'),I('7z*# "7}'),I('!/ĸ""1%3Ĺ+7$7<+-%7Ì+#%\'#%$## X$"# X"# X'),I("!7I+' 4!6ĺ!! %"),I('!/Ļ""1&3ļ+<$7<+2%7I+(%4#6Ľ#! %$## X$"# X"# X'),I('!/ľ""1%3Ŀ+_$7<+U%!/ŀ""1$3Ł+& 4!6ł! %*4 "!/Ń""1%3ń+& 4!6Ņ! %+#%\'#%$## X$"# X"# X'),I('!/ņ""1)3Ň+T$7<+J%/ň""1#3ŉ*/ "/Ŋ""1(3ŋ*# "76+(%4#6Ō#! %$## X$"# X"# X'),I('!/ō""1#3Ŏ+$7<+%7D+%!7Ñ+k$ \\!.D""2D3E+-$7Ñ+#%\'"%$"# X"# X,>&!.D""2D3E+-$7Ñ+#%\'"%$"# X"# X"+#%\'"%$"# X"# X+-%7E+#%\'%%$%# X$$# X$## X$"# X"# X'),I('!/ŏ""1(3Ő*/ "/ő""1$3Œ*# "76+\' 4!6œ!! %'),I('!76+_$ \\!7A+-$76+#%\'"%$"# X"# X,8&!7A+-$76+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),I('!7Ô+K$7.+A%7Ô+7%7.+-%7+#%\'%%$%# X$$# X$## X$"# X"# X'),I('! \\7!+&$,#&7!""" X+\' 4!6Ŕ!! %'),I('!7Ö+c$ \\!7A+-$7Ö+#%\'"%$"# X"# X,8&!7A+-$7Ö+#%\'"%$"# X"# X"+\'%4"6ŕ" %$"# X"# X'),I('!7+c$ \\!7B+-$7¥+#%\'"%$"# X"# X,8&!7B+-$7¥+#%\'"%$"# X"# X"+\'%4"6Ŗ" %$"# X"# X'),I('!7P*T "7*N "!7@*# " [+=$7z+3%7?*# " [+#%\'#%$## X$"# X"# X+c$ \\!7B+-$7¥+#%\'"%$"# X"# X,8&!7B+-$7¥+#%\'"%$"# X"# X"+\'%4"6ŗ" %$"# X"# X'),I('!7Ù+c$ \\!7B+-$7Ú+#%\'"%$"# X"# X,8&!7B+-$7Ú+#%\'"%$"# X"# X"+\'%4"6Ř" %$"# X"# X'),I("!7+& 4!6ř! %"),I('!/Ś""1(3ś+<$7<+2%76+(%4#6Ŝ#! %$## X$"# X"# X*j "!/ŝ""1&3Ş+<$7<+2%76+(%4#6ş#! %$## X$"# X"# X*: "!/Š""1*3š+& 4!6Ţ! %*# "7¥'),I('!!76+o$ \\!7A+2$76+(%4"6ţ"! %$"# X"# X,=&!7A+2$76+(%4"6ţ"! %$"# X"# X"+)%4"6Ť""! %$"# X"# X*# " [+\' 4!6ť!! %'),I('!7Ý+_$ \\!7A+-$7Ý+#%\'"%$"# X"# X,8&!7A+-$7Ý+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),I('!7+_$ \\!7B+-$7¥+#%\'"%$"# X"# X,8&!7B+-$7¥+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),I('! \\7!+&$,#&7!""" X+\' 4!6Ŧ!! %'),I('!7à+_$ \\!7B+-$7á+#%\'"%$"# X"# X,8&!7B+-$7á+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),I('!/ŧ""1&3Ũ*; "/ũ""1\'3Ū*/ "/ū""1*3Ŭ*# "76+& 4!6ŭ! %'),I('!/Ů""1&3ů+<$7<+2%7â+(%4#6Ű#! %$## X$"# X"# X* "!/þ""1\'3ÿ+<$7<+2%7£+(%4#6ű#! %$## X$"# X"# X*S "!/Ų""1+3ų+<$7<+2%7£+(%4#6Ŵ#! %$## X$"# X"# X*# "7¥'),I('/ŵ""1+3Ŷ*k "/ŷ""1)3Ÿ*_ "/Ź""1(3ź*S "/Ż""1\'3ż*G "/Ž""1&3ž*; "/ſ""1*3ƀ*/ "/Ɓ""1)3Ƃ*# "76'),I('71*# " ['),I('!!76+o$ \\!7A+2$76+(%4"6ţ"! %$"# X"# X,=&!7A+2$76+(%4"6ţ"! %$"# X"# X"+)%4"6Ť""! %$"# X"# X*# " [+\' 4!6ƃ!! %'),I('!7P*# "7+c$ \\!7B+-$7æ+#%\'"%$"# X"# X,8&!7B+-$7æ+#%\'"%$"# X"# X"+\'%4"6Ƅ" %$"# X"# X'),I('7¾*# "7¥'),I('!7è+_$ \\!7A+-$7è+#%\'"%$"# X"# X,8&!7A+-$7è+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),I('!7ï+s$7.+i%7ò+_% \\!7B+-$7é+#%\'"%$"# X"# X,8&!7B+-$7é+#%\'"%$"# X"# X"+#%\'$%$$# X$## X$"# X"# X'),I('7ê*; "7ë*5 "7ì*/ "7í*) "7î*# "7¥'),I('!/ƅ""1#3Ɔ+<$7<+2%7õ+(%4#6Ƈ#! %$## X$"# X"# X'),I('!/ƈ""1%3Ɖ+<$7<+2%7Y+(%4#6Ɗ#! %$## X$"# X"# X'),I('!/Ƌ""1(3ƌ+B$7<+8%7b*# "7_+(%4#6ƍ#! %$## X$"# X"# X'),I('!/Ǝ""1&3Ə+<$7<+2%76+(%4#6Ɛ#! %$## X$"# X"# X'),I('!/Ƒ""1%3ƒ+T$!7<+5$ \\7!,#&7!"+#%\'"%$"# X"# X*# " [+\'%4"6Ɠ" %$"# X"# X'),I('!7ð+K$7;+A%76+7%7;+-%7ñ+#%\'%%$%# X$$# X$## X$"# X"# X'),I('!/""1#3Þ*# "76+\' 4!6Ɣ!! %'),I('!/¼""1#3ƕ*G "/¾""1#3Ɩ*; "/Â""1#3Ɨ*/ "/À""1$3Ƙ*# "76+\' 4!6ƙ!! %'),I('!7ó+H$!7C+-$7ô+#%\'"%$"# X"# X*# " [+#%\'"%$"# X"# X'),I('!7Z*) "7b*# "7^+& 4!6ƚ! %'),I('!!7!*# " [+c$7!*# " [+S%7!*# " [+C%7!*# " [+3%7!*# " [+#%\'%%$%# X$$# X$## X$"# X"# X+\' 4!6ƛ!! %'),I('!!7!+C$7!*# " [+3%7!*# " [+#%\'#%$## X$"# X"# X+\' 4!6Ɯ!! %'),I("7Ã"),I('!7£+d$ \\!7B+-$7ø+#%\'"%$"# X"# X,8&!7B+-$7ø+#%\'"%$"# X"# X"+(%4"6Ɲ"!!%$"# X"# X'),I('7ù*# "7¥'),I('!.ƞ""2ƞ3Ɵ+N$7<+D%.Ơ""2Ơ3ơ*) ".Ƣ""2Ƣ3ƣ+(%4#6Ƥ#! %$## X$"# X"# X'),I('!7£+d$ \\!7B+-$7¥+#%\'"%$"# X"# X,8&!7B+-$7¥+#%\'"%$"# X"# X"+(%4"6ƥ"!!%$"# X"# X'),I('!76+7$70+-%7ü+#%\'#%$## X$"# X"# X'),I(' \\72*) "74*# "7.,/&72*) "74*# "7."'),I(' \\7%,#&7%"'),I('!7ÿ+=$.8""2839+-%7Ā+#%\'#%$## X$"# X"# X'),I('!/Ʀ""1%3Ƨ*) "/ƨ""1$3Ʃ+\' 4!6ƪ!! %'),I('!7ā+N$!.8""2839+-$7d+#%\'"%$"# X"# X*# " [+#%\'"%$"# X"# X'),I('!7b*) "7^*# "7+\' 4!6ƫ!! %'),I('! \\7ă*) "7-*# "7Ą,/&7ă*) "7-*# "7Ą"+! (%'),I('7"*S "7!*M ".F""2F3G*A ".J""2J3K*5 ".H""2H3I*) ".N""2N3O'),I('.L""2L3M* ".B""2B3C* ".<""2<3=*} ".R""2R3S*q ".T""2T3U*e ".V""2V3W*Y ".P""2P3Q*M ".@""2@3A*A ".D""2D3E*5 ".2""2233*) ".>""2>3?'),I('!7Ć+h$.8""2839+X%7Ā+N%!.Ƭ""2Ƭ3ƭ+-$7ñ+#%\'"%$"# X"# X*# " [+#%\'$%$$# X$## X$"# X"# X'),I('!/Ʈ""1%3Ư*) "/ư""1$3Ʊ+\' 4!6ƪ!! %'),I('!7ñ+Q$/¼""1#3½*7 "/¾""1#3¿*+ " \\7+,#&7+"+\'%4"6Ʋ" %$"# X"# X'),I('!7Ċ+$.F""2F3G+%7ĉ+u%.F""2F3G+e%7ĉ+[%.F""2F3G+K%7ĉ+A%.F""2F3G+1%7ċ+\'%4)6Ƴ) %$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X'),I('!7#+A$7#+7%7#+-%7#+#%\'$%$$# X$## X$"# X"# X'),I('!7ĉ+-$7ĉ+#%\'"%$"# X"# X'),I('!7ĉ+7$7ĉ+-%7ĉ+#%\'#%$## X$"# X"# X')],u=0,c=0,d=0,p={line:1,column:1,seenCR:!1},g=0,h=[],f=0;if("startRule"in l){if(!(l.startRule in i))throw new Error("Can't start parsing from rule \""+l.startRule+'".');s=i[l.startRule]}function m(){return t.substring(c,u)}function y(){return c}function b(e){return d!==e&&(d>e&&(d=0,p={line:1,column:1,seenCR:!1}),function(e,n,l){var r,i;for(r=n;r<l;r++)"\n"===(i=t.charAt(r))?(e.seenCR||e.line++,e.column=1,e.seenCR=!1):"\r"===i||"\u2028"===i||"\u2029"===i?(e.line++,e.column=1,e.seenCR=!0):(e.column++,e.seenCR=!1)}(p,d,e),d=e),p}function v(e){u<g||(u>g&&(g=u,h=[]),h.push(e))}function E(n,l,r){var i=b(r),s=r<t.length?t.charAt(r):null;return null!==l&&function(e){var t=1;for(e.sort(function(e,t){return e.description<t.description?-1:e.description>t.description?1:0});t<e.length;)e[t-1]===e[t]?e.splice(t,1):t++}(l),new e(null!==n?n:function(e,t){var n,l=new Array(e.length);for(n=0;n<e.length;n++)l[n]=e[n].description;return"Expected "+(e.length>1?l.slice(0,-1).join(", ")+" or "+l[e.length-1]:l[0])+" but "+(t?'"'+function(e){function t(e){return e.charCodeAt(0).toString(16).toUpperCase()}return e.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g,function(e){return"\\x0"+t(e)}).replace(/[\x10-\x1F\x80-\xFF]/g,function(e){return"\\x"+t(e)}).replace(/[\u0180-\u0FFF]/g,function(e){return"\\u0"+t(e)}).replace(/[\u1080-\uFFFF]/g,function(e){return"\\u"+t(e)})}(t)+'"':"end of input")+" found."}(l,s),l,s,r,i.line,i.column)}function I(e){var t,n=new Array(e.length);for(t=0;t<e.length;t++)n[t]=e.charCodeAt(t)-32;return n}if(l.data={},(n=function e(n){var l,i,s=a[n],d=0,p=[],g=s.length,h=[],m=[];function y(e){return"[object Array]"===Object.prototype.toString.apply(e)?[]:e}for(;;){for(;d<g;)switch(s[d]){case 0:m.push(y(o[s[d+1]])),d+=2;break;case 1:m.push(u),d++;break;case 2:m.pop(),d++;break;case 3:u=m.pop(),d++;break;case 4:m.length-=s[d+1],d+=2;break;case 5:m.splice(-2,1),d++;break;case 6:m[m.length-2].push(m.pop()),d++;break;case 7:m.push(m.splice(m.length-s[d+1],s[d+1])),d+=2;break;case 8:m.pop(),m.push(t.substring(m[m.length-1],u)),d++;break;case 9:h.push(g),p.push(d+3+s[d+1]+s[d+2]),m[m.length-1]?(g=d+3+s[d+1],d+=3):(g=d+3+s[d+1]+s[d+2],d+=3+s[d+1]);break;case 10:h.push(g),p.push(d+3+s[d+1]+s[d+2]),m[m.length-1]===r?(g=d+3+s[d+1],d+=3):(g=d+3+s[d+1]+s[d+2],d+=3+s[d+1]);break;case 11:h.push(g),p.push(d+3+s[d+1]+s[d+2]),m[m.length-1]!==r?(g=d+3+s[d+1],d+=3):(g=d+3+s[d+1]+s[d+2],d+=3+s[d+1]);break;case 12:m[m.length-1]!==r?(h.push(g),p.push(d),g=d+2+s[d+1],d+=2):d+=2+s[d+1];break;case 13:h.push(g),p.push(d+3+s[d+1]+s[d+2]),t.length>u?(g=d+3+s[d+1],d+=3):(g=d+3+s[d+1]+s[d+2],d+=3+s[d+1]);break;case 14:h.push(g),p.push(d+4+s[d+2]+s[d+3]),t.substr(u,o[s[d+1]].length)===o[s[d+1]]?(g=d+4+s[d+2],d+=4):(g=d+4+s[d+2]+s[d+3],d+=4+s[d+2]);break;case 15:h.push(g),p.push(d+4+s[d+2]+s[d+3]),t.substr(u,o[s[d+1]].length).toLowerCase()===o[s[d+1]]?(g=d+4+s[d+2],d+=4):(g=d+4+s[d+2]+s[d+3],d+=4+s[d+2]);break;case 16:h.push(g),p.push(d+4+s[d+2]+s[d+3]),o[s[d+1]].test(t.charAt(u))?(g=d+4+s[d+2],d+=4):(g=d+4+s[d+2]+s[d+3],d+=4+s[d+2]);break;case 17:m.push(t.substr(u,s[d+1])),u+=s[d+1],d+=2;break;case 18:m.push(o[s[d+1]]),u+=o[s[d+1]].length,d+=2;break;case 19:m.push(r),0===f&&v(o[s[d+1]]),d+=2;break;case 20:c=m[m.length-1-s[d+1]],d+=2;break;case 21:c=u,d++;break;case 22:for(l=s.slice(d+4,d+4+s[d+3]),i=0;i<s[d+3];i++)l[i]=m[m.length-1-l[i]];m.splice(m.length-s[d+2],s[d+2],o[s[d+1]].apply(null,l)),d+=4+s[d+3];break;case 23:m.push(e(s[d+1])),d+=2;break;case 24:f++,d++;break;case 25:f--,d++;break;default:throw new Error("Invalid opcode: "+s[d]+".")}if(!(h.length>0))break;g=h.pop(),d=p.pop()}return m[0]}(s))!==r&&u===t.length)return n;throw n!==r&&u<t.length&&v({type:"end",description:"end of input"}),E(null,h,g)}}}()},function(e,t,n){"use strict";(function(t){var l=t.window||t;function r(e,t){if(null!=e){var n=t.charAt(0).toUpperCase()+t.slice(1),l=[t,"webkit"+n,"moz"+n];for(var r in l){var i=e[l[r]];if(i)return i.bind(e)}}}e.exports={WebSocket:l.WebSocket,Transport:n(107),open:l.open,Promise:l.Promise,timers:l,console:l.console||{debug:function(){},log:function(){},warn:function(){},error:function(){}},getPrefixedProperty:r,MediaStream:r(l,"MediaStream"),getUserMediaPromise:l.navigator?r(l.navigator.mediaDevices,"getUserMedia"):void 0,getUserMedia:r(l.navigator,"getUserMedia"),RTCPeerConnection:r(l,"RTCPeerConnection"),RTCSessionDescription:r(l,"RTCSessionDescription"),addEventListener:r(l,"addEventListener"),removeEventListener:r(l,"removeEventListener"),HTMLMediaElement:l.HTMLMediaElement,attachMediaStream:l.attachMediaStream,createObjectURL:l.URL&&l.URL.createObjectURL,revokeObjectURL:l.URL&&l.URL.revokeObjectURL,sdp:n(108)}}).call(this,n(33))},function(e,t,n){"use strict";e.exports=function(e,t){var n,l=0;return(n=function(e,t){this.logger=e.getLogger("sip.transport"),this.ua=e,this.ws=null,this.server=t,this.reconnection_attempts=0,this.closed=!1,this.connected=!1,this.reconnectTimer=null,this.lastTransportError={},this.keepAliveInterval=e.configuration.keepAliveInterval,this.keepAliveTimeout=null,this.keepAliveTimer=null,this.ua.transport&&(this.ua.transport.disconnect(),this.ua.transport=null),this.ua.transport=this,this.id=++l,this.connect()}).defaultFactory=function(e,n){return void 0===n?new t(e):new t(e,n)},n.prototype={send:function(n){var l,r=!1;if("object"==typeof n&&e.Utils.hasProto(n,"isBinary")&&n.isBinary()?(l=n.toBinary(),r=!0):l=n.toString(),this.ws&&this.ws.readyState===t.OPEN){if(!0===this.ua.configuration.traceSip)if(r){var i=String.fromCharCode.apply(null,l);this.logger.log("id:"+this.id+", sending WebSocket message:\n\n"+i+"\n")}else this.logger.log("id:"+this.id+", sending WebSocket message:\n\n"+l+"\n");return this.ws.send(l),!0}return this.logger.warn("unable to send message, WebSocket is not open"),!1},sendKeepAlive:function(){return this.keepAliveTimeout&&(this.logger.warn("keepAlive sent without response from server"),e.Timers.clearTimeout(this.keepAliveTimeout)),this.keepAliveTimeout=e.Timers.setTimeout(function(){this.ua.emit("keepAliveTimeout")}.bind(this),1e4),this.send(this.ua.configuration.keepAliveData?this.ua.configuration.keepAliveData:"\r\n\r\n")},startSendingKeepAlives:function(){if(this.keepAliveInterval&&!this.keepAliveTimer){var t=function(e){var t=.8*e;return e*=.9,1e3*(Math.random()*(e-t)+t)}(this.keepAliveInterval);this.logger.log("arming keepalive timer to fire in "+t+" ms"),this.keepAliveTimer=e.Timers.setTimeout(function(){this.sendKeepAlive(),this.keepAliveTimer=null,this.startSendingKeepAlives()}.bind(this),t)}},stopSendingKeepAlives:function(){e.Timers.clearTimeout(this.keepAliveTimer),e.Timers.clearTimeout(this.keepAliveTimeout),this.keepAliveTimer=null,this.keepAliveTimeout=null},disconnect:function(){this.ws&&(this.closed=!0,e.Timers.clearTimeout(this.reconnectTimer),this.reconnectTimer=null,this.stopSendingKeepAlives(),this.logger.log("closing WebSocket "+this.server.ws_uri),this.ws.close(),this.ws=null),this.reconnectTimer&&(e.Timers.clearTimeout(this.reconnectTimer),this.reconnectTimer=null,this.ua.emit("disconnected",{transport:this,code:this.lastTransportError.code,reason:this.lastTransportError.reason}))},connect:function(){var e=this;if(this.ws&&(this.ws.readyState===t.OPEN||this.ws.readyState===t.CONNECTING)&&0===this.reconnection_attempts)return this.logger.log("WebSocket "+this.server.ws_uri+" is already connected"),!1;this.ws&&(this.ws.close(),this.ws=null),this.logger.log("connecting to WebSocket "+this.server.ws_uri),this.ua.onTransportConnecting(this,0===this.reconnection_attempts?1:this.reconnection_attempts);try{this.ws=this.ua.configuration.socketFactory(this.server.ws_uri,void 0)}catch(e){this.logger.warn("error connecting to WebSocket "+this.server.ws_uri+": "+e)}this.ws.binaryType="arraybuffer",this.ws.onopen=function(){e.onOpen()},this.ws.onclose=function(t){e.onClose(t),this.onopen=null,this.onclose=null,this.onmessage=null,this.onerror=null},this.ws.onmessage=function(t){e.onMessage(t)},this.ws.onerror=function(t){e.onError(t)}},onOpen:function(){this.connected=!0,this.logger.log("WebSocket "+this.server.ws_uri+" connected"),null!==this.reconnectTimer&&(e.Timers.clearTimeout(this.reconnectTimer),this.reconnectTimer=null),this.reconnection_attempts=0,this.closed=!1,this.ua.onTransportConnected(this),this.startSendingKeepAlives()},onClose:function(e){var t=this.connected;this.lastTransportError.code=e.code,this.lastTransportError.reason=e.reason,this.stopSendingKeepAlives(),this.reconnection_attempts>0?(this.logger.log("Reconnection attempt "+this.reconnection_attempts+" failed (code: "+e.code+(e.reason?"| reason: "+e.reason:"")+")"),this.reconnect()):(this.connected=!1,this.logger.log("WebSocket disconnected (code: "+e.code+(e.reason?"| reason: "+e.reason:"")+")"),!1===e.wasClean&&this.logger.warn("WebSocket abrupt disconnection"),!0===t?(this.ua.onTransportClosed(this),this.closed?this.ua.emit("disconnected",{transport:this,code:this.lastTransportError.code,reason:this.lastTransportError.reason}):this.reconnect()):this.ua.onTransportError(this))},onMessage:function(t){var n,l,r=t.data,i=e.Parser.preprocessData(r);if(i){if(function(e){if("string"!=typeof e.body){if(2===e.body.byteLength&&13===e.body[0]&&10===e.body[1])return!0}else if("\r\n"===e.body)return!0;return!1}(i))return e.Timers.clearTimeout(this.keepAliveTimeout),this.keepAliveTimeout=null,void(!0===this.ua.configuration.traceSip&&this.logger.log("id:"+this.id+", received WebSocket message with CRLF Keep Alive response"));if(!0===this.ua.configuration.traceSip&&this.logger.log("id:"+this.id+", received WebSocket binary message:\n\n"+i.toString()+"\n"),(n=e.Parser.parseMessageExt(i,this.ua))&&!(this.ua.status===e.UA.C.STATUS_USER_CLOSED&&n instanceof e.IncomingRequest)&&e.sanityCheck(n,this.ua,this))if(n instanceof e.IncomingRequest)n.transport=this,this.ua.receiveRequest(n);else if(n instanceof e.IncomingResponse)switch(n.method){case e.C.INVITE:(l=this.ua.transactions.ict[n.via_branch])&&l.receiveResponse(n);break;case e.C.ACK:break;default:(l=this.ua.transactions.nict[n.via_branch])&&l.receiveResponse(n)}}else this.logger.warn("Received invalid message: \n\n"+String.fromCharCode.apply(null,r))},onError:function(e){this.logger.warn("WebSocket connection error occurred"),this.ua.emit("socketError",e)},reconnect:function(){var t=this;this.closed||(this.reconnection_attempts+=1,this.reconnection_attempts>this.ua.configuration.wsServerMaxReconnection?(this.logger.warn("maximum reconnection attempts for WebSocket "+this.server.ws_uri),this.ua.onTransportError(this)):1===this.reconnection_attempts?(this.logger.log("Connection to WebSocket "+this.server.ws_uri+" severed, attempting first reconnect"),t.connect()):(this.logger.log("trying to reconnect to WebSocket "+this.server.ws_uri+" (reconnection attempt "+this.reconnection_attempts+")"),this.reconnectTimer=e.Timers.setTimeout(function(){t.connect(),t.reconnectTimer=null},1e3*this.ua.configuration.wsServerReconnectionTimeout)))}},n.C={STATUS_READY:0,STATUS_DISCONNECTED:1,STATUS_ERROR:2},n}},function(e,t,n){var l=n(109),r=n(110);t.write=r,t.parse=l.parse,t.parseFmtpConfig=l.parseFmtpConfig,t.parseParams=l.parseParams,t.parsePayloads=l.parsePayloads,t.parseRemoteCandidates=l.parseRemoteCandidates,t.parseImageAttributes=l.parseImageAttributes,t.parseSimulcastStreamList=l.parseSimulcastStreamList},function(e,t,n){var l=function(e){return String(Number(e))===e?Number(e):e},r=function(e,t,n){var r=e.name&&e.names;e.push&&!t[e.push]?t[e.push]=[]:r&&!t[e.name]&&(t[e.name]={});var i=e.push?{}:r?t[e.name]:t;!function(e,t,n,r){if(r&&!n)t[r]=l(e[1]);else for(var i=0;i<n.length;i+=1)null!=e[i+1]&&(t[n[i]]=l(e[i+1]))}(n.match(e.reg),i,e.names,e.name),e.push&&t[e.push].push(i)},i=n(50),s=RegExp.prototype.test.bind(/^([a-z])=(.*)/);t.parse=function(e){var t={},n=[],l=t;return e.split(/(\r\n|\r|\n)/).filter(s).forEach(function(e){var t=e[0],s=e.slice(2);"m"===t&&(n.push({rtp:[],fmtp:[]}),l=n[n.length-1]);for(var o=0;o<(i[t]||[]).length;o+=1){var a=i[t][o];if(a.reg.test(s))return r(a,l,s)}}),t.media=n,t};var o=function(e,t){var n=t.split(/=(.+)/,2);return 2===n.length?e[n[0]]=l(n[1]):1===n.length&&t.length>1&&(e[n[0]]=void 0),e};t.parseParams=function(e){return e.split(/\;\s?/).reduce(o,{})},t.parseFmtpConfig=t.parseParams,t.parsePayloads=function(e){return e.split(" ").map(Number)},t.parseRemoteCandidates=function(e){for(var t=[],n=e.split(" ").map(l),r=0;r<n.length;r+=3)t.push({component:n[r],ip:n[r+1],port:n[r+2]});return t},t.parseImageAttributes=function(e){return e.split(" ").map(function(e){return e.substring(1,e.length-1).split(",").reduce(o,{})})},t.parseSimulcastStreamList=function(e){return e.split(";").map(function(e){return e.split(",").map(function(e){var t,n=!1;return"~"!==e[0]?t=l(e):(t=l(e.substring(1,e.length)),n=!0),{scid:t,paused:n}})})}},function(e,t,n){var l=n(50),r=/%[sdv%]/g,i=function(e,t,n){var l=[e+"="+(t.format instanceof Function?t.format(t.push?n:n[t.name]):t.format)];if(t.names)for(var i=0;i<t.names.length;i+=1){var s=t.names[i];t.name?l.push(n[t.name][s]):l.push(n[t.names[i]])}else l.push(n[t.name]);return function(e){var t=1,n=arguments,l=n.length;return e.replace(r,function(e){if(t>=l)return e;var r=n[t];switch(t+=1,e){case"%%":return"%";case"%s":return String(r);case"%d":return Number(r);case"%v":return""}})}.apply(null,l)},s=["v","o","s","i","u","e","p","c","b","t","r","z","a"],o=["i","c","b","a"];e.exports=function(e,t){t=t||{},null==e.version&&(e.version=0),null==e.name&&(e.name=" "),e.media.forEach(function(e){null==e.payloads&&(e.payloads="")});var n=t.outerOrder||s,r=t.innerOrder||o,a=[];return n.forEach(function(t){l[t].forEach(function(n){n.name in e&&null!=e[n.name]?a.push(i(t,n,e)):n.push in e&&null!=e[n.push]&&e[n.push].forEach(function(e){a.push(i(t,n,e))})})}),e.media.forEach(function(e){a.push(i("m",l.m[0],e)),r.forEach(function(t){l[t].forEach(function(n){n.name in e&&null!=e[n.name]?a.push(i(t,n,e)):n.push in e&&null!=e[n.push]&&e[n.push].forEach(function(e){a.push(i(t,n,e))})})})}),a.join("\r\n")+"\r\n"}},function(e,t){!function(){var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&n.rotl(e,8)|4278255360&n.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=n.endian(e[t]);return e},randomBytes:function(e){for(var t=[];e>0;e--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],n=0,l=0;n<e.length;n++,l+=8)t[l>>>5]|=e[n]<<24-l%32;return t},wordsToBytes:function(e){for(var t=[],n=0;n<32*e.length;n+=8)t.push(e[n>>>5]>>>24-n%32&255);return t},bytesToHex:function(e){for(var t=[],n=0;n<e.length;n++)t.push((e[n]>>>4).toString(16)),t.push((15&e[n]).toString(16));return t.join("")},hexToBytes:function(e){for(var t=[],n=0;n<e.length;n+=2)t.push(parseInt(e.substr(n,2),16));return t},bytesToBase64:function(e){for(var n=[],l=0;l<e.length;l+=3)for(var r=e[l]<<16|e[l+1]<<8|e[l+2],i=0;i<4;i++)8*l+6*i<=8*e.length?n.push(t.charAt(r>>>6*(3-i)&63)):n.push("=");return n.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var n=[],l=0,r=0;l<e.length;r=++l%4)0!=r&&n.push((t.indexOf(e.charAt(l-1))&Math.pow(2,-2*r+8)-1)<<2*r|t.indexOf(e.charAt(l))>>>6-2*r);return n}};e.exports=n}()},function(e,t){function n(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return null!=e&&(n(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&n(e.slice(0,0))}(e)||!!e._isBuffer)}},function(e,t,n){(t=e.exports=function(e){e=e.toLowerCase();var n=t[e];if(!n)throw new Error(e+" is not supported (we accept pull requests)");return new n}).sha=n(114),t.sha1=n(118),t.sha224=n(119),t.sha256=n(53),t.sha384=n(120),t.sha512=n(54)},function(e,t,n){var l=n(30),r=n(31),i=n(27).Buffer,s=[1518500249,1859775393,-1894007588,-899497514],o=new Array(80);function a(){this.init(),this._w=o,r.call(this,64,56)}function u(e){return e<<5|e>>>27}function c(e){return e<<30|e>>>2}function d(e,t,n,l){return 0===e?t&n|~t&l:2===e?t&n|t&l|n&l:t^n^l}l(a,r),a.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},a.prototype._update=function(e){for(var t=this._w,n=0|this._a,l=0|this._b,r=0|this._c,i=0|this._d,o=0|this._e,a=0;a<16;++a)t[a]=e.readInt32BE(4*a);for(;a<80;++a)t[a]=t[a-3]^t[a-8]^t[a-14]^t[a-16];for(var p=0;p<80;++p){var g=~~(p/20),h=u(n)+d(g,l,r,i)+o+t[p]+s[g]|0;o=i,i=r,r=c(l),l=n,n=h}this._a=n+this._a|0,this._b=l+this._b|0,this._c=r+this._c|0,this._d=i+this._d|0,this._e=o+this._e|0},a.prototype._hash=function(){var e=i.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e},e.exports=a},function(e,t,n){"use strict";t.byteLength=function(e){var t=u(e),n=t[0],l=t[1];return 3*(n+l)/4-l},t.toByteArray=function(e){for(var t,n=u(e),l=n[0],s=n[1],o=new i(function(e,t,n){return 3*(t+n)/4-n}(0,l,s)),a=0,c=s>0?l-4:l,d=0;d<c;d+=4)t=r[e.charCodeAt(d)]<<18|r[e.charCodeAt(d+1)]<<12|r[e.charCodeAt(d+2)]<<6|r[e.charCodeAt(d+3)],o[a++]=t>>16&255,o[a++]=t>>8&255,o[a++]=255&t;2===s&&(t=r[e.charCodeAt(d)]<<2|r[e.charCodeAt(d+1)]>>4,o[a++]=255&t);1===s&&(t=r[e.charCodeAt(d)]<<10|r[e.charCodeAt(d+1)]<<4|r[e.charCodeAt(d+2)]>>2,o[a++]=t>>8&255,o[a++]=255&t);return o},t.fromByteArray=function(e){for(var t,n=e.length,r=n%3,i=[],s=0,o=n-r;s<o;s+=16383)i.push(d(e,s,s+16383>o?o:s+16383));1===r?(t=e[n-1],i.push(l[t>>2]+l[t<<4&63]+"==")):2===r&&(t=(e[n-2]<<8)+e[n-1],i.push(l[t>>10]+l[t>>4&63]+l[t<<2&63]+"="));return i.join("")};for(var l=[],r=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,a=s.length;o<a;++o)l[o]=s[o],r[s.charCodeAt(o)]=o;function u(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function c(e){return l[e>>18&63]+l[e>>12&63]+l[e>>6&63]+l[63&e]}function d(e,t,n){for(var l,r=[],i=t;i<n;i+=3)l=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),r.push(c(l));return r.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,l,r){var i,s,o=8*r-l-1,a=(1<<o)-1,u=a>>1,c=-7,d=n?r-1:0,p=n?-1:1,g=e[t+d];for(d+=p,i=g&(1<<-c)-1,g>>=-c,c+=o;c>0;i=256*i+e[t+d],d+=p,c-=8);for(s=i&(1<<-c)-1,i>>=-c,c+=l;c>0;s=256*s+e[t+d],d+=p,c-=8);if(0===i)i=1-u;else{if(i===a)return s?NaN:1/0*(g?-1:1);s+=Math.pow(2,l),i-=u}return(g?-1:1)*s*Math.pow(2,i-l)},t.write=function(e,t,n,l,r,i){var s,o,a,u=8*i-r-1,c=(1<<u)-1,d=c>>1,p=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,g=l?0:i-1,h=l?1:-1,f=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,s=c):(s=Math.floor(Math.log(t)/Math.LN2),t*(a=Math.pow(2,-s))<1&&(s--,a*=2),(t+=s+d>=1?p/a:p*Math.pow(2,1-d))*a>=2&&(s++,a/=2),s+d>=c?(o=0,s=c):s+d>=1?(o=(t*a-1)*Math.pow(2,r),s+=d):(o=t*Math.pow(2,d-1)*Math.pow(2,r),s=0));r>=8;e[n+g]=255&o,g+=h,o/=256,r-=8);for(s=s<<r|o,u+=r;u>0;e[n+g]=255&s,g+=h,s/=256,u-=8);e[n+g-h]|=128*f}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){var l=n(30),r=n(31),i=n(27).Buffer,s=[1518500249,1859775393,-1894007588,-899497514],o=new Array(80);function a(){this.init(),this._w=o,r.call(this,64,56)}function u(e){return e<<1|e>>>31}function c(e){return e<<5|e>>>27}function d(e){return e<<30|e>>>2}function p(e,t,n,l){return 0===e?t&n|~t&l:2===e?t&n|t&l|n&l:t^n^l}l(a,r),a.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},a.prototype._update=function(e){for(var t=this._w,n=0|this._a,l=0|this._b,r=0|this._c,i=0|this._d,o=0|this._e,a=0;a<16;++a)t[a]=e.readInt32BE(4*a);for(;a<80;++a)t[a]=u(t[a-3]^t[a-8]^t[a-14]^t[a-16]);for(var g=0;g<80;++g){var h=~~(g/20),f=c(n)+p(h,l,r,i)+o+t[g]+s[h]|0;o=i,i=r,r=d(l),l=n,n=f}this._a=n+this._a|0,this._b=l+this._b|0,this._c=r+this._c|0,this._d=i+this._d|0,this._e=o+this._e|0},a.prototype._hash=function(){var e=i.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e},e.exports=a},function(e,t,n){var l=n(30),r=n(53),i=n(31),s=n(27).Buffer,o=new Array(64);function a(){this.init(),this._w=o,i.call(this,64,56)}l(a,r),a.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},a.prototype._hash=function(){var e=s.allocUnsafe(28);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e},e.exports=a},function(e,t,n){var l=n(30),r=n(54),i=n(31),s=n(27).Buffer,o=new Array(160);function a(){this.init(),this._w=o,i.call(this,128,112)}l(a,r),a.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},a.prototype._hash=function(){var e=s.allocUnsafe(48);function t(t,n,l){e.writeInt32BE(t,l),e.writeInt32BE(n,l+4)}return t(this._ah,this._al,0),t(this._bh,this._bl,8),t(this._ch,this._cl,16),t(this._dh,this._dl,24),t(this._eh,this._el,32),t(this._fh,this._fl,40),e},e.exports=a},function(e,t,n){e.exports=function(e){var t=n(122),l=t.version,r=t.title,i=Object.defineProperties({},{version:{get:function(){return l}},name:{get:function(){return r}}});return i.env=e,i.Exceptions=n(55),n(123)(i,e),n(128)(i,e),i}},function(e){e.exports={name:"bbm_transport",version:"1.0.0",description:"The SIP transport used by BBM WebSDK",main:"src/index.js",browser:{"./src/environment.js":"./src/environment_browser.js"},scripts:{test:"grunt test"},repository:{type:"git",url:"ssh://gerrit.rim.net:29418/bbmsysperf/bbmwebsdk/bbm_transport.git"},keywords:["SIP","transport","BBM","WebSDK"],devDependencies:{grunt:"~0.4.0","grunt-cli":"~0.1.6","grunt-contrib-copy":"^0.5.0","grunt-contrib-jshint":">0.5.0","grunt-jasmine-nodejs":"^1.6.0","grunt-karma":"^2.0.0","grunt-trimtrailingspaces":"^0.4.0","grunt-webpack":"^3.0.0",karma:"^1.7.1","karma-chrome-launcher":"^2.1.1","karma-jasmine":"^1.1.1","karma-phantomjs-launcher":"^1.0.4","karma-spec-reporter":"0.0.31","karma-webpack":"^2.0.11","uglifyjs-webpack-plugin":"^0.4.6"},optionalDependencies:{promiscuous:"^0.6.0"},engines:{node:">=0.12"},author:"BlackBerry",license:"ISC",dependencies:{"base64-js":"^1.2.3",btoa:"~1.1.2",md5:"~2.2.1","sdp-transform":"^2.4.0","sha.js":"^2.4.10",websocket:"^1.0.25"}}},function(e,t,n){e.exports=function(e,t){"use strict";var l,r=n(39)(e,t),i=n(58)(e,t),s=n(125)(e,t),o=n(59)(e,t),a=n(12).Features,u=n(127)(e,t),c=n(55);((l=function(t,n){if(!(t.sipTransport&&t.sipTransport instanceof e.SIPTransport))throw new e.Exceptions.InvalidArgumentError("bbmenterprise.sipTransport",t.sipTransport);this.transport=t.sipTransport,this.userCacher=new u(this.transport.config.getPins),this.callSessions=[];var l={t:this.transport.config.bbm_token.bbmTokenMin};this.logger=this.transport.loggerFactory.getLogger("Media"),l.t||(delete n.turnServers,this.logger.warn("Turn bbm token unsupported by the BUS server, skipping turn configuration")),n.turnServers&&n.turnServers.forEach(function(e){e.username||(e.username=JSON.stringify(l)),e.password||(e.password=this.transport.config.bbm_token.secret)}.bind(this)),this.configure(n),this.transport.sipUA.on("earlyInvite",function(e){s.incomingCall(this,e)}.bind(this))}).prototype=Object.create(t.SIP.EventEmitter.prototype)).configure=function(n){this.stunServers=n.stunServers||this.stunServers,this.turnServers=n.turnServers||this.turnServers,this.protect=n.protect||this.protect,this.unprotect=n.unprotect||this.unprotect;try{this.transport.sipUA.updateIceServers(this.stunServers,this.turnServers),this.transport.sipConfiguration.stunServers=this.stunServers,this.transport.sipConfiguration.turnServers=this.turnServers,this.getUserMedia=n.getUserMedia,this.getUserMedia&&(t.SIP.WebRTC.getUserMedia=this.getUserMedia)}catch(t){throw new e.Exceptions.InvalidArgumentError("config.stunServers/config.turnServers",(this.stunServers||[]).concat(this.turnServers||[]))}},l.prototype.supported=function(){return l.supported()},l.prototype.makeCall=function(t,n){if(!l.featureSupported(a.MEDIA_CALL))throw new e.Exceptions.NotSupportedError("Media calls unsupported");if(!(t&&t instanceof r.Callee&&t.regId))throw new e.Exceptions.InvalidArgumentError("callee",t);if(!(n&&n instanceof r.Options))throw new e.Exceptions.InvalidArgumentError("callOptions",n);if(!this.transport.sipUA.isConnected())throw new e.Exceptions.InvalidStateError("no connection");return s.outgoingCall(this,t,n)},l.prototype.createDataConnection=function(n,i,o){if(!l.featureSupported(a.DATA_CONNECTION))throw new e.Exceptions.NotSupportedError("Data connections unsupported");if(!(n&&n instanceof r.Callee&&n.regId))throw new e.Exceptions.InvalidArgumentError("callee",n);if(!this.transport.sipUA.isConnected())throw new e.Exceptions.InvalidStateError("no connection");return i&&(i=t.btoa(JSON.stringify(i))),s.onOutgoingDataConnection(this,n,i,o)},l.prototype.hasVideoDevice=function(){return r.Utils.hasMediaDevice("videoinput")},l.prototype.hasAudioDevice=function(){return r.Utils.hasMediaDevice("audioinput")},l.supported=function(){return t.SIP.WebRTC.isSupported()},l.featureSupported=function(e){var n=[],r=l.supported();function i(e){return(e!==a.MEDIA_CALL||"Node"!==t.envProduct)&&r}return e instanceof Array?(e.forEach(function(e){n.push(i(e))}),n):i(e)},l.CallEndReason=r.EndReason,l.CallEndCause=r.EndCause,l.SipStatusCode=r.SipStatusCode,l.Callee=r.Callee,l.Caller=r.Caller,l.CallOptions=r.Options,l.CallStatus=r.Status,l.CallMediaStatus=r.MediaStatus,l.CallState=r.State,l.CallQosLevels=r.QosReport.QualityLevels,l.Call=i,l.DataConnection=o,l.TurnServerConfig=function(e,t,n,l){this.server="turn:"+t+"?transport="+e,this.username=n,this.password=l},l.Exceptions=c,l.Features=a,e.VVoip=l}},function(e,t){e.exports=function(){"use strict";var e,t=[18,42],n={QUALITY_UNKNOWN:0,QUALITY_GOOD:1,QUALITY_MODERATE:2,QUALITY_POOR:3},l=function(){this.n=0,this.y_sum=0,this.x_sum=0,this.xy_sum=0,this.x2_sum=0,this.slope=0,this.y_int=0};return(e=function(e){this.level=n.QUALITY_UNKNOWN,this.samples=[],this.thresholds=e.thresholds||t}).prototype.addSample=function(e){var t=0,n=0,l=!1;if(e.received){["audio","video"].forEach(function(r){e.received[r]&&(t+=e.received[r].packets,n+=e.received[r].loss,l=!0)})}if(l){var r=new function(e,t,n){this.ts=e,this.rx_pkt=t,this.rx_loss=n}(e.ts,t,n);this.samples.unshift(r),this.samples.length>4&&this.samples.splice(this.samples.length-1,1)}},e.prototype.dump=function(e){0},e.prototype.detectQos=function(){function e(e){if(e.n<=1)return e.slope=0,void(e.y_int=e.y_sum);e.slope=(e.n*e.xy_sum-e.x_sum*e.y_sum)/(e.n*e.x2_sum-e.x_sum*e.x_sum),e.y_int=(e.y_sum-e.slope*e.x_sum)/e.n}if(this.samples.length<4)return 0;var t=new l,r=new l;this.samples.forEach(function(e){var n,l;n=(l=(this.samples[0].ts-e.ts)/1e3)*l,t.y_sum+=e.rx_pkt,t.x_sum+=l,t.xy_sum+=l*e.rx_pkt,t.x2_sum+=n,t.n++,r.y_sum+=e.rx_loss,r.x_sum+=l,r.xy_sum+=l*e.rx_loss,r.x2_sum+=n,r.n++}.bind(this)),e(t),e(r);var i=n.QUALITY_UNKNOWN;if(t.slope+r.slope!==0){var s=r.slope/(t.slope+r.slope)*100;this.thresholds.some(function(e){return i++,s<e})}else i=n.QUALITY_POOR;return i!==this.level?(this.level=i,i):-1},e.QualityLevels=n,e}},function(e,t,n){e.exports=function(e,t){var l=n(12).SIP,r=n(12).Limits,i=n(12).Features,s=n(40)(e,t),o=n(39)(e,t),a=n(58)(e,t),u=n(59)(e,t),c=n(12).CallEndReason,d=n(12).CallEndCause,p=n(12).SipStatusCode;function g(e,t){var n=new a(t,e);return n.on("disconnected",function(t){var n=e.callSessions.indexOf(t);n>-1&&e.callSessions.splice(n,1)}),e.callSessions.push(n),n}function h(n,l,r,i){return new t.SIP.Utils.Promise(function(a,u){n.userCacher.getUserByRegId(l.regId).then(function(d){var p;function h(){new t.SIP.Utils.Promise(function(e,t){var s=n.transport.sipUA.invite(d.pin,i,{resolve:e,reject:t});p=new o(l,s,n,r)}).then(function(e){a(g(n,p))}).catch(function(e){p&&p.end(c.FAILURE_MEDIASETUP),s.toLocalError(e,u)})}l.pin=d.pin,r.video?s.hasVideoDevice().then(function(t){t?h():(p&&p.end(c.FAILURE_MEDIASETUP),u(new e.Exceptions.NotSupportedError("No video device available")))}):h()}).catch(function(e){u(e)})})}return{incomingCall:function(t,n){var r=n.session,a=n.defered,c=s.getHeader(r,l.HEADERS.CONTACT).parsed.uri.parameters.pin,h=s.getHeader(r,l.HEADERS.REG_ID).raw,f=new o(new o.Caller(c,h,r.request.from.friendlyName),r,t);a.promise.then(function(){var n=f.remoteFeatures&&f.remoteFeatures.indexOf(l.FEATURES.DATA_CONNECTION)>-1;e.VVoip.featureSupported(n?i.DATA_CONNECTION:i.MEDIA_CALL)?t.callSessions.some(function(e){return e.isMyRecoveryCall(f)})||(s.getPrevCallId(r)?s.endCall(f,p.NOT_ACCEPTABLE_HERE,d.CALL_END_USER):n?t.emit("incomingDataConnection",new u(g(t,f),t)):t.emit("incomingCall",g(t,f))):f.reject(p.NOT_IMPLEMENTED)}).catch(function(e){})},outgoingCall:function(e,t,n){var l=n.toMediaOptions();return l.extraHeaders=s.getExtraHeaders(e.transport,{}),l.params=s.getParams(e.transport),h(e,t,n,l)},onOutgoingDataConnection:function(n,l,i,o){var a=new u.Options,c=a.toMediaOptions();if(i&&i.length>r.MAX_META_DATA_SIZE)throw new e.Exceptions.InvalidArgumentError("metaData.length",i.length);return a.metaData=i,c.extraHeaders=s.getExtraHeaders(n.transport,a),c.params=s.getParams(n.transport),h(n,l,a,c).then(function(e){return t.Promise.resolve(new u(e,n,o))})}}}},function(e,t){e.exports=function(){var e;return e=function(e,t,n){this.logger=e.getLogger(t),this.id=n},Object.keys({error:0,warn:1,log:2,debug:3}).forEach(function(t){e.prototype[t]=function(e){this.logger[t](this.id+" | "+e)}}),e}},function(e,t,n){e.exports=function(e,t){var l=n(12).Timeouts,r=function(t){if(this.users={},this.getPins=t,!t)throw new e.Exceptions.NotSupportedError("SIPTransport.config.getPins are not configured")};return r.User=function(e,t){this.pin=e,this.expiry=Date.now()+1e3*t},r.prototype.getUserByRegId=function(n){return new t.SIP.Utils.Promise(function(t,i){if(this.users[n]){if(this.users[n].expiry>Date.now())return void t(this.users[n]);delete this.users[n]}var s=setTimeout(function(){i(new e.Exceptions.TimeoutError("Timed out querying user info"))},l.BUS_GET_USER_TIMEOUT);this.getPins([n]).then(function(e){clearTimeout(s),this.users[n]=new r.User(e.result[0].pin,e.checkPeriod),t(this.users[n])}.bind(this))}.bind(this))},r.prototype.getUserByPin=function(e){return this.users.filter(function(t){return t.pin===e})[0]},r}},function(e,t,n){e.exports=function(e,t){"use strict";var l,r=n(56),i=n(129)(e,t),s=function(e,t,n,l,r){this.body=e,this.call_id=t,this.mbx_id=n,this.cause=l,this.status_code=r},o=function(e,t){this.cause=e,this.status_code=t};function a(n,l,r){n.on("accepted",function(e,t){l(new s(e.body,e.call_id,e.to.uri.user,t,e.status_code))}),n.on("failed",function(n,l){n?r(new s(n.body,n.call_id,n.to.uri.user,l,n.status_code)):l===t.SIP.C.causes.REQUEST_TIMEOUT?r(new e.Exceptions.TimeoutError(l)):r(new e.Exceptions.InvalidStateError(l))})}(l=function(n){var a=this;if("object"!=typeof n)throw new e.Exceptions.InvalidArgumentError("config",n);switch(["server_addr","server_port","id_provider","id_provider_user","pin","regId","endpoint_id","bbmuser"].forEach(function(t){if(!n[t])throw new e.Exceptions.InvalidArgumentError(t,n[t])}),this.config=n,this.reconnectTime=0,this.nc=0,this.registrationRetryTimer=null,n.bbm_token||n.bbmuser.refreshBBMToken(function(e){n.bbm_token=e}),void 0===this.config.logLevel&&(this.config.logLevel=2),this.config.logLevel){case 0:t.SIP.LoggerFactory.prototype.warn=function(){};case 1:t.SIP.LoggerFactory.prototype.log=function(){};case 2:t.SIP.LoggerFactory.prototype.debug=function(){}}this.loggerFactory=new t.SIP.LoggerFactory(n.logLevel),this.logger=this.loggerFactory.getLogger("SIPTransport");var u=new i(this),c=r.CONTACT_FEATURES.filter(function(t){return!(e.VVoip&&e.VVoip.disabled||!e.VVoip.featureSupported(e.VVoip.Features.MEDIA_CALL))||-1===r.CONTACT_FEATURE_MEDIA.indexOf(t)}).join(";");if(this.config.features&&this.config.features instanceof Array)for(var d=0;d<this.config.features.length;d++)r.EXTRA_CONTACT_FEATURES.indexOf(this.config.features[d])>-1&&(c+=";"+this.config.features[d]);var p=t.SIP.Utils.escapeUser(u.hash(n.id_provider_user));this.sipConfiguration={traceSip:!1,uri:p+"@"+n.id_provider,displayName:"",hackIpInContact:this.config.server_addr,contactTransport:"tls",contactUser:p,contactHeaders:{pin:this.config.pin,ep:this.config.endpoint_id},wsServers:[{scheme:"WSS",sip_uri:"<sip:>"+this.config.server_addr+":"+this.config.server_port+r.SIP_SERVER_APPENDIX+" transport=tls SIP/2.0>",status:0,weight:100,ws_uri:"wss://"+this.config.server_addr+":"+this.config.server_port+r.SIP_SERVER_APPENDIX}],userAgentString:r.USER_AGENT(t.envProduct,this.config.version||r.VERSION),iceCheckingTimeout:r.MAX_ICE_GATHERING_DURATION,hackStripTcp:!0,authenticationFactory:function(e){return u},challengeRequestHandlerFactory:function(){return new function(){function e(e){return e.replace(/['"&><]/g,function(e){switch(e){case"'":return"&apos;";case'"':return"&quot;";case"&":return"&amp;";case">":return"&gt;";case"<":return"&lt;"}return e})}function n(t,n){return function(t,n,l){for(var r=function(e,t){return e||t}(t,n),i=e(r);void 0!==l&&i.length>l;)i=e(r=r.substring(0,r.length-1));return i}(t,n,r.REG_REQ_MAX_LENGTH)}this.handleRequest=function(e){var l='<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r\n';l+="<x-rim-registration-request>\r\n",l+="<device-make>"+n(t.envMake,"Unknown")+"</device-make>\r\n",l+="<device-model>"+n(t.envModel,"Unknown")+"</device-model>\r\n",l+="<os-version>"+n(t.envVersion,"0.0")+"</os-version>\r\n",l+="<nat-type>Unknown,Unknown</nat-type>\r\n",l+="<client-software-version>"+n(r.USER_AGENT(t.envProduct,a.config.version||r.VERSION),"0.0")+"</client-software-version>\r\n",l+="<client-software>"+n(r.CLIENT_NAME_PREFIX+a.config.id_provider,"Unknown")+"</client-software>\r\n",l+="<bb-protocol-support>NONE</bb-protocol-support>\r\n",l+="<radio-support>WIFI</radio-support>\r\n",l+="</x-rim-registration-request>",e.body={contentType:"application/vnd.rim.voip.registration.v1+xml",body:l}}}},socketFactory:function(e,n){var i;if("Node"===t.envProduct){var s=[];if(a.config.certs&&a.config.certs instanceof Array){var o=new l.CaManager(a.config.certs);s=s.concat(o.getCerts())}a.config.caManager&&(s=s.concat(a.config.caManager.getCerts()));var u={tlsOptions:{secureProtocol:"TLSv1_2_method",secureOptions:t.constants.SSL_OP_NO_TICKET,ciphers:r.DEFAULT_SSL_CIPHERS}};s.length?u.tlsOptions.ca=s:a.logger.warn("No certs are loaded for pinning, system default certs used"),i=new t.WebSocket(e,null,null,null,n,u)}else i=new t.WebSocket(e);return i},register:!1,registerExpires:r.DEFAULT_REGISTRATION_EXPIRY,keepAliveInterval:r.DEFAULT_KEEPALIVE_INTERVAL,extraSupported:r.SUPPORT_HEADERS.filter(function(e){return!this.config.spop||e!==r.SUPPORT_HEADER_MPOP}.bind(this)),disableRegId:!0,contactRegistrationAppendix:c,supportedURISchemes:r.SUPPORTED_URI_SCHEMES,enableBlackberryEarlyIce:!0};var g={extraHeaders:["Expires: "+this.sipConfiguration.registerExpires]};this.sipUA=new t.SIP.UA(this.sipConfiguration),this.sipUA.log.level=this.config.logLevel,this.sipUA.on("connected",function(e){a.sipUA&&(e&&e.transport&&e.transport.ua.configuration.register||a.pendingToken||a.sipUA.register(g))}),this.sipUA.on("registrationFailed",function(e,t){if(a.sipUA)if(a.pendingToken)a.logger.log("Registration failure with code "+(e&&e.status_code)+" ignored as token refreshing.");else{a.pendingToken=!0,a.sipUA.configuration.register=!1,n.bbmuser.refreshBBMToken(function(e){if(a.pendingToken=!1,a.sipUA){e.bbmToken&&e.bbmToken!==a.config.bbm_token.bbmToken?(a.logger.log("Token successfully refreshed, re-registering"),a.config.bbm_token=e,a.registrationRetryTimer&&(clearTimeout(a.registrationRetryTimer),a.registrationRetryTimer=null),a.sipUA.isConnected()?a.sipUA.isRegistered()||a.sipUA.register(g):l()):l()}},function(e){a.pendingToken=!1,a.logger.error("Error in obtaining token, "+e),l()});e&&410===e.status_code&&a.emit("pinOwnerChanged"),a.emit("registration_failed",new o(t,e?e.status_code:0))}function l(){a.sipUA&&(a.reconnectTime||(a.reconnectTime=5),function e(t){a.reconnectTime&&(a.registrationRetryTimer&&clearTimeout(a.registrationRetryTimer),a.logger.log("Registration is scheduled in "+a.reconnectTime+" secs."),a.registrationRetryTimer=setTimeout(function(){a.reconnectTime*=2,a.reconnectTime=Math.min(r.MAX_RETRY_INTERVAL,a.reconnectTime),a.registrationRetryTimer=null,a.sipUA.isConnected()&&!a.pendingToken?(a.logger.log("Start registration now, and the next retry in "+a.reconnectTime+" secs."),a.sipUA.isRegistered()||a.sipUA.register(t)):e(t)},1e3*a.reconnectTime))}(g))}}),this.sipUA.on("registered",function(e){a.sipUA&&(a.registrationRetryTimer&&clearTimeout(a.registrationRetryTimer),a.reconnectTime=0,a.emit("registered",new o(void 0,e?e.status_code:0)))}),this.sipUA.on("disconnected",function(e){a.sipUA&&a.emit("disconnected")}),this.sipUA.on("message",function(e){a.sipUA&&("B/M"===e.contentType&&a.emit("McpOnlineMessage",new function(e,n,l){this.body=e,this.mbx_id=n,this.context=l,this.reply=function(e,n){return new t.Promise(function(t,l){var r={body:e,extraHeaders:n,events:["reply_response"]};this.context.on("reply_response",function(e,n){"ok"===n?t(new s(e.body,e.call_id,e.from.uri.user,n,e.status_code)):l(new s(e.body,e.call_id,e.from.uri.user,n,e.status_code))}),this.context.reply(r)})}}(e.body,e.request.from.uri.user,e)),a.emit("message",e))}),this.sipUA.on("keepAliveTimeout",function(){a.sipUA&&(a.logger.warn("Keepalive response timed out, resetting socket..."),a.sipUA.transport.reconnect())})}).prototype=Object.create(t.SIP.EventEmitter.prototype),l.prototype.stop=function(){this.registrationRetryTimer&&(clearTimeout(this.registrationRetryTimer),this.registrationRetryTimer=null),this.sipUA&&(this.sipUA.stop(),this.sipUA=null)},l.prototype.isConnected=function(){return!!this.sipUA&&this.sipUA.isConnected()},l.prototype.message=function(n,l,r,i){if(!this.sipUA||!this.sipUA.isConnected())throw new e.Exceptions.InvalidStateError("no connection");return this.sipUA.message(new t.SIP.URI(n,l),r,i)},l.prototype.mcpSync=function(e){return new t.Promise(function(t,n){var l,r={params:{to_uri:"mbx:sync",from_uri:"pin:"+this.config.pin.toUpperCase()},contentType:"B/T"};try{l=this.message("svc","sync",e,r)}catch(e){n(e)}a(l,t,n)}.bind(this))},l.prototype.mcpPull=function(e,n){return new t.Promise(function(t,l){var r,i={params:{to_uri:"mbx:"+e,from_uri:"pin:"+this.config.pin.toUpperCase()},contentType:"B/T"};try{r=this.message("svc","pull",n,i)}catch(e){l(e)}a(r,t,l)}.bind(this))},l.prototype.mcpPost=function(e,n,l){return new t.Promise(function(t,r){var i,s={params:{to_uri:"mbx:"+e,from_uri:"pin:"+this.config.pin.toUpperCase()},contentType:"B/T"};try{i=this.message("svc","post",n,s)}catch(e){r(e)}l&&"object"==typeof l&&(l.val=i.request.call_id),a(i,t,r)}.bind(this))},l.SipStatusCode=r.SipStatusCode,"Node"===t.envProduct&&(l.CaManager=n(130)(e,t)),e.SIPTransport=l,e.BbAuthentication=i}},function(e,t){e.exports=function(e,t){"use strict";return function(e){var n=this;this.logger=e.loggerFactory.getLogger("SIPTransport.Authentication"),this.transport=e,this.authenticate=function(e,l){if(n.algorithm=l.algorithm,n.realm=l.realm,n.nonce=l.nonce,n.opaque=l.opaque,n.stale=l.stale,l.qop)if(l.qop.indexOf("auth")>-1)n.qop="auth";else{if(!(l.qop.indexOf("auth-int")>-1))return n.logger.warn('challenge without Digest qop different than "auth" or "auth-int", authentication aborted'),!1;n.qop="auth-int"}else n.qop=null;return n.transport.config.bbmeAuth?n.username=t.SIP.Utils.escapeUser(n.transport.config.id_provider_user):n.username=n.hash(n.transport.config.id_provider_user),n.method=e.method,n.uri=e.ruri,n.cnonce=t.SIP.Utils.createRandomToken(16),n.transport.nc++,n.updateNcHex(),4294967296===n.transport.nc&&(n.transport.nc=1,n.ncHex="00000001"),n.calculateResponse(),!0},this.updateNcHex=function(){var e=Number(n.transport.nc).toString(16);n.ncHex="00000000".substr(0,8-e.length)+e},this.calculateResponse=function(){var e,l;e=t.MD5(n.username+":"+n.realm+":"+n.transport.config.bbm_token.secret),"auth"===n.qop?(l=t.MD5(n.method+":"+n.uri),n.response=t.MD5(e+":"+n.nonce+":"+n.ncHex+":"+n.cnonce+":auth:"+l)):"auth-int"===n.qop?(l=t.MD5(n.method+":"+n.uri+":"+t.MD5(n.body?n.body:"")),n.response=t.MD5(e+":"+n.nonce+":"+n.ncHex+":"+n.cnonce+":auth-int:"+l)):null===n.qop&&(l=t.MD5(n.method+":"+n.uri),n.response=t.MD5(e+":"+n.nonce+":"+l))},this.hash=function(e){var n=e;return t.SHA("sha1").update(n,"utf8").digest("base64").replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")},this.toString=function(){var e=[];if(!n.response)throw new Error("response field does not exist, cannot generate Authorization header");return e.push('username="'+n.username+'"'),e.push('realm="'+n.realm+'"'),e.push('nonce="'+n.nonce+'"'),e.push('uri="'+n.uri+'"'),e.push('response="'+n.response+'"'),n.opaque&&e.push('opaque="'+n.opaque+'"'),n.qop&&(e.push("qop="+n.qop),e.push("nc="+n.ncHex),e.push('cnonce="'+n.cnonce+'"')),e.push("algorithm="+n.algorithm),e.push('auth-param="'+n.transport.config.bbm_token.bbmToken+'"'),"Digest "+e.join(", ")}}}},function(e,t){e.exports=function(e,t){"use strict";function n(e){var t=/-----BEGIN CERTIFICATE-----\n?/g;return(e=e.replace(/(?:\r\n|\r|\n)/g,"\n")).split(/-----END CERTIFICATE-----\n?/).filter(function(e){var n=e.match(t);return e.length>0&&n&&1===n.length}).map(function(e){return e.trim()+"\n-----END CERTIFICATE-----"})}var l=function(l,r){if(!t.Fs)throw new e.Exceptions.NotSupportedError("Fs module not available");var i=t.Fs,s=[];if(this.loggerFactory=new t.SIP.LoggerFactory,this.logger=this.loggerFactory.getLogger("CaManager"),this.caLoaded=[],l instanceof t.Buffer)this.caLoaded=n(l.toString("utf8"));else{if(!Array.isArray(l))throw new e.Exceptions.InvalidArgumentError("caList",l);s=l}s.forEach(function(l){var r,o,a;if("string"==typeof l)r=l;else{if("object"!=typeof l)throw this.logger.error("Invalid CA entry ",l),new e.Exceptions.InvalidArgumentError("caList",s);r=l.path,o=l.hash,!r&&l.buffer&&(a=l.buffer.toString("utf8"))}if(!a){if(!i.existsSync(r))throw new e.Exceptions.InvalidArgumentError("caList.member",r,"File "+r+" is missing.");try{a=i.readFileSync(r,{encoding:"utf8"}),this.logger.log("Loaded CA file ["+r+"]")}catch(t){throw this.logger.error("CA file ["+r+"] failed to load."),new e.Exceptions.InvalidArgumentError("caList.member",r,"File "+r+" failed to load with error: "+t)}}if(o&&o!==t.SHA("sha512").update(a,"utf8").digest("base64"))throw this.logger.error("CA file ["+r+"] failed to load as hash mismatches."),new e.Exceptions.InvalidArgumentError("caList.member",r,"File "+r+" failed to be validated.");this.caLoaded=this.caLoaded.concat(n(a))}.bind(this)),this.caLoaded.length&&(this.caLoaded.forEach(function(e){this.logger.debug("Loaded CA: \n"+e)}.bind(this)),r&&(t.https.globalAgent.options.ca=this.caLoaded))};return l.prototype.getCerts=function(){return this.caLoaded},l}},function(module,exports,__webpack_require__){(function(global,Buffer){var $jscomp={scope:{},getGlobal:function(e){return"undefined"!=typeof window&&window===e?e:void 0!==global?global:e}};$jscomp.global=$jscomp.getGlobal(this),$jscomp.initSymbol=function(){$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol),$jscomp.initSymbol=function(){}},$jscomp.symbolCounter_=0,$jscomp.Symbol=function(e){return"jscomp_symbol_"+e+$jscomp.symbolCounter_++},$jscomp.initSymbolIterator=function(){$jscomp.initSymbol(),$jscomp.global.Symbol.iterator||($jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator")),$jscomp.initSymbolIterator=function(){}},$jscomp.makeIterator=function(e){$jscomp.initSymbolIterator(),$jscomp.initSymbol(),$jscomp.initSymbolIterator();var t=e[Symbol.iterator];if(t)return t.call(e);var n=0;return{next:function(){return n<e.length?{done:!1,value:e[n++]}:{done:!0}}}},$jscomp.arrayFromIterator=function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n},$jscomp.arrayFromIterable=function(e){return e instanceof Array?e:$jscomp.arrayFromIterator($jscomp.makeIterator(e))},$jscomp.inherits=function(e,t){function n(){}for(var l in n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e,t)if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,l);r&&Object.defineProperty(e,l,r)}else e[l]=t[l]},$jscomp.array=$jscomp.array||{},$jscomp.iteratorFromArray=function(e,t){$jscomp.initSymbolIterator(),e instanceof String&&(e+="");var n=0,l={next:function(){if(n<e.length){var r=n++;return{value:t(r,e[r]),done:!1}}return l.next=function(){return{done:!0,value:void 0}},l.next()}};return $jscomp.initSymbol(),$jscomp.initSymbolIterator(),l[Symbol.iterator]=function(){return l},l},$jscomp.findInternal=function(e,t,n){e instanceof String&&(e=String(e));for(var l=e.length,r=0;r<l;r++){var i=e[r];if(t.call(n,i,r,e))return{i:r,v:i}}return{i:-1,v:void 0}},$jscomp.array.from=function(e,t,n){$jscomp.initSymbolIterator(),t=null!=t?t:function(e){return e};var l=[];if($jscomp.initSymbol(),$jscomp.initSymbolIterator(),"function"==typeof(r=e[Symbol.iterator])&&(e=r.call(e)),"function"==typeof e.next)for(;!(r=e.next()).done;)l.push(t.call(n,r.value));else for(var r=e.length,i=0;i<r;i++)l.push(t.call(n,e[i]));return l},$jscomp.array.of=function(e){return $jscomp.array.from(arguments)},$jscomp.array.entries=function(){return $jscomp.iteratorFromArray(this,function(e,t){return[e,t]})},$jscomp.array.installHelper_=function(e,t){!Array.prototype[e]&&Object.defineProperties&&Object.defineProperty&&Object.defineProperty(Array.prototype,e,{configurable:!0,enumerable:!1,writable:!0,value:t})},$jscomp.array.entries$install=function(){$jscomp.array.installHelper_("entries",$jscomp.array.entries)},$jscomp.array.keys=function(){return $jscomp.iteratorFromArray(this,function(e){return e})},$jscomp.array.keys$install=function(){$jscomp.array.installHelper_("keys",$jscomp.array.keys)},$jscomp.array.values=function(){return $jscomp.iteratorFromArray(this,function(e,t){return t})},$jscomp.array.values$install=function(){$jscomp.array.installHelper_("values",$jscomp.array.values)},$jscomp.array.copyWithin=function(e,t,n){var l=this.length;if(e=Number(e),t=Number(t),n=Number(null!=n?n:l),e<t)for(n=Math.min(n,l);t<n;)t in this?this[e++]=this[t++]:(delete this[e++],t++);else for(e+=(n=Math.min(n,l+t-e))-t;n>t;)--n in this?this[--e]=this[n]:delete this[e];return this},$jscomp.array.copyWithin$install=function(){$jscomp.array.installHelper_("copyWithin",$jscomp.array.copyWithin)},$jscomp.array.fill=function(e,t,n){var l=this.length||0;for(0>t&&(t=Math.max(0,l+t)),(null==n||n>l)&&(n=l),0>(n=Number(n))&&(n=Math.max(0,l+n)),t=Number(t||0);t<n;t++)this[t]=e;return this},$jscomp.array.fill$install=function(){$jscomp.array.installHelper_("fill",$jscomp.array.fill)},$jscomp.array.find=function(e,t){return $jscomp.findInternal(this,e,t).v},$jscomp.array.find$install=function(){$jscomp.array.installHelper_("find",$jscomp.array.find)},$jscomp.array.findIndex=function(e,t){return $jscomp.findInternal(this,e,t).i},$jscomp.array.findIndex$install=function(){$jscomp.array.installHelper_("findIndex",$jscomp.array.findIndex)},$jscomp.ASSUME_NO_NATIVE_MAP=!1,$jscomp.Map$isConformant=function(){if($jscomp.ASSUME_NO_NATIVE_MAP)return!1;var e=$jscomp.global.Map;if(!e||!e.prototype.entries||"function"!=typeof Object.seal)return!1;try{var t=Object.seal({x:4}),n=new e($jscomp.makeIterator([[t,"s"]]));if("s"!=n.get(t)||1!=n.size||n.get({x:4})||n.set({x:4},"t")!=n||2!=n.size)return!1;var l=n.entries(),r=l.next();return!r.done&&r.value[0]==t&&"s"==r.value[1]&&!((r=l.next()).done||4!=r.value[0].x||"t"!=r.value[1]||!l.next().done)}catch(e){return!1}},$jscomp.Map=function(e){if(this.data_={},this.head_=$jscomp.Map.createHead(),this.size=0,e){e=$jscomp.makeIterator(e);for(var t;!(t=e.next()).done;)t=t.value,this.set(t[0],t[1])}},$jscomp.Map.prototype.set=function(e,t){var n=$jscomp.Map.maybeGetEntry(this,e);return n.list||(n.list=this.data_[n.id]=[]),n.entry?n.entry.value=t:(n.entry={next:this.head_,previous:this.head_.previous,head:this.head_,key:e,value:t},n.list.push(n.entry),this.head_.previous.next=n.entry,this.head_.previous=n.entry,this.size++),this},$jscomp.Map.prototype.delete=function(e){return!(!(e=$jscomp.Map.maybeGetEntry(this,e)).entry||!e.list)&&(e.list.splice(e.index,1),e.list.length||delete this.data_[e.id],e.entry.previous.next=e.entry.next,e.entry.next.previous=e.entry.previous,e.entry.head=null,this.size--,!0)},$jscomp.Map.prototype.clear=function(){this.data_={},this.head_=this.head_.previous=$jscomp.Map.createHead(),this.size=0},$jscomp.Map.prototype.has=function(e){return!!$jscomp.Map.maybeGetEntry(this,e).entry},$jscomp.Map.prototype.get=function(e){return(e=$jscomp.Map.maybeGetEntry(this,e).entry)&&e.value},$jscomp.Map.prototype.entries=function(){return $jscomp.Map.makeIterator_(this,function(e){return[e.key,e.value]})},$jscomp.Map.prototype.keys=function(){return $jscomp.Map.makeIterator_(this,function(e){return e.key})},$jscomp.Map.prototype.values=function(){return $jscomp.Map.makeIterator_(this,function(e){return e.value})},$jscomp.Map.prototype.forEach=function(e,t){for(var n,l=this.entries();!(n=l.next()).done;)n=n.value,e.call(t,n[1],n[0],this)},$jscomp.Map.maybeGetEntry=function(e,t){var n=$jscomp.Map.getId(t),l=e.data_[n];if(l&&Object.prototype.hasOwnProperty.call(e.data_,n))for(var r=0;r<l.length;r++){var i=l[r];if(t!=t&&i.key!=i.key||t===i.key)return{id:n,list:l,index:r,entry:i}}return{id:n,list:l,index:-1,entry:void 0}},$jscomp.Map.makeIterator_=function(e,t){var n=e.head_,l={next:function(){if(n){for(;n.head!=e.head_;)n=n.previous;for(;n.next!=n.head;)return n=n.next,{done:!1,value:t(n)};n=null}return{done:!0,value:void 0}}};return $jscomp.initSymbol(),$jscomp.initSymbolIterator(),l[Symbol.iterator]=function(){return l},l},$jscomp.Map.mapIndex_=0,$jscomp.Map.createHead=function(){var e={};return e.previous=e.next=e.head=e},$jscomp.Map.getId=function(e){if(!(e instanceof Object))return"p_"+e;if(!($jscomp.Map.idKey in e))try{$jscomp.Map.defineProperty(e,$jscomp.Map.idKey,{value:++$jscomp.Map.mapIndex_})}catch(e){}return $jscomp.Map.idKey in e?e[$jscomp.Map.idKey]:"o_ "+e},$jscomp.Map.defineProperty=Object.defineProperty?function(e,t,n){Object.defineProperty(e,t,{value:String(n)})}:function(e,t,n){e[t]=String(n)},$jscomp.Map.Entry=function(){},$jscomp.Map$install=function(){$jscomp.initSymbol(),$jscomp.initSymbolIterator(),$jscomp.Map$isConformant()?$jscomp.Map=$jscomp.global.Map:($jscomp.initSymbol(),$jscomp.initSymbolIterator(),$jscomp.Map.prototype[Symbol.iterator]=$jscomp.Map.prototype.entries,$jscomp.initSymbol(),$jscomp.Map.idKey=Symbol("map-id-key"),$jscomp.Map$install=function(){})},$jscomp.math=$jscomp.math||{},$jscomp.math.clz32=function(e){if(0===(e=Number(e)>>>0))return 32;var t=0;return 0==(4294901760&e)&&(e<<=16,t+=16),0==(4278190080&e)&&(e<<=8,t+=8),0==(4026531840&e)&&(e<<=4,t+=4),0==(3221225472&e)&&(e<<=2,t+=2),0==(2147483648&e)&&t++,t},$jscomp.math.imul=function(e,t){var n=65535&(e=Number(e)),l=65535&(t=Number(t));return n*l+((e>>>16&65535)*l+n*(t>>>16&65535)<<16>>>0)|0},$jscomp.math.sign=function(e){return 0===(e=Number(e))||isNaN(e)?e:0<e?1:-1},$jscomp.math.log10=function(e){return Math.log(e)/Math.LN10},$jscomp.math.log2=function(e){return Math.log(e)/Math.LN2},$jscomp.math.log1p=function(e){if(.25>(e=Number(e))&&-.25<e){for(var t=e,n=1,l=e,r=0,i=1;r!=l;)l=(r=l)+(i*=-1)*(t*=e)/++n;return l}return Math.log(1+e)},$jscomp.math.expm1=function(e){if(.25>(e=Number(e))&&-.25<e){for(var t=e,n=1,l=e,r=0;r!=l;)l=(r=l)+(t*=e/++n);return l}return Math.exp(e)-1},$jscomp.math.cosh=function(e){return e=Number(e),(Math.exp(e)+Math.exp(-e))/2},$jscomp.math.sinh=function(e){return 0===(e=Number(e))?e:(Math.exp(e)-Math.exp(-e))/2},$jscomp.math.tanh=function(e){if(0===(e=Number(e)))return e;var t=(1-(t=Math.exp(-2*Math.abs(e))))/(1+t);return 0>e?-t:t},$jscomp.math.acosh=function(e){return e=Number(e),Math.log(e+Math.sqrt(e*e-1))},$jscomp.math.asinh=function(e){if(0===(e=Number(e)))return e;var t=Math.log(Math.abs(e)+Math.sqrt(e*e+1));return 0>e?-t:t},$jscomp.math.atanh=function(e){return e=Number(e),($jscomp.math.log1p(e)-$jscomp.math.log1p(-e))/2},$jscomp.math.hypot=function(e,t,n){e=Number(e),t=Number(t);var l,r,i,s=Math.max(Math.abs(e),Math.abs(t));for(l=2;l<arguments.length;l++)s=Math.max(s,Math.abs(arguments[l]));if(1e100<s||1e-100>s){for(i=(e/=s)*e+(t/=s)*t,l=2;l<arguments.length;l++)i+=(r=Number(arguments[l])/s)*r;return Math.sqrt(i)*s}for(i=e*e+t*t,l=2;l<arguments.length;l++)i+=(r=Number(arguments[l]))*r;return Math.sqrt(i)},$jscomp.math.trunc=function(e){if(e=Number(e),isNaN(e)||1/0===e||-1/0===e||0===e)return e;var t=Math.floor(Math.abs(e));return 0>e?-t:t},$jscomp.math.cbrt=function(e){if(0===e)return e;e=Number(e);var t=Math.pow(Math.abs(e),1/3);return 0>e?-t:t},$jscomp.number=$jscomp.number||{},$jscomp.number.isFinite=function(e){return"number"==typeof e&&(!isNaN(e)&&1/0!==e&&-1/0!==e)},$jscomp.number.isInteger=function(e){return!!$jscomp.number.isFinite(e)&&e===Math.floor(e)},$jscomp.number.isNaN=function(e){return"number"==typeof e&&isNaN(e)},$jscomp.number.isSafeInteger=function(e){return $jscomp.number.isInteger(e)&&Math.abs(e)<=$jscomp.number.MAX_SAFE_INTEGER},$jscomp.number.EPSILON=Math.pow(2,-52),$jscomp.number.MAX_SAFE_INTEGER=9007199254740991,$jscomp.number.MIN_SAFE_INTEGER=-9007199254740991,$jscomp.object=$jscomp.object||{},$jscomp.object.assign=function(e,t){for(var n=1;n<arguments.length;n++){var l=arguments[n];if(l)for(var r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r])}return e},$jscomp.object.is=function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t},$jscomp.ASSUME_NO_NATIVE_SET=!1,$jscomp.Set$isConformant=function(){if($jscomp.ASSUME_NO_NATIVE_SET)return!1;var e=$jscomp.global.Set;if(!e||!e.prototype.entries||"function"!=typeof Object.seal)return!1;try{var t=Object.seal({x:4}),n=new e($jscomp.makeIterator([t]));if(!n.has(t)||1!=n.size||n.add(t)!=n||1!=n.size||n.add({x:4})!=n||2!=n.size)return!1;var l=n.entries(),r=l.next();return!r.done&&r.value[0]==t&&r.value[1]==t&&(!(r=l.next()).done&&r.value[0]!=t&&4==r.value[0].x&&r.value[1]==r.value[0]&&l.next().done)}catch(e){return!1}},$jscomp.Set=function(e){if(this.map_=new $jscomp.Map,e){e=$jscomp.makeIterator(e);for(var t;!(t=e.next()).done;)this.add(t.value)}this.size=this.map_.size},$jscomp.Set.prototype.add=function(e){return this.map_.set(e,e),this.size=this.map_.size,this},$jscomp.Set.prototype.delete=function(e){return e=this.map_.delete(e),this.size=this.map_.size,e},$jscomp.Set.prototype.clear=function(){this.map_.clear(),this.size=0},$jscomp.Set.prototype.has=function(e){return this.map_.has(e)},$jscomp.Set.prototype.entries=function(){return this.map_.entries()},$jscomp.Set.prototype.values=function(){return this.map_.values()},$jscomp.Set.prototype.forEach=function(e,t){var n=this;this.map_.forEach(function(l){return e.call(t,l,l,n)})},$jscomp.Set$install=function(){$jscomp.Map$install(),$jscomp.Set$isConformant()?$jscomp.Set=$jscomp.global.Set:($jscomp.initSymbol(),$jscomp.initSymbolIterator(),$jscomp.Set.prototype[Symbol.iterator]=$jscomp.Set.prototype.values,$jscomp.Set$install=function(){})},$jscomp.string=$jscomp.string||{},$jscomp.checkStringArgs=function(e,t,n){if(null==e)throw new TypeError("The 'this' value for String.prototype."+n+" must not be null or undefined");if(t instanceof RegExp)throw new TypeError("First argument to String.prototype."+n+" must not be a regular expression");return e+""},$jscomp.string.fromCodePoint=function(e){for(var t="",n=0;n<arguments.length;n++){var l=Number(arguments[n]);if(0>l||1114111<l||l!==Math.floor(l))throw new RangeError("invalid_code_point "+l);65535>=l?t+=String.fromCharCode(l):(l-=65536,t+=String.fromCharCode(l>>>10&1023|55296),t+=String.fromCharCode(1023&l|56320))}return t},$jscomp.string.repeat=function(e){var t=$jscomp.checkStringArgs(this,null,"repeat");if(0>e||1342177279<e)throw new RangeError("Invalid count value");e|=0;for(var n="";e;)1&e&&(n+=t),(e>>>=1)&&(t+=t);return n},$jscomp.string.repeat$install=function(){String.prototype.repeat||(String.prototype.repeat=$jscomp.string.repeat)},$jscomp.string.codePointAt=function(e){var t=$jscomp.checkStringArgs(this,null,"codePointAt"),n=t.length;if(0<=(e=Number(e)||0)&&e<n){e|=0;var l=t.charCodeAt(e);return 55296>l||56319<l||e+1===n?l:56320>(e=t.charCodeAt(e+1))||57343<e?l:1024*(l-55296)+e+9216}},$jscomp.string.codePointAt$install=function(){String.prototype.codePointAt||(String.prototype.codePointAt=$jscomp.string.codePointAt)},$jscomp.string.includes=function(e,t){return-1!==$jscomp.checkStringArgs(this,e,"includes").indexOf(e,t||0)},$jscomp.string.includes$install=function(){String.prototype.includes||(String.prototype.includes=$jscomp.string.includes)},$jscomp.string.startsWith=function(e,t){var n=$jscomp.checkStringArgs(this,e,"startsWith");e+="";for(var l=n.length,r=e.length,i=Math.max(0,Math.min(0|t,n.length)),s=0;s<r&&i<l;)if(n[i++]!=e[s++])return!1;return s>=r},$jscomp.string.startsWith$install=function(){String.prototype.startsWith||(String.prototype.startsWith=$jscomp.string.startsWith)},$jscomp.string.endsWith=function(e,t){var n=$jscomp.checkStringArgs(this,e,"endsWith");e+="",void 0===t&&(t=n.length);for(var l=Math.max(0,Math.min(0|t,n.length)),r=e.length;0<r&&0<l;)if(n[--l]!=e[--r])return!1;return 0>=r},$jscomp.string.endsWith$install=function(){String.prototype.endsWith||(String.prototype.endsWith=$jscomp.string.endsWith)};var COMPILED=!0,goog=goog||{};goog.global=this,goog.isDef=function(e){return void 0!==e},goog.exportPath_=function(e,t,n){e=e.split("."),n=n||goog.global,e[0]in n||!n.execScript||n.execScript("var "+e[0]);for(var l;e.length&&(l=e.shift());)!e.length&&goog.isDef(t)?n[l]=t:n=n[l]?n[l]:n[l]={}},goog.define=function(e,t){var n=t;COMPILED||(goog.global.CLOSURE_UNCOMPILED_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES,e)?n=goog.global.CLOSURE_UNCOMPILED_DEFINES[e]:goog.global.CLOSURE_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES,e)&&(n=goog.global.CLOSURE_DEFINES[e])),goog.exportPath_(e,n)},goog.DEBUG=!0,goog.LOCALE="en",goog.TRUSTED_SITE=!0,goog.STRICT_MODE_COMPATIBLE=!1,goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG,goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1,goog.provide=function(e){if(!COMPILED&&goog.isProvided_(e))throw Error('Namespace "'+e+'" already declared.');goog.constructNamespace_(e)},goog.constructNamespace_=function(e,t){if(!COMPILED){delete goog.implicitNamespaces_[e];for(var n=e;(n=n.substring(0,n.lastIndexOf(".")))&&!goog.getObjectByName(n);)goog.implicitNamespaces_[n]=!0}goog.exportPath_(e,t)},goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/,goog.module=function(e){if(!goog.isString(e)||!e||-1==e.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInModuleLoader_())throw Error("Module "+e+" has been loaded incorrectly.");if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");if(goog.moduleLoaderState_.moduleName=e,!COMPILED){if(goog.isProvided_(e))throw Error('Namespace "'+e+'" already declared.');delete goog.implicitNamespaces_[e]}},goog.module.get=function(e){return goog.module.getInternal_(e)},goog.module.getInternal_=function(e){if(!COMPILED)return goog.isProvided_(e)?e in goog.loadedModules_?goog.loadedModules_[e]:goog.getObjectByName(e):null},goog.moduleLoaderState_=null,goog.isInModuleLoader_=function(){return null!=goog.moduleLoaderState_},goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0},goog.setTestOnly=function(e){if(goog.DISALLOW_TEST_ONLY_CODE)throw e=e||"",Error("Importing test-only code into non-debug environment"+(e?": "+e:"."))},goog.forwardDeclare=function(e){},COMPILED||(goog.isProvided_=function(e){return e in goog.loadedModules_||!goog.implicitNamespaces_[e]&&goog.isDefAndNotNull(goog.getObjectByName(e))},goog.implicitNamespaces_={"goog.module":!0}),goog.getObjectByName=function(e,t){for(var n,l=e.split("."),r=t||goog.global;n=l.shift();){if(!goog.isDefAndNotNull(r[n]))return null;r=r[n]}return r},goog.globalize=function(e,t){var n,l=t||goog.global;for(n in e)l[n]=e[n]},goog.addDependency=function(e,t,n,l){if(goog.DEPENDENCIES_ENABLED){var r;e=e.replace(/\\/g,"/");for(var i=goog.dependencies_,s=0;r=t[s];s++)i.nameToPath[r]=e,i.pathIsModule[e]=!!l;for(l=0;t=n[l];l++)e in i.requires||(i.requires[e]={}),i.requires[e][t]=!0}},goog.ENABLE_DEBUG_LOADER=!0,goog.logToConsole_=function(e){goog.global.console&&goog.global.console.error(e)},goog.require=function(e){if(!COMPILED){if(goog.ENABLE_DEBUG_LOADER&&goog.IS_OLD_IE_&&goog.maybeProcessDeferredDep_(e),goog.isProvided_(e))return goog.isInModuleLoader_()?goog.module.getInternal_(e):null;if(goog.ENABLE_DEBUG_LOADER){var t=goog.getPathFromDeps_(e);if(t)return goog.writeScripts_(t),null}throw e="goog.require could not find: "+e,goog.logToConsole_(e),Error(e)}},goog.basePath="",goog.nullFunction=function(){},goog.abstractMethod=function(){throw Error("unimplemented abstract method")},goog.addSingletonGetter=function(e){e.getInstance=function(){return e.instance_?e.instance_:(goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=e),e.instance_=new e)}},goog.instantiatedSingletons_=[],goog.LOAD_MODULE_USING_EVAL=!0,goog.SEAL_MODULE_EXPORTS=goog.DEBUG,goog.loadedModules_={},goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER,goog.DEPENDENCIES_ENABLED&&(goog.dependencies_={pathIsModule:{},nameToPath:{},requires:{},visited:{},written:{},deferred:{}},goog.inHtmlDocument_=function(){var e=goog.global.document;return null!=e&&"write"in e},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_())for(var e=goog.global.document.getElementsByTagName("SCRIPT"),t=e.length-1;0<=t;--t){var n=e[t].src,l=-1==(l=n.lastIndexOf("?"))?n.length:l;if("base.js"==n.substr(l-7,7)){goog.basePath=n.substr(0,l-7);break}}},goog.importScript_=function(e,t){(goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_)(e,t)&&(goog.dependencies_.written[e]=!0)},goog.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.importModule_=function(e){goog.importScript_("",'goog.retrieveAndExecModule_("'+e+'");')&&(goog.dependencies_.written[e]=!0)},goog.queuedModules_=[],goog.wrapModule_=function(e,t){return goog.LOAD_MODULE_USING_EVAL&&goog.isDef(goog.global.JSON)?"goog.loadModule("+goog.global.JSON.stringify(t+"\n//# sourceURL="+e+"\n")+");":'goog.loadModule(function(exports) {"use strict";'+t+"\n;return exports});\n//# sourceURL="+e+"\n"},goog.loadQueuedModules_=function(){var e=goog.queuedModules_.length;if(0<e){var t=goog.queuedModules_;goog.queuedModules_=[];for(var n=0;n<e;n++)goog.maybeProcessDeferredPath_(t[n])}},goog.maybeProcessDeferredDep_=function(e){goog.isDeferredModule_(e)&&goog.allDepsAreAvailable_(e)&&(e=goog.getPathFromDeps_(e),goog.maybeProcessDeferredPath_(goog.basePath+e))},goog.isDeferredModule_=function(e){return!(!(e=goog.getPathFromDeps_(e))||!goog.dependencies_.pathIsModule[e])&&goog.basePath+e in goog.dependencies_.deferred},goog.allDepsAreAvailable_=function(e){if((e=goog.getPathFromDeps_(e))&&e in goog.dependencies_.requires)for(var t in goog.dependencies_.requires[e])if(!goog.isProvided_(t)&&!goog.isDeferredModule_(t))return!1;return!0},goog.maybeProcessDeferredPath_=function(e){if(e in goog.dependencies_.deferred){var t=goog.dependencies_.deferred[e];delete goog.dependencies_.deferred[e],goog.globalEval(t)}},goog.loadModuleFromUrl=function(e){goog.retrieveAndExecModule_(e)},goog.loadModule=function(e){var t=goog.moduleLoaderState_;try{var n;if(goog.moduleLoaderState_={moduleName:void 0,declareLegacyNamespace:!1},goog.isFunction(e))n=e.call(goog.global,{});else{if(!goog.isString(e))throw Error("Invalid module definition");n=goog.loadModuleFromSource_.call(goog.global,e)}var l=goog.moduleLoaderState_.moduleName;if(!goog.isString(l)||!l)throw Error('Invalid module name "'+l+'"');goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(l,n):goog.SEAL_MODULE_EXPORTS&&Object.seal&&Object.seal(n),goog.loadedModules_[l]=n}finally{goog.moduleLoaderState_=t}},goog.loadModuleFromSource_=function(a){return eval(a),{}},goog.writeScriptSrcNode_=function(e){goog.global.document.write('<script type="text/javascript" src="'+e+'"><\/script>')},goog.appendScriptSrcNode_=function(e){var t=goog.global.document,n=t.createElement("script");n.type="text/javascript",n.src=e,n.defer=!1,n.async=!1,t.head.appendChild(n)},goog.writeScriptTag_=function(e,t){if(goog.inHtmlDocument_()){var n=goog.global.document;if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&"complete"==n.readyState){if(/\bdeps.js$/.test(e))return!1;throw Error('Cannot write "'+e+'" after document load')}var l=goog.IS_OLD_IE_;return void 0===t?l?(l=" onreadystatechange='goog.onScriptLoad_(this, "+ ++goog.lastNonModuleScriptIndex_+")' ",n.write('<script type="text/javascript" src="'+e+'"'+l+"><\/script>")):goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING?goog.appendScriptSrcNode_(e):goog.writeScriptSrcNode_(e):n.write('<script type="text/javascript">'+t+"<\/script>"),!0}return!1},goog.lastNonModuleScriptIndex_=0,goog.onScriptLoad_=function(e,t){return"complete"==e.readyState&&goog.lastNonModuleScriptIndex_==t&&goog.loadQueuedModules_(),!0},goog.writeScripts_=function(e){var t=[],n={},l=goog.dependencies_;for(function e(r){if(!(r in l.written||r in l.visited)){if(l.visited[r]=!0,r in l.requires)for(var i in l.requires[r])if(!goog.isProvided_(i)){if(!(i in l.nameToPath))throw Error("Undefined nameToPath for "+i);e(l.nameToPath[i])}r in n||(n[r]=!0,t.push(r))}}(e),e=0;e<t.length;e++){var r=t[e];goog.dependencies_.written[r]=!0}var i=goog.moduleLoaderState_;for(goog.moduleLoaderState_=null,e=0;e<t.length;e++){if(!(r=t[e]))throw goog.moduleLoaderState_=i,Error("Undefined script input");l.pathIsModule[r]?goog.importModule_(goog.basePath+r):goog.importScript_(goog.basePath+r)}goog.moduleLoaderState_=i},goog.getPathFromDeps_=function(e){return e in goog.dependencies_.nameToPath?goog.dependencies_.nameToPath[e]:null},goog.findBasePath_(),goog.global.CLOSURE_NO_DEPS||goog.importScript_(goog.basePath+"deps.js")),goog.normalizePath_=function(e){e=e.split("/");for(var t=0;t<e.length;)"."==e[t]?e.splice(t,1):t&&".."==e[t]&&e[t-1]&&".."!=e[t-1]?e.splice(--t,2):t++;return e.join("/")},goog.loadFileSync_=function(e){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(e);var t=new goog.global.XMLHttpRequest;return t.open("get",e,!1),t.send(),t.responseText},goog.retrieveAndExecModule_=function(e){if(!COMPILED){var t=e;e=goog.normalizePath_(e);var n=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_,l=goog.loadFileSync_(e);if(null==l)throw Error("load of "+e+"failed");l=goog.wrapModule_(e,l),goog.IS_OLD_IE_?(goog.dependencies_.deferred[t]=l,goog.queuedModules_.push(t)):n(e,l)}},goog.typeOf=function(e){var t=typeof e;if("object"==t){if(!e)return"null";if(e instanceof Array)return"array";if(e instanceof Object)return t;var n=Object.prototype.toString.call(e);if("[object Window]"==n)return"object";if("[object Array]"==n||"number"==typeof e.length&&void 0!==e.splice&&void 0!==e.propertyIsEnumerable&&!e.propertyIsEnumerable("splice"))return"array";if("[object Function]"==n||void 0!==e.call&&void 0!==e.propertyIsEnumerable&&!e.propertyIsEnumerable("call"))return"function"}else if("function"==t&&void 0===e.call)return"object";return t},goog.isNull=function(e){return null===e},goog.isDefAndNotNull=function(e){return null!=e},goog.isArray=function(e){return"array"==goog.typeOf(e)},goog.isArrayLike=function(e){var t=goog.typeOf(e);return"array"==t||"object"==t&&"number"==typeof e.length},goog.isDateLike=function(e){return goog.isObject(e)&&"function"==typeof e.getFullYear},goog.isString=function(e){return"string"==typeof e},goog.isBoolean=function(e){return"boolean"==typeof e},goog.isNumber=function(e){return"number"==typeof e},goog.isFunction=function(e){return"function"==goog.typeOf(e)},goog.isObject=function(e){var t=typeof e;return"object"==t&&null!=e||"function"==t},goog.getUid=function(e){return e[goog.UID_PROPERTY_]||(e[goog.UID_PROPERTY_]=++goog.uidCounter_)},goog.hasUid=function(e){return!!e[goog.UID_PROPERTY_]},goog.removeUid=function(e){null!==e&&"removeAttribute"in e&&e.removeAttribute(goog.UID_PROPERTY_);try{delete e[goog.UID_PROPERTY_]}catch(e){}},goog.UID_PROPERTY_="closure_uid_"+(1e9*Math.random()>>>0),goog.uidCounter_=0,goog.getHashCode=goog.getUid,goog.removeHashCode=goog.removeUid,goog.cloneObject=function(e){if("object"==(n=goog.typeOf(e))||"array"==n){if(e.clone)return e.clone();var t,n="array"==n?[]:{};for(t in e)n[t]=goog.cloneObject(e[t]);return n}return e},goog.bindNative_=function(e,t,n){return e.call.apply(e.bind,arguments)},goog.bindJs_=function(e,t,n){if(!e)throw Error();if(2<arguments.length){var l=Array.prototype.slice.call(arguments,2);return function(){var n=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(n,l),e.apply(t,n)}}return function(){return e.apply(t,arguments)}},goog.bind=function(e,t,n){return Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_,goog.bind.apply(null,arguments)},goog.partial=function(e,t){var n=Array.prototype.slice.call(arguments,1);return function(){var t=n.slice();return t.push.apply(t,arguments),e.apply(this,t)}},goog.mixin=function(e,t){for(var n in t)e[n]=t[n]},goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date},goog.globalEval=function(e){if(goog.global.execScript)goog.global.execScript(e,"JavaScript");else{if(!goog.global.eval)throw Error("goog.globalEval not available");if(null==goog.evalWorksForGlobals_)if(goog.global.eval("var _evalTest_ = 1;"),void 0!==goog.global._evalTest_){try{delete goog.global._evalTest_}catch(e){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1;if(goog.evalWorksForGlobals_)goog.global.eval(e);else{var t=goog.global.document,n=t.createElement("SCRIPT");n.type="text/javascript",n.defer=!1,n.appendChild(t.createTextNode(e)),t.body.appendChild(n),t.body.removeChild(n)}}},goog.evalWorksForGlobals_=null,goog.getCssName=function(e,t){var n=function(e){return goog.cssNameMapping_[e]||e},l=function(e){e=e.split("-");for(var t=[],l=0;l<e.length;l++)t.push(n(e[l]));return t.join("-")};l=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?n:l:function(e){return e};return t?e+"-"+l(t):l(e)},goog.setCssNameMapping=function(e,t){goog.cssNameMapping_=e,goog.cssNameMappingStyle_=t},!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING),goog.getMsg=function(e,t){return t&&(e=e.replace(/\{\$([^}]+)}/g,function(e,n){return null!=t&&n in t?t[n]:e})),e},goog.getMsgWithFallback=function(e,t){return e},goog.exportSymbol=function(e,t,n){goog.exportPath_(e,t,n)},goog.exportProperty=function(e,t,n){e[t]=n},goog.inherits=function(e,t){function n(){}n.prototype=t.prototype,e.superClass_=t.prototype,e.prototype=new n,e.prototype.constructor=e,e.base=function(e,n,l){for(var r=Array(arguments.length-2),i=2;i<arguments.length;i++)r[i-2]=arguments[i];return t.prototype[n].apply(e,r)}},goog.base=function(e,t,n){var l=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!l)throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");if(l.superClass_){for(var r=Array(arguments.length-1),i=1;i<arguments.length;i++)r[i-1]=arguments[i];return l.superClass_.constructor.apply(e,r)}for(r=Array(arguments.length-2),i=2;i<arguments.length;i++)r[i-2]=arguments[i];i=!1;for(var s=e.constructor;s;s=s.superClass_&&s.superClass_.constructor)if(s.prototype[t]===l)i=!0;else if(i)return s.prototype[t].apply(e,r);if(e[t]===l)return e.constructor.prototype[t].apply(e,r);throw Error("goog.base called from a method of one name to a method of a different name")},goog.scope=function(e){e.call(goog.global)},COMPILED||(goog.global.COMPILED=COMPILED),goog.defineClass=function(e,t){var n=t.constructor,l=t.statics;return n&&n!=Object.prototype.constructor||(n=function(){throw Error("cannot instantiate an interface (no constructor defined).")}),n=goog.defineClass.createSealingConstructor_(n,e),e&&goog.inherits(n,e),delete t.constructor,delete t.statics,goog.defineClass.applyProperties_(n.prototype,t),null!=l&&(l instanceof Function?l(n):goog.defineClass.applyProperties_(n,l)),n},goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG,goog.defineClass.createSealingConstructor_=function(e,t){if(goog.defineClass.SEAL_CLASS_INSTANCES&&Object.seal instanceof Function){if(t&&t.prototype&&t.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_])return e;var n=function(){var t=e.apply(this,arguments)||this;return t[goog.UID_PROPERTY_]=t[goog.UID_PROPERTY_],this.constructor===n&&Object.seal(t),t};return n}return e},goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),goog.defineClass.applyProperties_=function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);for(var l=0;l<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;l++)n=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[l],Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},goog.tagUnsealableClass=function(e){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(e.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)},goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable",goog.dom={},goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12},goog.debug={},goog.debug.Error=function(e){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var t=Error().stack;t&&(this.stack=t)}e&&(this.message=String(e)),this.reportErrorToServer=!0},goog.inherits(goog.debug.Error,Error),goog.debug.Error.prototype.name="CustomError",goog.string={},goog.string.DETECT_DOUBLE_ESCAPING=!1,goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1,goog.string.Unicode={NBSP:" "},goog.string.startsWith=function(e,t){return 0==e.lastIndexOf(t,0)},goog.string.endsWith=function(e,t){var n=e.length-t.length;return 0<=n&&e.indexOf(t,n)==n},goog.string.caseInsensitiveStartsWith=function(e,t){return 0==goog.string.caseInsensitiveCompare(t,e.substr(0,t.length))},goog.string.caseInsensitiveEndsWith=function(e,t){return 0==goog.string.caseInsensitiveCompare(t,e.substr(e.length-t.length,t.length))},goog.string.caseInsensitiveEquals=function(e,t){return e.toLowerCase()==t.toLowerCase()},goog.string.subs=function(e,t){for(var n=e.split("%s"),l="",r=Array.prototype.slice.call(arguments,1);r.length&&1<n.length;)l+=n.shift()+r.shift();return l+n.join("%s")},goog.string.collapseWhitespace=function(e){return e.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")},goog.string.isEmptyOrWhitespace=function(e){return/^[\s\xa0]*$/.test(e)},goog.string.isEmptyString=function(e){return 0==e.length},goog.string.isEmpty=goog.string.isEmptyOrWhitespace,goog.string.isEmptyOrWhitespaceSafe=function(e){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(e))},goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe,goog.string.isBreakingWhitespace=function(e){return!/[^\t\n\r ]/.test(e)},goog.string.isAlpha=function(e){return!/[^a-zA-Z]/.test(e)},goog.string.isNumeric=function(e){return!/[^0-9]/.test(e)},goog.string.isAlphaNumeric=function(e){return!/[^a-zA-Z0-9]/.test(e)},goog.string.isSpace=function(e){return" "==e},goog.string.isUnicodeChar=function(e){return 1==e.length&&" "<=e&&"~">=e||""<=e&&"�">=e},goog.string.stripNewlines=function(e){return e.replace(/(\r\n|\r|\n)+/g," ")},goog.string.canonicalizeNewlines=function(e){return e.replace(/(\r\n|\r|\n)/g,"\n")},goog.string.normalizeWhitespace=function(e){return e.replace(/\xa0|\s/g," ")},goog.string.normalizeSpaces=function(e){return e.replace(/\xa0|[ \t]+/g," ")},goog.string.collapseBreakingSpaces=function(e){return e.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")},goog.string.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(e){return e.trim()}:function(e){return e.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},goog.string.trimLeft=function(e){return e.replace(/^[\s\xa0]+/,"")},goog.string.trimRight=function(e){return e.replace(/[\s\xa0]+$/,"")},goog.string.caseInsensitiveCompare=function(e,t){var n=String(e).toLowerCase(),l=String(t).toLowerCase();return n<l?-1:n==l?0:1},goog.string.numberAwareCompare_=function(e,t,n){if(e==t)return 0;if(!e)return-1;if(!t)return 1;for(var l=e.toLowerCase().match(n),r=t.toLowerCase().match(n),i=Math.min(l.length,r.length),s=0;s<i;s++){n=l[s];var o=r[s];if(n!=o)return e=parseInt(n,10),!isNaN(e)&&(t=parseInt(o,10),!isNaN(t)&&e-t)?e-t:n<o?-1:1}return l.length!=r.length?l.length-r.length:e<t?-1:1},goog.string.intAwareCompare=function(e,t){return goog.string.numberAwareCompare_(e,t,/\d+|\D+/g)},goog.string.floatAwareCompare=function(e,t){return goog.string.numberAwareCompare_(e,t,/\d+|\.\d+|\D+/g)},goog.string.numerateCompare=goog.string.floatAwareCompare,goog.string.urlEncode=function(e){return encodeURIComponent(String(e))},goog.string.urlDecode=function(e){return decodeURIComponent(e.replace(/\+/g," "))},goog.string.newLineToBr=function(e,t){return e.replace(/(\r\n|\r|\n)/g,t?"<br />":"<br>")},goog.string.htmlEscape=function(e,t){if(t)e=e.replace(goog.string.AMP_RE_,"&amp;").replace(goog.string.LT_RE_,"&lt;").replace(goog.string.GT_RE_,"&gt;").replace(goog.string.QUOT_RE_,"&quot;").replace(goog.string.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.NULL_RE_,"&#0;"),goog.string.DETECT_DOUBLE_ESCAPING&&(e=e.replace(goog.string.E_RE_,"&#101;"));else{if(!goog.string.ALL_RE_.test(e))return e;-1!=e.indexOf("&")&&(e=e.replace(goog.string.AMP_RE_,"&amp;")),-1!=e.indexOf("<")&&(e=e.replace(goog.string.LT_RE_,"&lt;")),-1!=e.indexOf(">")&&(e=e.replace(goog.string.GT_RE_,"&gt;")),-1!=e.indexOf('"')&&(e=e.replace(goog.string.QUOT_RE_,"&quot;")),-1!=e.indexOf("'")&&(e=e.replace(goog.string.SINGLE_QUOTE_RE_,"&#39;")),-1!=e.indexOf("\0")&&(e=e.replace(goog.string.NULL_RE_,"&#0;")),goog.string.DETECT_DOUBLE_ESCAPING&&-1!=e.indexOf("e")&&(e=e.replace(goog.string.E_RE_,"&#101;"))}return e},goog.string.AMP_RE_=/&/g,goog.string.LT_RE_=/</g,goog.string.GT_RE_=/>/g,goog.string.QUOT_RE_=/"/g,goog.string.SINGLE_QUOTE_RE_=/'/g,goog.string.NULL_RE_=/\x00/g,goog.string.E_RE_=/e/g,goog.string.ALL_RE_=goog.string.DETECT_DOUBLE_ESCAPING?/[\x00&<>"'e]/:/[\x00&<>"']/,goog.string.unescapeEntities=function(e){return goog.string.contains(e,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(e):goog.string.unescapePureXmlEntities_(e):e},goog.string.unescapeEntitiesWithDocument=function(e,t){return goog.string.contains(e,"&")?goog.string.unescapeEntitiesUsingDom_(e,t):e},goog.string.unescapeEntitiesUsingDom_=function(e,t){var n,l={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'};return n=t?t.createElement("div"):goog.global.document.createElement("div"),e.replace(goog.string.HTML_ENTITY_PATTERN_,function(e,t){var r=l[e];if(r)return r;if("#"==t.charAt(0)){var i=Number("0"+t.substr(1));isNaN(i)||(r=String.fromCharCode(i))}return r||(n.innerHTML=e+" ",r=n.firstChild.nodeValue.slice(0,-1)),l[e]=r})},goog.string.unescapePureXmlEntities_=function(e){return e.replace(/&([^;]+);/g,function(e,t){switch(t){case"amp":return"&";case"lt":return"<";case"gt":return">";case"quot":return'"';default:if("#"==t.charAt(0)){var n=Number("0"+t.substr(1));if(!isNaN(n))return String.fromCharCode(n)}return e}})},goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g,goog.string.whitespaceEscape=function(e,t){return goog.string.newLineToBr(e.replace(/  /g," &#160;"),t)},goog.string.preserveSpaces=function(e){return e.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)},goog.string.stripQuotes=function(e,t){for(var n=t.length,l=0;l<n;l++){var r=1==n?t:t.charAt(l);if(e.charAt(0)==r&&e.charAt(e.length-1)==r)return e.substring(1,e.length-1)}return e},goog.string.truncate=function(e,t,n){return n&&(e=goog.string.unescapeEntities(e)),e.length>t&&(e=e.substring(0,t-3)+"..."),n&&(e=goog.string.htmlEscape(e)),e},goog.string.truncateMiddle=function(e,t,n,l){if(n&&(e=goog.string.unescapeEntities(e)),l&&e.length>t){l>t&&(l=t);var r=e.length-l;e=e.substring(0,t-l)+"..."+e.substring(r)}else e.length>t&&(l=Math.floor(t/2),r=e.length-l,e=e.substring(0,l+t%2)+"..."+e.substring(r));return n&&(e=goog.string.htmlEscape(e)),e},goog.string.specialEscapeChars_={"\0":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\x0B",'"':'\\"',"\\":"\\\\","<":"<"},goog.string.jsEscapeCache_={"'":"\\'"},goog.string.quote=function(e){e=String(e);for(var t=['"'],n=0;n<e.length;n++){var l=e.charAt(n),r=l.charCodeAt(0);t[n+1]=goog.string.specialEscapeChars_[l]||(31<r&&127>r?l:goog.string.escapeChar(l))}return t.push('"'),t.join("")},goog.string.escapeString=function(e){for(var t=[],n=0;n<e.length;n++)t[n]=goog.string.escapeChar(e.charAt(n));return t.join("")},goog.string.escapeChar=function(e){if(e in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[e];if(e in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[e]=goog.string.specialEscapeChars_[e];var t,n=e.charCodeAt(0);return 31<n&&127>n?t=e:(256>n?(t="\\x",(16>n||256<n)&&(t+="0")):(t="\\u",4096>n&&(t+="0")),t+=n.toString(16).toUpperCase()),goog.string.jsEscapeCache_[e]=t},goog.string.contains=function(e,t){return-1!=e.indexOf(t)},goog.string.caseInsensitiveContains=function(e,t){return goog.string.contains(e.toLowerCase(),t.toLowerCase())},goog.string.countOf=function(e,t){return e&&t?e.split(t).length-1:0},goog.string.removeAt=function(e,t,n){var l=e;return 0<=t&&t<e.length&&0<n&&(l=e.substr(0,t)+e.substr(t+n,e.length-t-n)),l},goog.string.remove=function(e,t){var n=new RegExp(goog.string.regExpEscape(t),"");return e.replace(n,"")},goog.string.removeAll=function(e,t){var n=new RegExp(goog.string.regExpEscape(t),"g");return e.replace(n,"")},goog.string.regExpEscape=function(e){return String(e).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},goog.string.repeat=String.prototype.repeat?function(e,t){return e.repeat(t)}:function(e,t){return Array(t+1).join(e)},goog.string.padNumber=function(e,t,n){return-1==(n=(e=goog.isDef(n)?e.toFixed(n):String(e)).indexOf("."))&&(n=e.length),goog.string.repeat("0",Math.max(0,t-n))+e},goog.string.makeSafe=function(e){return null==e?"":String(e)},goog.string.buildString=function(e){return Array.prototype.join.call(arguments,"")},goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)},goog.string.compareVersions=function(e,t){for(var n=0,l=goog.string.trim(String(e)).split("."),r=goog.string.trim(String(t)).split("."),i=Math.max(l.length,r.length),s=0;0==n&&s<i;s++){var o=l[s]||"",a=r[s]||"",u=RegExp("(\\d*)(\\D*)","g"),c=RegExp("(\\d*)(\\D*)","g");do{var d=u.exec(o)||["","",""],p=c.exec(a)||["","",""];if(0==d[0].length&&0==p[0].length)break;n=0==d[1].length?0:parseInt(d[1],10);var g=0==p[1].length?0:parseInt(p[1],10);n=goog.string.compareElements_(n,g)||goog.string.compareElements_(0==d[2].length,0==p[2].length)||goog.string.compareElements_(d[2],p[2])}while(0==n)}return n},goog.string.compareElements_=function(e,t){return e<t?-1:e>t?1:0},goog.string.hashCode=function(e){for(var t=0,n=0;n<e.length;++n)t=31*t+e.charCodeAt(n)>>>0;return t},goog.string.uniqueStringCounter_=2147483648*Math.random()|0,goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++},goog.string.toNumber=function(e){var t=Number(e);return 0==t&&goog.string.isEmptyOrWhitespace(e)?NaN:t},goog.string.isLowerCamelCase=function(e){return/^[a-z]+([A-Z][a-z]*)*$/.test(e)},goog.string.isUpperCamelCase=function(e){return/^([A-Z][a-z]*)+$/.test(e)},goog.string.toCamelCase=function(e){return String(e).replace(/\-([a-z])/g,function(e,t){return t.toUpperCase()})},goog.string.toSelectorCase=function(e){return String(e).replace(/([A-Z])/g,"-$1").toLowerCase()},goog.string.toTitleCase=function(e,t){var n=goog.isString(t)?goog.string.regExpEscape(t):"\\s";return e.replace(new RegExp("(^"+(n?"|["+n+"]+":"")+")([a-z])","g"),function(e,t,n){return t+n.toUpperCase()})},goog.string.capitalize=function(e){return String(e.charAt(0)).toUpperCase()+String(e.substr(1)).toLowerCase()},goog.string.parseInt=function(e){return isFinite(e)&&(e=String(e)),goog.isString(e)?/^\s*-?0x/i.test(e)?parseInt(e,16):parseInt(e,10):NaN},goog.string.splitLimit=function(e,t,n){e=e.split(t);for(var l=[];0<n&&e.length;)l.push(e.shift()),n--;return e.length&&l.push(e.join(t)),l},goog.string.editDistance=function(e,t){var n=[],l=[];if(e==t)return 0;if(!e.length||!t.length)return Math.max(e.length,t.length);for(var r=0;r<t.length+1;r++)n[r]=r;for(r=0;r<e.length;r++){l[0]=r+1;for(var i=0;i<t.length;i++)l[i+1]=Math.min(l[i]+1,n[i+1]+1,n[i]+Number(e[r]!=t[i]));for(i=0;i<n.length;i++)n[i]=l[i]}return l[t.length]},goog.asserts={},goog.asserts.ENABLE_ASSERTS=goog.DEBUG,goog.asserts.AssertionError=function(e,t){t.unshift(e),goog.debug.Error.call(this,goog.string.subs.apply(null,t)),t.shift(),this.messagePattern=e},goog.inherits(goog.asserts.AssertionError,goog.debug.Error),goog.asserts.AssertionError.prototype.name="AssertionError",goog.asserts.DEFAULT_ERROR_HANDLER=function(e){throw e},goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER,goog.asserts.doAssertFailure_=function(e,t,n,l){var r="Assertion failed";if(n){r=r+": "+n;var i=l}else e&&(r+=": "+e,i=t);e=new goog.asserts.AssertionError(""+r,i||[]),goog.asserts.errorHandler_(e)},goog.asserts.setErrorHandler=function(e){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=e)},goog.asserts.assert=function(e,t,n){return goog.asserts.ENABLE_ASSERTS&&!e&&goog.asserts.doAssertFailure_("",null,t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.fail=function(e,t){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(e?": "+e:""),Array.prototype.slice.call(arguments,1)))},goog.asserts.assertNumber=function(e,t,n){return goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(e)&&goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertString=function(e,t,n){return goog.asserts.ENABLE_ASSERTS&&!goog.isString(e)&&goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertFunction=function(e,t,n){return goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(e)&&goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertObject=function(e,t,n){return goog.asserts.ENABLE_ASSERTS&&!goog.isObject(e)&&goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertArray=function(e,t,n){return goog.asserts.ENABLE_ASSERTS&&!goog.isArray(e)&&goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertBoolean=function(e,t,n){return goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(e)&&goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertElement=function(e,t,n){return!goog.asserts.ENABLE_ASSERTS||goog.isObject(e)&&e.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertInstanceof=function(e,t,n,l){return!goog.asserts.ENABLE_ASSERTS||e instanceof t||goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(t),goog.asserts.getType_(e)],n,Array.prototype.slice.call(arguments,3)),e},goog.asserts.assertObjectPrototypeIsIntact=function(){for(var e in Object.prototype)goog.asserts.fail(e+" should not be enumerable in Object.prototype.")},goog.asserts.getType_=function(e){return e instanceof Function?e.displayName||e.name||"unknown type name":e instanceof Object?e.constructor.displayName||e.constructor.name||Object.prototype.toString.call(e):null===e?"null":typeof e};var jspb={Map:function(e,t){this.arr_=e,this.valueCtor_=t,this.map_={},this.arrClean=!0,0<this.arr_.length&&this.loadFromArray_()}};jspb.Map.prototype.loadFromArray_=function(){for(var e=0;e<this.arr_.length;e++){var t=this.arr_[e],n=t[0];this.map_[n.toString()]=new jspb.Map.Entry_(n,t[1])}this.arrClean=!0},jspb.Map.prototype.toArray=function(){if(this.arrClean){if(this.valueCtor_){var e,t=this.map_;for(e in t)if(Object.prototype.hasOwnProperty.call(t,e)){var n=t[e].valueWrapper;n&&n.toArray()}}}else{for(this.arr_.length=0,(t=this.stringKeys_()).sort(),e=0;e<t.length;e++){var l=this.map_[t[e]];(n=l.valueWrapper)&&n.toArray(),this.arr_.push([l.key,l.value])}this.arrClean=!0}return this.arr_},jspb.Map.prototype.toObject=function(e,t){for(var n=this.toArray(),l=[],r=0;r<n.length;r++){var i=this.map_[n[r][0].toString()];this.wrapEntry_(i);var s=i.valueWrapper;s?(goog.asserts.assert(t),l.push([i.key,t(e,s)])):l.push([i.key,i.value])}return l},jspb.Map.fromObject=function(e,t,n){t=new jspb.Map([],t);for(var l=0;l<e.length;l++){var r=e[l][0],i=n(e[l][1]);t.set(r,i)}return t},jspb.Map.ArrayIteratorIterable_=function(e){this.idx_=0,this.arr_=e},jspb.Map.ArrayIteratorIterable_.prototype.next=function(){return this.idx_<this.arr_.length?{done:!1,value:this.arr_[this.idx_++]}:{done:!0,value:void 0}},$jscomp.initSymbol(),"undefined"!=typeof Symbol&&($jscomp.initSymbol(),$jscomp.initSymbolIterator(),jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator]=function(){return this}),jspb.Map.prototype.getLength=function(){return this.stringKeys_().length},jspb.Map.prototype.clear=function(){this.map_={},this.arrClean=!1},jspb.Map.prototype.del=function(e){e=e.toString();var t=this.map_.hasOwnProperty(e);return delete this.map_[e],this.arrClean=!1,t},jspb.Map.prototype.getEntryList=function(){var e=[],t=this.stringKeys_();t.sort();for(var n=0;n<t.length;n++){var l=this.map_[t[n]];e.push([l.key,l.value])}return e},jspb.Map.prototype.entries=function(){var e=[],t=this.stringKeys_();t.sort();for(var n=0;n<t.length;n++){var l=this.map_[t[n]];e.push([l.key,this.wrapEntry_(l)])}return new jspb.Map.ArrayIteratorIterable_(e)},jspb.Map.prototype.keys=function(){var e=[],t=this.stringKeys_();t.sort();for(var n=0;n<t.length;n++)e.push(this.map_[t[n]].key);return new jspb.Map.ArrayIteratorIterable_(e)},jspb.Map.prototype.values=function(){var e=[],t=this.stringKeys_();t.sort();for(var n=0;n<t.length;n++)e.push(this.wrapEntry_(this.map_[t[n]]));return new jspb.Map.ArrayIteratorIterable_(e)},jspb.Map.prototype.forEach=function(e,t){var n=this.stringKeys_();n.sort();for(var l=0;l<n.length;l++){var r=this.map_[n[l]];e.call(t,this.wrapEntry_(r),r.key,this)}},jspb.Map.prototype.set=function(e,t){var n=new jspb.Map.Entry_(e);return this.valueCtor_?(n.valueWrapper=t,n.value=t.toArray()):n.value=t,this.map_[e.toString()]=n,this.arrClean=!1,this},jspb.Map.prototype.wrapEntry_=function(e){return this.valueCtor_?(e.valueWrapper||(e.valueWrapper=new this.valueCtor_(e.value)),e.valueWrapper):e.value},jspb.Map.prototype.get=function(e){if(e=this.map_[e.toString()])return this.wrapEntry_(e)},jspb.Map.prototype.has=function(e){return e.toString()in this.map_},jspb.Map.prototype.serializeBinary=function(e,t,n,l,r){var i=this.stringKeys_();i.sort();for(var s=0;s<i.length;s++){var o=this.map_[i[s]];t.beginSubMessage(e),n.call(t,1,o.key),this.valueCtor_?l.call(t,2,this.wrapEntry_(o),r):l.call(t,2,o.value),t.endSubMessage()}},jspb.Map.deserializeBinary=function(e,t,n,l,r,i){for(var s=void 0;t.nextField()&&!t.isEndGroup();){var o=t.getFieldNumber();1==o?i=n.call(t):2==o&&(e.valueCtor_?(goog.asserts.assert(r),s=new e.valueCtor_,l.call(t,s,r)):s=l.call(t))}goog.asserts.assert(void 0!=i),goog.asserts.assert(void 0!=s),e.set(i,s)},jspb.Map.prototype.stringKeys_=function(){var e,t=this.map_,n=[];for(e in t)Object.prototype.hasOwnProperty.call(t,e)&&n.push(e);return n},jspb.Map.Entry_=function(e,t){this.key=e,this.value=t,this.valueWrapper=void 0},goog.array={},goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE,goog.array.ASSUME_NATIVE_FUNCTIONS=!1,goog.array.peek=function(e){return e[e.length-1]},goog.array.last=goog.array.peek,goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(e,t,n){return goog.asserts.assert(null!=e.length),Array.prototype.indexOf.call(e,t,n)}:function(e,t,n){if(n=null==n?0:0>n?Math.max(0,e.length+n):n,goog.isString(e))return goog.isString(t)&&1==t.length?e.indexOf(t,n):-1;for(;n<e.length;n++)if(n in e&&e[n]===t)return n;return-1},goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(e,t,n){return goog.asserts.assert(null!=e.length),Array.prototype.lastIndexOf.call(e,t,null==n?e.length-1:n)}:function(e,t,n){if(0>(n=null==n?e.length-1:n)&&(n=Math.max(0,e.length+n)),goog.isString(e))return goog.isString(t)&&1==t.length?e.lastIndexOf(t,n):-1;for(;0<=n;n--)if(n in e&&e[n]===t)return n;return-1},goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(e,t,n){goog.asserts.assert(null!=e.length),Array.prototype.forEach.call(e,t,n)}:function(e,t,n){for(var l=e.length,r=goog.isString(e)?e.split(""):e,i=0;i<l;i++)i in r&&t.call(n,r[i],i,e)},goog.array.forEachRight=function(e,t,n){var l=e.length,r=goog.isString(e)?e.split(""):e;for(l=l-1;0<=l;--l)l in r&&t.call(n,r[l],l,e)},goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(e,t,n){return goog.asserts.assert(null!=e.length),Array.prototype.filter.call(e,t,n)}:function(e,t,n){for(var l=e.length,r=[],i=0,s=goog.isString(e)?e.split(""):e,o=0;o<l;o++)if(o in s){var a=s[o];t.call(n,a,o,e)&&(r[i++]=a)}return r},goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(e,t,n){return goog.asserts.assert(null!=e.length),Array.prototype.map.call(e,t,n)}:function(e,t,n){for(var l=e.length,r=Array(l),i=goog.isString(e)?e.split(""):e,s=0;s<l;s++)s in i&&(r[s]=t.call(n,i[s],s,e));return r},goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(e,t,n,l){return goog.asserts.assert(null!=e.length),l&&(t=goog.bind(t,l)),Array.prototype.reduce.call(e,t,n)}:function(e,t,n,l){var r=n;return goog.array.forEach(e,function(n,i){r=t.call(l,r,n,i,e)}),r},goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(e,t,n,l){return goog.asserts.assert(null!=e.length),goog.asserts.assert(null!=t),l&&(t=goog.bind(t,l)),Array.prototype.reduceRight.call(e,t,n)}:function(e,t,n,l){var r=n;return goog.array.forEachRight(e,function(n,i){r=t.call(l,r,n,i,e)}),r},goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(e,t,n){return goog.asserts.assert(null!=e.length),Array.prototype.some.call(e,t,n)}:function(e,t,n){for(var l=e.length,r=goog.isString(e)?e.split(""):e,i=0;i<l;i++)if(i in r&&t.call(n,r[i],i,e))return!0;return!1},goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(e,t,n){return goog.asserts.assert(null!=e.length),Array.prototype.every.call(e,t,n)}:function(e,t,n){for(var l=e.length,r=goog.isString(e)?e.split(""):e,i=0;i<l;i++)if(i in r&&!t.call(n,r[i],i,e))return!1;return!0},goog.array.count=function(e,t,n){var l=0;return goog.array.forEach(e,function(e,r,i){t.call(n,e,r,i)&&++l},n),l},goog.array.find=function(e,t,n){return 0>(t=goog.array.findIndex(e,t,n))?null:goog.isString(e)?e.charAt(t):e[t]},goog.array.findIndex=function(e,t,n){for(var l=e.length,r=goog.isString(e)?e.split(""):e,i=0;i<l;i++)if(i in r&&t.call(n,r[i],i,e))return i;return-1},goog.array.findRight=function(e,t,n){return 0>(t=goog.array.findIndexRight(e,t,n))?null:goog.isString(e)?e.charAt(t):e[t]},goog.array.findIndexRight=function(e,t,n){var l=e.length,r=goog.isString(e)?e.split(""):e;for(l=l-1;0<=l;l--)if(l in r&&t.call(n,r[l],l,e))return l;return-1},goog.array.contains=function(e,t){return 0<=goog.array.indexOf(e,t)},goog.array.isEmpty=function(e){return 0==e.length},goog.array.clear=function(e){if(!goog.isArray(e))for(var t=e.length-1;0<=t;t--)delete e[t];e.length=0},goog.array.insert=function(e,t){goog.array.contains(e,t)||e.push(t)},goog.array.insertAt=function(e,t,n){goog.array.splice(e,n,0,t)},goog.array.insertArrayAt=function(e,t,n){goog.partial(goog.array.splice,e,n,0).apply(null,t)},goog.array.insertBefore=function(e,t,n){var l;2==arguments.length||0>(l=goog.array.indexOf(e,n))?e.push(t):goog.array.insertAt(e,t,l)},goog.array.remove=function(e,t){var n,l=goog.array.indexOf(e,t);return(n=0<=l)&&goog.array.removeAt(e,l),n},goog.array.removeAt=function(e,t){return goog.asserts.assert(null!=e.length),1==Array.prototype.splice.call(e,t,1).length},goog.array.removeIf=function(e,t,n){return 0<=(t=goog.array.findIndex(e,t,n))&&(goog.array.removeAt(e,t),!0)},goog.array.removeAllIf=function(e,t,n){var l=0;return goog.array.forEachRight(e,function(r,i){t.call(n,r,i,e)&&goog.array.removeAt(e,i)&&l++}),l},goog.array.concat=function(e){return Array.prototype.concat.apply(Array.prototype,arguments)},goog.array.join=function(e){return Array.prototype.concat.apply(Array.prototype,arguments)},goog.array.toArray=function(e){var t=e.length;if(0<t){for(var n=Array(t),l=0;l<t;l++)n[l]=e[l];return n}return[]},goog.array.clone=goog.array.toArray,goog.array.extend=function(e,t){for(var n=1;n<arguments.length;n++){var l=arguments[n];if(goog.isArrayLike(l)){var r=e.length||0,i=l.length||0;e.length=r+i;for(var s=0;s<i;s++)e[r+s]=l[s]}else e.push(l)}},goog.array.splice=function(e,t,n,l){return goog.asserts.assert(null!=e.length),Array.prototype.splice.apply(e,goog.array.slice(arguments,1))},goog.array.slice=function(e,t,n){return goog.asserts.assert(null!=e.length),2>=arguments.length?Array.prototype.slice.call(e,t):Array.prototype.slice.call(e,t,n)},goog.array.removeDuplicates=function(e,t,n){t=t||e;var l=function(e){return goog.isObject(e)?"o"+goog.getUid(e):(typeof e).charAt(0)+e};n=n||l;l={};for(var r=0,i=0;i<e.length;){var s=e[i++],o=n(s);Object.prototype.hasOwnProperty.call(l,o)||(l[o]=!0,t[r++]=s)}t.length=r},goog.array.binarySearch=function(e,t,n){return goog.array.binarySearch_(e,n||goog.array.defaultCompare,!1,t)},goog.array.binarySelect=function(e,t,n){return goog.array.binarySearch_(e,t,!0,void 0,n)},goog.array.binarySearch_=function(e,t,n,l,r){for(var i,s=0,o=e.length;s<o;){var a,u=s+o>>1;0<(a=n?t.call(r,e[u],u,e):t(l,e[u]))?s=u+1:(o=u,i=!a)}return i?s:~s},goog.array.sort=function(e,t){e.sort(t||goog.array.defaultCompare)},goog.array.stableSort=function(e,t){for(var n=0;n<e.length;n++)e[n]={index:n,value:e[n]};var l=t||goog.array.defaultCompare;for(goog.array.sort(e,function(e,t){return l(e.value,t.value)||e.index-t.index}),n=0;n<e.length;n++)e[n]=e[n].value},goog.array.sortByKey=function(e,t,n){var l=n||goog.array.defaultCompare;goog.array.sort(e,function(e,n){return l(t(e),t(n))})},goog.array.sortObjectsByKey=function(e,t,n){goog.array.sortByKey(e,function(e){return e[t]},n)},goog.array.isSorted=function(e,t,n){t=t||goog.array.defaultCompare;for(var l=1;l<e.length;l++){var r=t(e[l-1],e[l]);if(0<r||0==r&&n)return!1}return!0},goog.array.equals=function(e,t,n){if(!goog.isArrayLike(e)||!goog.isArrayLike(t)||e.length!=t.length)return!1;var l=e.length;n=n||goog.array.defaultCompareEquality;for(var r=0;r<l;r++)if(!n(e[r],t[r]))return!1;return!0},goog.array.compare3=function(e,t,n){n=n||goog.array.defaultCompare;for(var l=Math.min(e.length,t.length),r=0;r<l;r++){var i=n(e[r],t[r]);if(0!=i)return i}return goog.array.defaultCompare(e.length,t.length)},goog.array.defaultCompare=function(e,t){return e>t?1:e<t?-1:0},goog.array.inverseDefaultCompare=function(e,t){return-goog.array.defaultCompare(e,t)},goog.array.defaultCompareEquality=function(e,t){return e===t},goog.array.binaryInsert=function(e,t,n){return 0>(n=goog.array.binarySearch(e,t,n))&&(goog.array.insertAt(e,t,-(n+1)),!0)},goog.array.binaryRemove=function(e,t,n){return 0<=(t=goog.array.binarySearch(e,t,n))&&goog.array.removeAt(e,t)},goog.array.bucket=function(e,t,n){for(var l={},r=0;r<e.length;r++){var i=e[r],s=t.call(n,i,r,e);goog.isDef(s)&&(l[s]||(l[s]=[])).push(i)}return l},goog.array.toObject=function(e,t,n){var l={};return goog.array.forEach(e,function(r,i){l[t.call(n,r,i,e)]=r}),l},goog.array.range=function(e,t,n){var l=[],r=0,i=e;if(n=n||1,void 0!==t&&(r=e,i=t),0>n*(i-r))return[];if(0<n)for(e=r;e<i;e+=n)l.push(e);else for(e=r;e>i;e+=n)l.push(e);return l},goog.array.repeat=function(e,t){for(var n=[],l=0;l<t;l++)n[l]=e;return n},goog.array.flatten=function(e){for(var t=[],n=0;n<arguments.length;n++){var l=arguments[n];if(goog.isArray(l))for(var r=0;r<l.length;r+=8192)for(var i=goog.array.slice(l,r,r+8192),s=(i=goog.array.flatten.apply(null,i),0);s<i.length;s++)t.push(i[s]);else t.push(l)}return t},goog.array.rotate=function(e,t){return goog.asserts.assert(null!=e.length),e.length&&(0<(t%=e.length)?Array.prototype.unshift.apply(e,e.splice(-t,t)):0>t&&Array.prototype.push.apply(e,e.splice(0,-t))),e},goog.array.moveItem=function(e,t,n){goog.asserts.assert(0<=t&&t<e.length),goog.asserts.assert(0<=n&&n<e.length),t=Array.prototype.splice.call(e,t,1),Array.prototype.splice.call(e,n,0,t[0])},goog.array.zip=function(e){if(!arguments.length)return[];for(var t=[],n=arguments[0].length,l=1;l<arguments.length;l++)arguments[l].length<n&&(n=arguments[l].length);for(l=0;l<n;l++){for(var r=[],i=0;i<arguments.length;i++)r.push(arguments[i][l]);t.push(r)}return t},goog.array.shuffle=function(e,t){for(var n=t||Math.random,l=e.length-1;0<l;l--){var r=Math.floor(n()*(l+1)),i=e[l];e[l]=e[r],e[r]=i}},goog.array.copyByIndex=function(e,t){var n=[];return goog.array.forEach(t,function(t){n.push(e[t])}),n},goog.crypt={},goog.crypt.stringToByteArray=function(e){for(var t=[],n=0,l=0;l<e.length;l++){for(var r=e.charCodeAt(l);255<r;)t[n++]=255&r,r>>=8;t[n++]=r}return t},goog.crypt.byteArrayToString=function(e){if(8192>=e.length)return String.fromCharCode.apply(null,e);for(var t="",n=0;n<e.length;n+=8192){var l=goog.array.slice(e,n,n+8192);t=t+String.fromCharCode.apply(null,l)}return t},goog.crypt.byteArrayToHex=function(e){return goog.array.map(e,function(e){return 1<(e=e.toString(16)).length?e:"0"+e}).join("")},goog.crypt.hexToByteArray=function(e){goog.asserts.assert(0==e.length%2,"Key string length must be multiple of 2");for(var t=[],n=0;n<e.length;n+=2)t.push(parseInt(e.substring(n,n+2),16));return t},goog.crypt.stringToUtf8ByteArray=function(e){for(var t=[],n=0,l=0;l<e.length;l++){var r=e.charCodeAt(l);128>r?t[n++]=r:(2048>r?t[n++]=r>>6|192:(55296==(64512&r)&&l+1<e.length&&56320==(64512&e.charCodeAt(l+1))?(r=65536+((1023&r)<<10)+(1023&e.charCodeAt(++l)),t[n++]=r>>18|240,t[n++]=r>>12&63|128):t[n++]=r>>12|224,t[n++]=r>>6&63|128),t[n++]=63&r|128)}return t},goog.crypt.utf8ByteArrayToString=function(e){for(var t=[],n=0,l=0;n<e.length;){if(128>(s=e[n++]))t[l++]=String.fromCharCode(s);else if(191<s&&224>s){var r=e[n++];t[l++]=String.fromCharCode((31&s)<<6|63&r)}else if(239<s&&365>s){r=e[n++];var i=e[n++],s=((7&s)<<18|(63&r)<<12|(63&i)<<6|63&e[n++])-65536;t[l++]=String.fromCharCode(55296+(s>>10)),t[l++]=String.fromCharCode(56320+(1023&s))}else r=e[n++],i=e[n++],t[l++]=String.fromCharCode((15&s)<<12|(63&r)<<6|63&i)}return t.join("")},goog.crypt.xorByteArray=function(e,t){goog.asserts.assert(e.length==t.length,"XOR array lengths must match");for(var n=[],l=0;l<e.length;l++)n.push(e[l]^t[l]);return n},goog.labs={},goog.labs.userAgent={},goog.labs.userAgent.util={},goog.labs.userAgent.util.getNativeUserAgentString_=function(){var e=goog.labs.userAgent.util.getNavigator_();return e&&(e=e.userAgent)?e:""},goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator},goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_(),goog.labs.userAgent.util.setUserAgent=function(e){goog.labs.userAgent.util.userAgent_=e||goog.labs.userAgent.util.getNativeUserAgentString_()},goog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_},goog.labs.userAgent.util.matchUserAgent=function(e){var t=goog.labs.userAgent.util.getUserAgent();return goog.string.contains(t,e)},goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(e){var t=goog.labs.userAgent.util.getUserAgent();return goog.string.caseInsensitiveContains(t,e)},goog.labs.userAgent.util.extractVersionTuples=function(e){for(var t,n=RegExp("(\\w[\\w ]+)/([^\\s]+)\\s*(?:\\((.*?)\\))?","g"),l=[];t=n.exec(e);)l.push([t[1],t[2],t[3]||void 0]);return l},goog.labs.userAgent.platform={},goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent("Android")},goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent("iPod")},goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent("iPhone")&&!goog.labs.userAgent.util.matchUserAgent("iPod")&&!goog.labs.userAgent.util.matchUserAgent("iPad")},goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent("iPad")},goog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()},goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent("Macintosh")},goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent("Linux")},goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent("Windows")},goog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent("CrOS")},goog.labs.userAgent.platform.getVersion=function(){var e=goog.labs.userAgent.util.getUserAgent(),t="";return goog.labs.userAgent.platform.isWindows()?t=(e=(t=/Windows (?:NT|Phone) ([0-9.]+)/).exec(e))?e[1]:"0.0":goog.labs.userAgent.platform.isIos()?t=(e=(t=/(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/).exec(e))&&e[1].replace(/_/g,"."):goog.labs.userAgent.platform.isMacintosh()?t=(e=(t=/Mac OS X ([0-9_.]+)/).exec(e))?e[1].replace(/_/g,"."):"10":goog.labs.userAgent.platform.isAndroid()?t=(e=(t=/Android\s+([^\);]+)(\)|;)/).exec(e))&&e[1]:goog.labs.userAgent.platform.isChromeOS()&&(t=(e=(t=/(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/).exec(e))&&e[1]),t||""},goog.labs.userAgent.platform.isVersionOrHigher=function(e){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),e)},goog.object={},goog.object.forEach=function(e,t,n){for(var l in e)t.call(n,e[l],l,e)},goog.object.filter=function(e,t,n){var l,r={};for(l in e)t.call(n,e[l],l,e)&&(r[l]=e[l]);return r},goog.object.map=function(e,t,n){var l,r={};for(l in e)r[l]=t.call(n,e[l],l,e);return r},goog.object.some=function(e,t,n){for(var l in e)if(t.call(n,e[l],l,e))return!0;return!1},goog.object.every=function(e,t,n){for(var l in e)if(!t.call(n,e[l],l,e))return!1;return!0},goog.object.getCount=function(e){var t,n=0;for(t in e)n++;return n},goog.object.getAnyKey=function(e){for(var t in e)return t},goog.object.getAnyValue=function(e){for(var t in e)return e[t]},goog.object.contains=function(e,t){return goog.object.containsValue(e,t)},goog.object.getValues=function(e){var t,n=[],l=0;for(t in e)n[l++]=e[t];return n},goog.object.getKeys=function(e){var t,n=[],l=0;for(t in e)n[l++]=t;return n},goog.object.getValueByKeys=function(e,t){for(var n=(l=goog.isArrayLike(t))?t:arguments,l=l?0:1;l<n.length&&(e=e[n[l]],goog.isDef(e));l++);return e},goog.object.containsKey=function(e,t){return null!==e&&t in e},goog.object.containsValue=function(e,t){for(var n in e)if(e[n]==t)return!0;return!1},goog.object.findKey=function(e,t,n){for(var l in e)if(t.call(n,e[l],l,e))return l},goog.object.findValue=function(e,t,n){return(t=goog.object.findKey(e,t,n))&&e[t]},goog.object.isEmpty=function(e){for(var t in e)return!1;return!0},goog.object.clear=function(e){for(var t in e)delete e[t]},goog.object.remove=function(e,t){var n;return(n=t in e)&&delete e[t],n},goog.object.add=function(e,t,n){if(null!==e&&t in e)throw Error('The object already contains the key "'+t+'"');goog.object.set(e,t,n)},goog.object.get=function(e,t,n){return null!==e&&t in e?e[t]:n},goog.object.set=function(e,t,n){e[t]=n},goog.object.setIfUndefined=function(e,t,n){return t in e?e[t]:e[t]=n},goog.object.setWithReturnValueIfNotSet=function(e,t,n){return t in e?e[t]:(n=n(),e[t]=n)},goog.object.equals=function(e,t){for(var n in e)if(!(n in t)||e[n]!==t[n])return!1;for(n in t)if(!(n in e))return!1;return!0},goog.object.clone=function(e){var t,n={};for(t in e)n[t]=e[t];return n},goog.object.unsafeClone=function(e){if("object"==(n=goog.typeOf(e))||"array"==n){if(goog.isFunction(e.clone))return e.clone();var t,n="array"==n?[]:{};for(t in e)n[t]=goog.object.unsafeClone(e[t]);return n}return e},goog.object.transpose=function(e){var t,n={};for(t in e)n[e[t]]=t;return n},goog.object.PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),goog.object.extend=function(e,t){for(var n,l,r=1;r<arguments.length;r++){for(n in l=arguments[r])e[n]=l[n];for(var i=0;i<goog.object.PROTOTYPE_FIELDS_.length;i++)n=goog.object.PROTOTYPE_FIELDS_[i],Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}},goog.object.create=function(e){var t=arguments.length;if(1==t&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(t%2)throw Error("Uneven number of arguments");for(var n={},l=0;l<t;l+=2)n[arguments[l]]=arguments[l+1];return n},goog.object.createSet=function(e){var t=arguments.length;if(1==t&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var n={},l=0;l<t;l++)n[arguments[l]]=!0;return n},goog.object.createImmutableView=function(e){var t=e;return Object.isFrozen&&!Object.isFrozen(e)&&(t=Object.create(e),Object.freeze(t)),t},goog.object.isImmutableView=function(e){return!!Object.isFrozen&&Object.isFrozen(e)},goog.labs.userAgent.browser={},goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent("Opera")||goog.labs.userAgent.util.matchUserAgent("OPR")},goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")},goog.labs.userAgent.browser.matchEdge_=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")},goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent("Firefox")},goog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent("Safari")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdge_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent("Android"))},goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent("Coast")},goog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent("iPad")||goog.labs.userAgent.util.matchUserAgent("iPhone"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&goog.labs.userAgent.util.matchUserAgent("AppleWebKit")},goog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent("Chrome")||goog.labs.userAgent.util.matchUserAgent("CriOS"))&&!goog.labs.userAgent.browser.matchOpera_()&&!goog.labs.userAgent.browser.matchEdge_()},goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent("Android")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())},goog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_,goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_,goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdge_,goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_,goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_,goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_,goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_,goog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_,goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_,goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent("Silk")},goog.labs.userAgent.browser.getVersion=function(){function e(e){return e=goog.array.find(e,l),n[e]||""}var t=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(t);t=goog.labs.userAgent.util.extractVersionTuples(t);var n={};goog.array.forEach(t,function(e){n[e[0]]=e[1]});var l=goog.partial(goog.object.containsKey,n);return goog.labs.userAgent.browser.isOpera()?e(["Version","Opera","OPR"]):goog.labs.userAgent.browser.isEdge()?e(["Edge"]):goog.labs.userAgent.browser.isChrome()?e(["Chrome","CriOS"]):(t=t[2])&&t[1]||""},goog.labs.userAgent.browser.isVersionOrHigher=function(e){return 0<=goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(),e)},goog.labs.userAgent.browser.getIEVersion_=function(e){if((t=/rv: *([\d\.]*)/.exec(e))&&t[1])return t[1];var t="",n=/MSIE +([\d\.]+)/.exec(e);if(n&&n[1])if(e=/Trident\/(\d.\d)/.exec(e),"7.0"==n[1])if(e&&e[1])switch(e[1]){case"4.0":t="8.0";break;case"5.0":t="9.0";break;case"6.0":t="10.0";break;case"7.0":t="11.0"}else t="7.0";else t=n[1];return t},goog.labs.userAgent.engine={},goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent("Presto")},goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")},goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")},goog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit")&&!goog.labs.userAgent.engine.isEdge()},goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent("Gecko")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()},goog.labs.userAgent.engine.getVersion=function(){if(t=goog.labs.userAgent.util.getUserAgent()){var e,t=goog.labs.userAgent.util.extractVersionTuples(t),n=goog.labs.userAgent.engine.getEngineTuple_(t);if(n)return"Gecko"==n[0]?goog.labs.userAgent.engine.getVersionForKey_(t,"Firefox"):n[1];if((t=t[0])&&(e=t[2])&&(e=/Trident\/([^\s;]+)/.exec(e)))return e[1]}return""},goog.labs.userAgent.engine.getEngineTuple_=function(e){if(!goog.labs.userAgent.engine.isEdge())return e[1];for(var t=0;t<e.length;t++){var n=e[t];if("Edge"==n[0])return n}},goog.labs.userAgent.engine.isVersionOrHigher=function(e){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),e)},goog.labs.userAgent.engine.getVersionForKey_=function(e,t){var n=goog.array.find(e,function(e){return t==e[0]});return n&&n[1]||""},goog.userAgent={},goog.userAgent.ASSUME_IE=!1,goog.userAgent.ASSUME_EDGE=!1,goog.userAgent.ASSUME_GECKO=!1,goog.userAgent.ASSUME_WEBKIT=!1,goog.userAgent.ASSUME_MOBILE_WEBKIT=!1,goog.userAgent.ASSUME_OPERA=!1,goog.userAgent.ASSUME_ANY_VERSION=!1,goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA,goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()},goog.userAgent.getNavigator=function(){return goog.global.navigator||null},goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera(),goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE(),goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge(),goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE,goog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko(),goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit(),goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent("Mobile")},goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_(),goog.userAgent.SAFARI=goog.userAgent.WEBKIT,goog.userAgent.determinePlatform_=function(){var e=goog.userAgent.getNavigator();return e&&e.platform||""},goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_(),goog.userAgent.ASSUME_MAC=!1,goog.userAgent.ASSUME_WINDOWS=!1,goog.userAgent.ASSUME_LINUX=!1,goog.userAgent.ASSUME_X11=!1,goog.userAgent.ASSUME_ANDROID=!1,goog.userAgent.ASSUME_IPHONE=!1,goog.userAgent.ASSUME_IPAD=!1,goog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD,goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh(),goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows(),goog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()},goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_(),goog.userAgent.isX11_=function(){var e=goog.userAgent.getNavigator();return!!e&&goog.string.contains(e.appVersion||"","X11")},goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_(),goog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid(),goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone(),goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad(),goog.userAgent.operaVersion_=function(){var e=goog.global.opera.version;try{return e()}catch(t){return e}},goog.userAgent.determineVersion_=function(){if(goog.userAgent.OPERA&&goog.global.opera)return goog.userAgent.operaVersion_();var e="",t=goog.userAgent.getVersionRegexResult_();return t&&(e=t?t[1]:""),goog.userAgent.IE&&(t=goog.userAgent.getDocumentMode_())>parseFloat(e)?String(t):e},goog.userAgent.getVersionRegexResult_=function(){var e=goog.userAgent.getUserAgentString();return goog.userAgent.GECKO?/rv\:([^\);]+)(\)|;)/.exec(e):goog.userAgent.EDGE?/Edge\/([\d\.]+)/.exec(e):goog.userAgent.IE?/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(e):goog.userAgent.WEBKIT?/WebKit\/(\S+)/.exec(e):void 0},goog.userAgent.getDocumentMode_=function(){var e=goog.global.document;return e?e.documentMode:void 0},goog.userAgent.VERSION=goog.userAgent.determineVersion_(),goog.userAgent.compare=function(e,t){return goog.string.compareVersions(e,t)},goog.userAgent.isVersionOrHigherCache_={},goog.userAgent.isVersionOrHigher=function(e){return goog.userAgent.ASSUME_ANY_VERSION||goog.userAgent.isVersionOrHigherCache_[e]||(goog.userAgent.isVersionOrHigherCache_[e]=0<=goog.string.compareVersions(goog.userAgent.VERSION,e))},goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher,goog.userAgent.isDocumentModeOrHigher=function(e){return Number(goog.userAgent.DOCUMENT_MODE)>=e},goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher,goog.userAgent.DOCUMENT_MODE=function(){var e=goog.global.document,t=goog.userAgent.getDocumentMode_();return e&&goog.userAgent.IE?t||("CSS1Compat"==e.compatMode?parseInt(goog.userAgent.VERSION,10):5):void 0}(),goog.userAgent.product={},goog.userAgent.product.ASSUME_FIREFOX=!1,goog.userAgent.product.ASSUME_IPHONE=!1,goog.userAgent.product.ASSUME_IPAD=!1,goog.userAgent.product.ASSUME_ANDROID=!1,goog.userAgent.product.ASSUME_CHROME=!1,goog.userAgent.product.ASSUME_SAFARI=!1,goog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI,goog.userAgent.product.OPERA=goog.userAgent.OPERA,goog.userAgent.product.IE=goog.userAgent.IE,goog.userAgent.product.EDGE=goog.userAgent.EDGE,goog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox(),goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()},goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_(),goog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad(),goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser(),goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome(),goog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()},goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_(),goog.crypt.base64={},goog.crypt.base64.byteToCharMap_=null,goog.crypt.base64.charToByteMap_=null,goog.crypt.base64.byteToCharMapWebSafe_=null,goog.crypt.base64.ENCODED_VALS_BASE="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",goog.crypt.base64.ENCODED_VALS=goog.crypt.base64.ENCODED_VALS_BASE+"+/=",goog.crypt.base64.ENCODED_VALS_WEBSAFE=goog.crypt.base64.ENCODED_VALS_BASE+"-_.",goog.crypt.base64.ASSUME_NATIVE_SUPPORT_=goog.userAgent.GECKO||goog.userAgent.WEBKIT&&!goog.userAgent.product.SAFARI||goog.userAgent.OPERA,goog.crypt.base64.HAS_NATIVE_ENCODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||"function"==typeof goog.global.btoa,goog.crypt.base64.HAS_NATIVE_DECODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||!goog.userAgent.product.SAFARI&&!goog.userAgent.IE&&"function"==typeof goog.global.atob,goog.crypt.base64.encodeByteArray=function(e,t){goog.asserts.assert(goog.isArrayLike(e),"encodeByteArray takes an array as a parameter"),goog.crypt.base64.init_();for(var n=t?goog.crypt.base64.byteToCharMapWebSafe_:goog.crypt.base64.byteToCharMap_,l=[],r=0;r<e.length;r+=3){var i=e[r],s=r+1<e.length,o=s?e[r+1]:0,a=r+2<e.length,u=i>>2,c=(i=(3&i)<<4|o>>4,o=(15&o)<<2|(c=a?e[r+2]:0)>>6,63&c);a||(c=64,s||(o=64)),l.push(n[u],n[i],n[o],n[c])}return l.join("")},goog.crypt.base64.encodeString=function(e,t){return goog.crypt.base64.HAS_NATIVE_ENCODE_&&!t?goog.global.btoa(e):goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(e),t)},goog.crypt.base64.decodeString=function(e,t){if(goog.crypt.base64.HAS_NATIVE_DECODE_&&!t)return goog.global.atob(e);var n="";return goog.crypt.base64.decodeStringInternal_(e,function(e){n+=String.fromCharCode(e)}),n},goog.crypt.base64.decodeStringToByteArray=function(e,t){var n=[];return goog.crypt.base64.decodeStringInternal_(e,function(e){n.push(e)}),n},goog.crypt.base64.decodeStringToUint8Array=function(e){goog.asserts.assert(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10"),"Browser does not support typed arrays");var t=new Uint8Array(Math.ceil(3*e.length/4)),n=0;return goog.crypt.base64.decodeStringInternal_(e,function(e){t[n++]=e}),t.subarray(0,n)},goog.crypt.base64.decodeStringInternal_=function(e,t){function n(t){for(;l<e.length;){var n=e.charAt(l++),r=goog.crypt.base64.charToByteMap_[n];if(null!=r)return r;if(!goog.string.isEmptyOrWhitespace(n))throw Error("Unknown base64 encoding at char: "+n)}return t}goog.crypt.base64.init_();for(var l=0;;){var r=n(-1),i=n(0),s=n(64),o=n(64);if(64===o&&-1===r)break;t(r<<2|i>>4),64!=s&&(t(i<<4&240|s>>2),64!=o&&t(s<<6&192|o))}},goog.crypt.base64.init_=function(){if(!goog.crypt.base64.byteToCharMap_){goog.crypt.base64.byteToCharMap_={},goog.crypt.base64.charToByteMap_={},goog.crypt.base64.byteToCharMapWebSafe_={};for(var e=0;e<goog.crypt.base64.ENCODED_VALS.length;e++)goog.crypt.base64.byteToCharMap_[e]=goog.crypt.base64.ENCODED_VALS.charAt(e),goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[e]]=e,goog.crypt.base64.byteToCharMapWebSafe_[e]=goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(e),e>=goog.crypt.base64.ENCODED_VALS_BASE.length&&(goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(e)]=e)}},jspb.ExtensionFieldInfo=function(e,t,n,l,r){this.fieldIndex=e,this.fieldName=t,this.ctor=n,this.toObjectFn=l,this.isRepeated=r},jspb.ExtensionFieldBinaryInfo=function(e,t,n,l,r,i){this.fieldInfo=e,this.binaryReaderFn=t,this.binaryWriterFn=n,this.binaryMessageSerializeFn=l,this.binaryMessageDeserializeFn=r,this.isPacked=i},jspb.ExtensionFieldInfo.prototype.isMessageType=function(){return!!this.ctor},jspb.Message=function(){},jspb.Message.GENERATE_TO_OBJECT=!0,jspb.Message.GENERATE_FROM_OBJECT=!goog.DISALLOW_TEST_ONLY_CODE,jspb.Message.GENERATE_TO_STRING=!0,jspb.Message.ASSUME_LOCAL_ARRAYS=!1,jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS=!0,jspb.Message.SUPPORTS_UINT8ARRAY_="function"==typeof Uint8Array,jspb.Message.prototype.getJsPbMessageId=function(){return this.messageId_},jspb.Message.getIndex_=function(e,t){return t+e.arrayIndexOffset_},jspb.Message.getFieldNumber_=function(e,t){return t-e.arrayIndexOffset_},jspb.Message.initialize=function(e,t,n,l,r,i){if(e.wrappers_=null,t||(t=n?[n]:[]),e.messageId_=n?String(n):void 0,e.arrayIndexOffset_=0===n?-1:0,e.array=t,jspb.Message.initPivotAndExtensionObject_(e,l),e.convertedFloatingPointFields_={},jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS||(e.repeatedFields=r),r)for(t=0;t<r.length;t++)(n=r[t])<e.pivot_?(n=jspb.Message.getIndex_(e,n),e.array[n]=e.array[n]||jspb.Message.EMPTY_LIST_SENTINEL_):(jspb.Message.maybeInitEmptyExtensionObject_(e),e.extensionObject_[n]=e.extensionObject_[n]||jspb.Message.EMPTY_LIST_SENTINEL_);if(i&&i.length)for(t=0;t<i.length;t++)jspb.Message.computeOneofCase(e,i[t])},jspb.Message.EMPTY_LIST_SENTINEL_=goog.DEBUG&&Object.freeze?Object.freeze([]):[],jspb.Message.isArray_=function(e){return jspb.Message.ASSUME_LOCAL_ARRAYS?e instanceof Array:goog.isArray(e)},jspb.Message.initPivotAndExtensionObject_=function(e,t){if(e.array.length){var n=e.array.length-1,l=e.array[n];if(l&&"object"==typeof l&&!jspb.Message.isArray_(l)&&!(jspb.Message.SUPPORTS_UINT8ARRAY_&&l instanceof Uint8Array))return e.pivot_=jspb.Message.getFieldNumber_(e,n),void(e.extensionObject_=l)}-1<t?(e.pivot_=t,e.extensionObject_=null):e.pivot_=Number.MAX_VALUE},jspb.Message.maybeInitEmptyExtensionObject_=function(e){var t=jspb.Message.getIndex_(e,e.pivot_);e.array[t]||(e.extensionObject_=e.array[t]={})},jspb.Message.toObjectList=function(e,t,n){for(var l=[],r=0;r<e.length;r++)l[r]=t.call(e[r],n,e[r]);return l},jspb.Message.toObjectExtension=function(e,t,n,l,r){for(var i in n){var s=n[i],o=l.call(e,s);if(null!=o){for(var a in s.fieldName)if(s.fieldName.hasOwnProperty(a))break;t[a]=s.toObjectFn?s.isRepeated?jspb.Message.toObjectList(o,s.toObjectFn,r):s.toObjectFn(r,o):o}}},jspb.Message.serializeBinaryExtensions=function(e,t,n,l){for(var r in n){var i=n[r],s=i.fieldInfo;if(!i.binaryWriterFn)throw Error("Message extension present that was generated without binary serialization support");var o=l.call(e,s);if(null!=o)if(s.isMessageType()){if(!i.binaryMessageSerializeFn)throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");i.binaryWriterFn.call(t,s.fieldIndex,o,i.binaryMessageSerializeFn)}else i.binaryWriterFn.call(t,s.fieldIndex,o)}},jspb.Message.readBinaryExtension=function(e,t,n,l,r){var i=n[t.getFieldNumber()];if(i){if(n=i.fieldInfo,!i.binaryReaderFn)throw Error("Deserializing extension whose generated code does not support binary format");var s;n.isMessageType()?(s=new n.ctor,i.binaryReaderFn.call(t,s,i.binaryMessageDeserializeFn)):s=i.binaryReaderFn.call(t),n.isRepeated&&!i.isPacked?(t=l.call(e,n))?t.push(s):r.call(e,n,[s]):r.call(e,n,s)}else t.skipField()},jspb.Message.getField=function(e,t){if(t<e.pivot_){var n=jspb.Message.getIndex_(e,t),l=e.array[n];return l===jspb.Message.EMPTY_LIST_SENTINEL_?e.array[n]=[]:l}if(e.extensionObject_)return(l=e.extensionObject_[t])===jspb.Message.EMPTY_LIST_SENTINEL_?e.extensionObject_[t]=[]:l},jspb.Message.getRepeatedField=function(e,t){if(t<e.pivot_){var n=jspb.Message.getIndex_(e,t),l=e.array[n];return l===jspb.Message.EMPTY_LIST_SENTINEL_?e.array[n]=[]:l}return(l=e.extensionObject_[t])===jspb.Message.EMPTY_LIST_SENTINEL_?e.extensionObject_[t]=[]:l},jspb.Message.getOptionalFloatingPointField=function(e,t){var n=jspb.Message.getField(e,t);return null==n?n:+n},jspb.Message.getRepeatedFloatingPointField=function(e,t){var n=jspb.Message.getRepeatedField(e,t);if(e.convertedFloatingPointFields_||(e.convertedFloatingPointFields_={}),!e.convertedFloatingPointFields_[t]){for(var l=0;l<n.length;l++)n[l]=+n[l];e.convertedFloatingPointFields_[t]=!0}return n},jspb.Message.bytesAsB64=function(e){return null==e||goog.isString(e)?e:jspb.Message.SUPPORTS_UINT8ARRAY_&&e instanceof Uint8Array?goog.crypt.base64.encodeByteArray(e):(goog.asserts.fail("Cannot coerce to b64 string: "+goog.typeOf(e)),null)},jspb.Message.bytesAsU8=function(e){return null==e||e instanceof Uint8Array?e:goog.isString(e)?goog.crypt.base64.decodeStringToUint8Array(e):(goog.asserts.fail("Cannot coerce to Uint8Array: "+goog.typeOf(e)),null)},jspb.Message.bytesListAsB64=function(e){return jspb.Message.assertConsistentTypes_(e),!e.length||goog.isString(e[0])?e:goog.array.map(e,jspb.Message.bytesAsB64)},jspb.Message.bytesListAsU8=function(e){return jspb.Message.assertConsistentTypes_(e),!e.length||e[0]instanceof Uint8Array?e:goog.array.map(e,jspb.Message.bytesAsU8)},jspb.Message.assertConsistentTypes_=function(e){if(goog.DEBUG&&e&&1<e.length){var t=goog.typeOf(e[0]);goog.array.forEach(e,function(e){goog.typeOf(e)!=t&&goog.asserts.fail("Inconsistent type in JSPB repeated field array. Got "+goog.typeOf(e)+" expected "+t)})}},jspb.Message.getFieldWithDefault=function(e,t,n){return null==(e=jspb.Message.getField(e,t))?n:e},jspb.Message.getFieldProto3=jspb.Message.getFieldWithDefault,jspb.Message.getMapField=function(e,t,n,l){return e.wrappers_||(e.wrappers_={}),t in e.wrappers_?e.wrappers_[t]:n?void 0:((n=jspb.Message.getField(e,t))||(n=[],jspb.Message.setField(e,t,n)),e.wrappers_[t]=new jspb.Map(n,l))},jspb.Message.setField=function(e,t,n){t<e.pivot_?e.array[jspb.Message.getIndex_(e,t)]=n:(jspb.Message.maybeInitEmptyExtensionObject_(e),e.extensionObject_[t]=n)},jspb.Message.setProto3IntField=function(e,t,n){jspb.Message.setFieldIgnoringDefault_(e,t,n,0)},jspb.Message.setProto3StringIntField=function(e,t,n){jspb.Message.setFieldIgnoringDefault_(e,t,n,"0")},jspb.Message.setProto3FloatField=function(e,t,n){jspb.Message.setFieldIgnoringDefault_(e,t,n,0)},jspb.Message.setProto3BooleanField=function(e,t,n){jspb.Message.setFieldIgnoringDefault_(e,t,n,!1)},jspb.Message.setProto3StringField=function(e,t,n){jspb.Message.setFieldIgnoringDefault_(e,t,n,"")},jspb.Message.setProto3BytesField=function(e,t,n){jspb.Message.setFieldIgnoringDefault_(e,t,n,"")},jspb.Message.setProto3EnumField=function(e,t,n){jspb.Message.setFieldIgnoringDefault_(e,t,n,0)},jspb.Message.setFieldIgnoringDefault_=function(e,t,n,l){n!=l?jspb.Message.setField(e,t,n):e.array[jspb.Message.getIndex_(e,t)]=null},jspb.Message.addToRepeatedField=function(e,t,n,l){e=jspb.Message.getRepeatedField(e,t),void 0!=l?e.splice(l,0,n):e.push(n)},jspb.Message.setOneofField=function(e,t,n,l){(n=jspb.Message.computeOneofCase(e,n))&&n!==t&&void 0!==l&&(e.wrappers_&&n in e.wrappers_&&(e.wrappers_[n]=void 0),jspb.Message.setField(e,n,void 0)),jspb.Message.setField(e,t,l)},jspb.Message.computeOneofCase=function(e,t){for(var n,l,r=0;r<t.length;r++){var i=t[r],s=jspb.Message.getField(e,i);null!=s&&(n=i,l=s,jspb.Message.setField(e,i,void 0))}return n?(jspb.Message.setField(e,n,l),n):0},jspb.Message.getWrapperField=function(e,t,n,l){if(e.wrappers_||(e.wrappers_={}),!e.wrappers_[n]){var r=jspb.Message.getField(e,n);(l||r)&&(e.wrappers_[n]=new t(r))}return e.wrappers_[n]},jspb.Message.getRepeatedWrapperField=function(e,t,n){return jspb.Message.wrapRepeatedField_(e,t,n),(t=e.wrappers_[n])==jspb.Message.EMPTY_LIST_SENTINEL_&&(t=e.wrappers_[n]=[]),t},jspb.Message.wrapRepeatedField_=function(e,t,n){if(e.wrappers_||(e.wrappers_={}),!e.wrappers_[n]){for(var l=jspb.Message.getRepeatedField(e,n),r=[],i=0;i<l.length;i++)r[i]=new t(l[i]);e.wrappers_[n]=r}},jspb.Message.setWrapperField=function(e,t,n){e.wrappers_||(e.wrappers_={});var l=n?n.toArray():n;e.wrappers_[t]=n,jspb.Message.setField(e,t,l)},jspb.Message.setOneofWrapperField=function(e,t,n,l){e.wrappers_||(e.wrappers_={});var r=l?l.toArray():l;e.wrappers_[t]=l,jspb.Message.setOneofField(e,t,n,r)},jspb.Message.setRepeatedWrapperField=function(e,t,n){e.wrappers_||(e.wrappers_={}),n=n||[];for(var l=[],r=0;r<n.length;r++)l[r]=n[r].toArray();e.wrappers_[t]=n,jspb.Message.setField(e,t,l)},jspb.Message.addToRepeatedWrapperField=function(e,t,n,l,r){jspb.Message.wrapRepeatedField_(e,l,t);var i=e.wrappers_[t];return i||(i=e.wrappers_[t]=[]),n=n||new l,e=jspb.Message.getRepeatedField(e,t),void 0!=r?(i.splice(r,0,n),e.splice(r,0,n.toArray())):(i.push(n),e.push(n.toArray())),n},jspb.Message.toMap=function(e,t,n,l){for(var r={},i=0;i<e.length;i++)r[t.call(e[i])]=n?n.call(e[i],l,e[i]):e[i];return r},jspb.Message.prototype.syncMapFields_=function(){if(this.wrappers_)for(var e in this.wrappers_){var t=this.wrappers_[e];if(goog.isArray(t))for(var n=0;n<t.length;n++)t[n]&&t[n].toArray();else t&&t.toArray()}},jspb.Message.prototype.toArray=function(){return this.syncMapFields_(),this.array},jspb.Message.GENERATE_TO_STRING&&(jspb.Message.prototype.toString=function(){return this.syncMapFields_(),this.array.toString()}),jspb.Message.prototype.getExtension=function(e){if(this.extensionObject_){this.wrappers_||(this.wrappers_={});var t=e.fieldIndex;if(e.isRepeated){if(e.isMessageType())return this.wrappers_[t]||(this.wrappers_[t]=goog.array.map(this.extensionObject_[t]||[],function(t){return new e.ctor(t)})),this.wrappers_[t]}else if(e.isMessageType())return!this.wrappers_[t]&&this.extensionObject_[t]&&(this.wrappers_[t]=new e.ctor(this.extensionObject_[t])),this.wrappers_[t];return this.extensionObject_[t]}},jspb.Message.prototype.setExtension=function(e,t){this.wrappers_||(this.wrappers_={}),jspb.Message.maybeInitEmptyExtensionObject_(this);var n=e.fieldIndex;return e.isRepeated?(t=t||[],e.isMessageType()?(this.wrappers_[n]=t,this.extensionObject_[n]=goog.array.map(t,function(e){return e.toArray()})):this.extensionObject_[n]=t):e.isMessageType()?(this.wrappers_[n]=t,this.extensionObject_[n]=t?t.toArray():t):this.extensionObject_[n]=t,this},jspb.Message.difference=function(e,t){if(!(e instanceof t.constructor))throw Error("Messages have different types.");var n=e.toArray(),l=t.toArray(),r=[],i=0,s=n.length>l.length?n.length:l.length;for(e.getJsPbMessageId()&&(r[0]=e.getJsPbMessageId(),i=1);i<s;i++)jspb.Message.compareFields(n[i],l[i])||(r[i]=l[i]);return new e.constructor(r)},jspb.Message.equals=function(e,t){return e==t||!(!e||!t)&&e instanceof t.constructor&&jspb.Message.compareFields(e.toArray(),t.toArray())},jspb.Message.compareExtensions=function(e,t){e=e||{},t=t||{};var n,l={};for(n in e)l[n]=0;for(n in t)l[n]=0;for(n in l)if(!jspb.Message.compareFields(e[n],t[n]))return!1;return!0},jspb.Message.compareFields=function(e,t){if(e==t)return!0;if(!goog.isObject(e)||!goog.isObject(t))return!!(goog.isNumber(e)&&isNaN(e)||goog.isNumber(t)&&isNaN(t))&&String(e)==String(t);if(e.constructor!=t.constructor)return!1;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&e.constructor===Uint8Array){if(e.length!=t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!=t[n])return!1;return!0}if(e.constructor===Array){var l=void 0,r=void 0,i=Math.max(e.length,t.length);for(n=0;n<i;n++){var s=e[n],o=t[n];if(s&&s.constructor==Object&&(goog.asserts.assert(void 0===l),goog.asserts.assert(n===e.length-1),l=s,s=void 0),o&&o.constructor==Object&&(goog.asserts.assert(void 0===r),goog.asserts.assert(n===t.length-1),r=o,o=void 0),!jspb.Message.compareFields(s,o))return!1}return!l&&!r||(l=l||{},r=r||{},jspb.Message.compareExtensions(l,r))}if(e.constructor===Object)return jspb.Message.compareExtensions(e,t);throw Error("Invalid type in JSPB array")},jspb.Message.prototype.cloneMessage=function(){return jspb.Message.cloneMessage(this)},jspb.Message.prototype.clone=function(){return jspb.Message.cloneMessage(this)},jspb.Message.clone=function(e){return jspb.Message.cloneMessage(e)},jspb.Message.cloneMessage=function(e){return new e.constructor(jspb.Message.clone_(e.toArray()))},jspb.Message.copyInto=function(e,t){goog.asserts.assertInstanceof(e,jspb.Message),goog.asserts.assertInstanceof(t,jspb.Message),goog.asserts.assert(e.constructor==t.constructor,"Copy source and target message should have the same type.");for(var n=jspb.Message.clone(e),l=t.toArray(),r=n.toArray(),i=l.length=0;i<r.length;i++)l[i]=r[i];t.wrappers_=n.wrappers_,t.extensionObject_=n.extensionObject_},jspb.Message.clone_=function(e){var t;if(goog.isArray(e)){for(var n=Array(e.length),l=0;l<e.length;l++)null!=(t=e[l])&&(n[l]="object"==typeof t?jspb.Message.clone_(goog.asserts.assert(t)):t);return n}if(jspb.Message.SUPPORTS_UINT8ARRAY_&&e instanceof Uint8Array)return new Uint8Array(e);for(l in n={},e)null!=(t=e[l])&&(n[l]="object"==typeof t?jspb.Message.clone_(goog.asserts.assert(t)):t);return n},jspb.Message.registerMessageType=function(e,t){jspb.Message.registry_[e]=t,t.messageId=e},jspb.Message.registry_={},jspb.Message.messageSetExtensions={},jspb.Message.messageSetExtensionsBinary={},jspb.arith={},jspb.arith.UInt64=function(e,t){this.lo=e,this.hi=t},jspb.arith.UInt64.prototype.cmp=function(e){return this.hi<e.hi||this.hi==e.hi&&this.lo<e.lo?-1:this.hi==e.hi&&this.lo==e.lo?0:1},jspb.arith.UInt64.prototype.rightShift=function(){return new jspb.arith.UInt64((this.lo>>>1|(1&this.hi)<<31)>>>0,this.hi>>>1>>>0)},jspb.arith.UInt64.prototype.leftShift=function(){return new jspb.arith.UInt64(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)},jspb.arith.UInt64.prototype.msb=function(){return!!(2147483648&this.hi)},jspb.arith.UInt64.prototype.lsb=function(){return!!(1&this.lo)},jspb.arith.UInt64.prototype.zero=function(){return 0==this.lo&&0==this.hi},jspb.arith.UInt64.prototype.add=function(e){return new jspb.arith.UInt64((this.lo+e.lo&4294967295)>>>0>>>0,((this.hi+e.hi&4294967295)>>>0)+(4294967296<=this.lo+e.lo?1:0)>>>0)},jspb.arith.UInt64.prototype.sub=function(e){return new jspb.arith.UInt64((this.lo-e.lo&4294967295)>>>0>>>0,((this.hi-e.hi&4294967295)>>>0)-(0>this.lo-e.lo?1:0)>>>0)},jspb.arith.UInt64.mul32x32=function(e,t){for(var n=e>>>16,l=65535&t,r=t>>>16,i=(s=65535&e)*l+65536*(s*r&65535)+65536*(n*l&65535),s=n*r+(s*r>>>16)+(n*l>>>16);4294967296<=i;)i-=4294967296,s+=1;return new jspb.arith.UInt64(i>>>0,s>>>0)},jspb.arith.UInt64.prototype.mul=function(e){var t=jspb.arith.UInt64.mul32x32(this.lo,e);return(e=jspb.arith.UInt64.mul32x32(this.hi,e)).hi=e.lo,e.lo=0,t.add(e)},jspb.arith.UInt64.prototype.div=function(e){if(0==e)return[];var t=new jspb.arith.UInt64(0,0),n=new jspb.arith.UInt64(this.lo,this.hi);e=new jspb.arith.UInt64(e,0);for(var l=new jspb.arith.UInt64(1,0);!e.msb();)e=e.leftShift(),l=l.leftShift();for(;!l.zero();)0>=e.cmp(n)&&(t=t.add(l),n=n.sub(e)),e=e.rightShift(),l=l.rightShift();return[t,n]},jspb.arith.UInt64.prototype.toString=function(){for(var e="",t=this;!t.zero();){var n=(t=t.div(10))[0];e=t[1].lo+e,t=n}return""==e&&(e="0"),e},jspb.arith.UInt64.fromString=function(e){for(var t=new jspb.arith.UInt64(0,0),n=new jspb.arith.UInt64(0,0),l=0;l<e.length;l++){if("0">e[l]||"9"<e[l])return null;var r=parseInt(e[l],10);n.lo=r,t=t.mul(10).add(n)}return t},jspb.arith.UInt64.prototype.clone=function(){return new jspb.arith.UInt64(this.lo,this.hi)},jspb.arith.Int64=function(e,t){this.lo=e,this.hi=t},jspb.arith.Int64.prototype.add=function(e){return new jspb.arith.Int64((this.lo+e.lo&4294967295)>>>0>>>0,((this.hi+e.hi&4294967295)>>>0)+(4294967296<=this.lo+e.lo?1:0)>>>0)},jspb.arith.Int64.prototype.sub=function(e){return new jspb.arith.Int64((this.lo-e.lo&4294967295)>>>0>>>0,((this.hi-e.hi&4294967295)>>>0)-(0>this.lo-e.lo?1:0)>>>0)},jspb.arith.Int64.prototype.clone=function(){return new jspb.arith.Int64(this.lo,this.hi)},jspb.arith.Int64.prototype.toString=function(){var e=0!=(2147483648&this.hi),t=new jspb.arith.UInt64(this.lo,this.hi);return e&&(t=new jspb.arith.UInt64(0,0).sub(t)),(e?"-":"")+t.toString()},jspb.arith.Int64.fromString=function(e){var t=0<e.length&&"-"==e[0];return t&&(e=e.substring(1)),null===(e=jspb.arith.UInt64.fromString(e))?null:(t&&(e=new jspb.arith.UInt64(0,0).sub(e)),new jspb.arith.Int64(e.lo,e.hi))},jspb.BinaryConstants={},jspb.ConstBinaryMessage=function(){},jspb.BinaryMessage=function(){},jspb.BinaryConstants.FieldType={INVALID:-1,DOUBLE:1,FLOAT:2,INT64:3,UINT64:4,INT32:5,FIXED64:6,FIXED32:7,BOOL:8,STRING:9,GROUP:10,MESSAGE:11,BYTES:12,UINT32:13,ENUM:14,SFIXED32:15,SFIXED64:16,SINT32:17,SINT64:18,FHASH64:30,VHASH64:31},jspb.BinaryConstants.WireType={INVALID:-1,VARINT:0,FIXED64:1,DELIMITED:2,START_GROUP:3,END_GROUP:4,FIXED32:5},jspb.BinaryConstants.FieldTypeToWireType=function(e){var t=jspb.BinaryConstants.FieldType,n=jspb.BinaryConstants.WireType;switch(e){case t.INT32:case t.INT64:case t.UINT32:case t.UINT64:case t.SINT32:case t.SINT64:case t.BOOL:case t.ENUM:case t.VHASH64:return n.VARINT;case t.DOUBLE:case t.FIXED64:case t.SFIXED64:case t.FHASH64:return n.FIXED64;case t.STRING:case t.MESSAGE:case t.BYTES:return n.DELIMITED;case t.FLOAT:case t.FIXED32:case t.SFIXED32:return n.FIXED32;default:return n.INVALID}},jspb.BinaryConstants.INVALID_FIELD_NUMBER=-1,jspb.BinaryConstants.FLOAT32_EPS=1.401298464324817e-45,jspb.BinaryConstants.FLOAT32_MIN=1.1754943508222875e-38,jspb.BinaryConstants.FLOAT32_MAX=3.4028234663852886e38,jspb.BinaryConstants.FLOAT64_EPS=5e-324,jspb.BinaryConstants.FLOAT64_MIN=2.2250738585072014e-308,jspb.BinaryConstants.FLOAT64_MAX=1.7976931348623157e308,jspb.BinaryConstants.TWO_TO_20=1048576,jspb.BinaryConstants.TWO_TO_23=8388608,jspb.BinaryConstants.TWO_TO_31=2147483648,jspb.BinaryConstants.TWO_TO_32=4294967296,jspb.BinaryConstants.TWO_TO_52=4503599627370496,jspb.BinaryConstants.TWO_TO_63=0x8000000000000000,jspb.BinaryConstants.TWO_TO_64=0x10000000000000000,jspb.BinaryConstants.ZERO_HASH="\0\0\0\0\0\0\0\0",jspb.utils={},jspb.utils.split64Low=0,jspb.utils.split64High=0,jspb.utils.splitUint64=function(e){var t=e>>>0;e=Math.floor((e-t)/jspb.BinaryConstants.TWO_TO_32)>>>0,jspb.utils.split64Low=t,jspb.utils.split64High=e},jspb.utils.splitInt64=function(e){var t=0>e,n=(e=Math.abs(e))>>>0;e=Math.floor((e-n)/jspb.BinaryConstants.TWO_TO_32),e>>>=0,t&&(e=~e>>>0,4294967295<(n=1+(~n>>>0))&&(n=0,4294967295<++e&&(e=0))),jspb.utils.split64Low=n,jspb.utils.split64High=e},jspb.utils.splitZigzag64=function(e){var t=0>e;e=2*Math.abs(e),jspb.utils.splitUint64(e),e=jspb.utils.split64Low;var n=jspb.utils.split64High;t&&(0==e?0==n?n=e=4294967295:(n--,e=4294967295):e--),jspb.utils.split64Low=e,jspb.utils.split64High=n},jspb.utils.splitFloat32=function(e){var t,n=0>e?1:0;0===(e=n?-e:e)?0<1/e?(jspb.utils.split64High=0,jspb.utils.split64Low=0):(jspb.utils.split64High=0,jspb.utils.split64Low=2147483648):isNaN(e)?(jspb.utils.split64High=0,jspb.utils.split64Low=2147483647):e>jspb.BinaryConstants.FLOAT32_MAX?(jspb.utils.split64High=0,jspb.utils.split64Low=(n<<31|2139095040)>>>0):e<jspb.BinaryConstants.FLOAT32_MIN?(e=Math.round(e/Math.pow(2,-149)),jspb.utils.split64High=0,jspb.utils.split64Low=(n<<31|e)>>>0):(t=Math.floor(Math.log(e)/Math.LN2),e*=Math.pow(2,-t),e=8388607&Math.round(e*jspb.BinaryConstants.TWO_TO_23),jspb.utils.split64High=0,jspb.utils.split64Low=(n<<31|t+127<<23|e)>>>0)},jspb.utils.splitFloat64=function(e){var t=0>e?1:0;if(0===(e=t?-e:e))jspb.utils.split64High=0<1/e?0:2147483648,jspb.utils.split64Low=0;else if(isNaN(e))jspb.utils.split64High=2147483647,jspb.utils.split64Low=4294967295;else if(e>jspb.BinaryConstants.FLOAT64_MAX)jspb.utils.split64High=(t<<31|2146435072)>>>0,jspb.utils.split64Low=0;else if(e<jspb.BinaryConstants.FLOAT64_MIN){var n=e/Math.pow(2,-1074);e=n/jspb.BinaryConstants.TWO_TO_32,jspb.utils.split64High=(t<<31|e)>>>0,jspb.utils.split64Low=n>>>0}else{var l=Math.floor(Math.log(e)/Math.LN2);1024==l&&(l=1023),e=(n=e*Math.pow(2,-l))*jspb.BinaryConstants.TWO_TO_20&1048575,n=n*jspb.BinaryConstants.TWO_TO_52>>>0,jspb.utils.split64High=(t<<31|l+1023<<20|e)>>>0,jspb.utils.split64Low=n}},jspb.utils.splitHash64=function(e){var t=e.charCodeAt(0),n=e.charCodeAt(1),l=e.charCodeAt(2),r=e.charCodeAt(3),i=e.charCodeAt(4),s=e.charCodeAt(5),o=e.charCodeAt(6);e=e.charCodeAt(7),jspb.utils.split64Low=t+(n<<8)+(l<<16)+(r<<24)>>>0,jspb.utils.split64High=i+(s<<8)+(o<<16)+(e<<24)>>>0},jspb.utils.joinUint64=function(e,t){return t*jspb.BinaryConstants.TWO_TO_32+e},jspb.utils.joinInt64=function(e,t){var n=2147483648&t;n&&(t=~t>>>0,0==(e=1+~e>>>0)&&(t=t+1>>>0));var l=jspb.utils.joinUint64(e,t);return n?-l:l},jspb.utils.joinZigzag64=function(e,t){var n=1&e;e=(e>>>1|t<<31)>>>0,t>>>=1,n&&(0==(e=e+1>>>0)&&(t=t+1>>>0));var l=jspb.utils.joinUint64(e,t);return n?-l:l},jspb.utils.joinFloat32=function(e,t){var n=2*(e>>31)+1,l=e>>>23&255,r=8388607&e;return 255==l?r?NaN:1/0*n:0==l?n*Math.pow(2,-149)*r:n*Math.pow(2,l-150)*(r+Math.pow(2,23))},jspb.utils.joinFloat64=function(e,t){var n=2*(t>>31)+1,l=t>>>20&2047,r=jspb.BinaryConstants.TWO_TO_32*(1048575&t)+e;return 2047==l?r?NaN:1/0*n:0==l?n*Math.pow(2,-1074)*r:n*Math.pow(2,l-1075)*(r+jspb.BinaryConstants.TWO_TO_52)},jspb.utils.joinHash64=function(e,t){return String.fromCharCode(e>>>0&255,e>>>8&255,e>>>16&255,e>>>24&255,t>>>0&255,t>>>8&255,t>>>16&255,t>>>24&255)},jspb.utils.DIGITS="0123456789abcdef".split(""),jspb.utils.joinUnsignedDecimalString=function(e,t){function n(e){for(var t=1e7,n=0;7>n;n++){var l=e/(t=t/10)%10>>>0;(0!=l||o)&&(o=!0,a+=s[l])}}if(2097151>=t)return""+(jspb.BinaryConstants.TWO_TO_32*t+e);var l=(16777215&e)+6777216*(r=(e>>>24|t<<8)>>>0&16777215)+6710656*(i=t>>16&65535),r=r+8147497*i,i=2*i;1e7<=l&&(r+=Math.floor(l/1e7),l%=1e7),1e7<=r&&(i+=Math.floor(r/1e7),r%=1e7);var s=jspb.utils.DIGITS,o=!1,a="";return(i||o)&&n(i),(r||o)&&n(r),(l||o)&&n(l),a},jspb.utils.joinSignedDecimalString=function(e,t){var n=2147483648&t;n&&(t=~t+(0==(e=1+~e>>>0)?1:0)>>>0);var l=jspb.utils.joinUnsignedDecimalString(e,t);return n?"-"+l:l},jspb.utils.hash64ToDecimalString=function(e,t){jspb.utils.splitHash64(e);var n=jspb.utils.split64Low,l=jspb.utils.split64High;return t?jspb.utils.joinSignedDecimalString(n,l):jspb.utils.joinUnsignedDecimalString(n,l)},jspb.utils.hash64ArrayToDecimalStrings=function(e,t){for(var n=Array(e.length),l=0;l<e.length;l++)n[l]=jspb.utils.hash64ToDecimalString(e[l],t);return n},jspb.utils.decimalStringToHash64=function(e){function t(e,t){for(var n=0;8>n&&(1!==e||0<t);n++){var r=e*l[n]+t;l[n]=255&r,t=r>>>8}}goog.asserts.assert(0<e.length);var n=!1;"-"===e[0]&&(n=!0,e=e.slice(1));for(var l=[0,0,0,0,0,0,0,0],r=0;r<e.length;r++)t(10,jspb.utils.DIGITS.indexOf(e[r]));return n&&(function(){for(var e=0;8>e;e++)l[e]=255&~l[e]}(),t(1,1)),goog.crypt.byteArrayToString(l)},jspb.utils.splitDecimalString=function(e){jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(e))},jspb.utils.hash64ToHexString=function(e){var t=Array(18);t[0]="0",t[1]="x";for(var n=0;8>n;n++){var l=e.charCodeAt(7-n);t[2*n+2]=jspb.utils.DIGITS[l>>4],t[2*n+3]=jspb.utils.DIGITS[15&l]}return t.join("")},jspb.utils.hexStringToHash64=function(e){e=e.toLowerCase(),goog.asserts.assert(18==e.length),goog.asserts.assert("0"==e[0]),goog.asserts.assert("x"==e[1]);for(var t="",n=0;8>n;n++){var l=jspb.utils.DIGITS.indexOf(e[2*n+2]),r=jspb.utils.DIGITS.indexOf(e[2*n+3]);t=String.fromCharCode(16*l+r)+t}return t},jspb.utils.hash64ToNumber=function(e,t){jspb.utils.splitHash64(e);var n=jspb.utils.split64Low,l=jspb.utils.split64High;return t?jspb.utils.joinInt64(n,l):jspb.utils.joinUint64(n,l)},jspb.utils.numberToHash64=function(e){return jspb.utils.splitInt64(e),jspb.utils.joinHash64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.utils.countVarints=function(e,t,n){for(var l=0,r=t;r<n;r++)l+=e[r]>>7;return n-t-l},jspb.utils.countVarintFields=function(e,t,n,l){var r=0;if(128>(l=8*l+jspb.BinaryConstants.WireType.VARINT))for(;t<n&&e[t++]==l;)for(r++;;){var i=e[t++];if(0==(128&i))break}else for(;t<n;){for(i=l;128<i;){if(e[t]!=(127&i|128))return r;t++,i>>=7}if(e[t++]!=i)break;for(r++;0!=(128&(i=e[t++])););}return r},jspb.utils.countFixedFields_=function(e,t,n,l,r){var i=0;if(128>l)for(;t<n&&e[t++]==l;)i++,t+=r;else for(;t<n;){for(var s=l;128<s;){if(e[t++]!=(127&s|128))return i;s>>=7}if(e[t++]!=s)break;i++,t+=r}return i},jspb.utils.countFixed32Fields=function(e,t,n,l){return jspb.utils.countFixedFields_(e,t,n,8*l+jspb.BinaryConstants.WireType.FIXED32,4)},jspb.utils.countFixed64Fields=function(e,t,n,l){return jspb.utils.countFixedFields_(e,t,n,8*l+jspb.BinaryConstants.WireType.FIXED64,8)},jspb.utils.countDelimitedFields=function(e,t,n,l){var r=0;for(l=8*l+jspb.BinaryConstants.WireType.DELIMITED;t<n;){for(var i=l;128<i;){if(e[t++]!=(127&i|128))return r;i>>=7}if(e[t++]!=i)break;r++;for(var s=0,o=1;s+=(127&(i=e[t++]))*o,o*=128,0!=(128&i););t+=s}return r},jspb.utils.debugBytesToTextFormat=function(e){var t='"';if(e){e=jspb.utils.byteSourceToUint8Array(e);for(var n=0;n<e.length;n++)t+="\\x",16>e[n]&&(t+="0"),t+=e[n].toString(16)}return t+'"'},jspb.utils.debugScalarToTextFormat=function(e){return goog.isString(e)?goog.string.quote(e):e.toString()},jspb.utils.stringToByteArray=function(e){for(var t=new Uint8Array(e.length),n=0;n<e.length;n++){var l=e.charCodeAt(n);if(255<l)throw Error("Conversion error: string contains codepoint outside of byte range");t[n]=l}return t},jspb.utils.byteSourceToUint8Array=function(e){return e.constructor===Uint8Array?e:e.constructor===ArrayBuffer||e.constructor===Buffer||e.constructor===Array?new Uint8Array(e):e.constructor===String?goog.crypt.base64.decodeStringToUint8Array(e):(goog.asserts.fail("Type not convertible to Uint8Array."),new Uint8Array(0))},jspb.BinaryEncoder=function(){this.buffer_=[]},jspb.BinaryEncoder.prototype.length=function(){return this.buffer_.length},jspb.BinaryEncoder.prototype.end=function(){var e=this.buffer_;return this.buffer_=[],e},jspb.BinaryEncoder.prototype.writeSplitVarint64=function(e,t){for(goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(t==Math.floor(t)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32),goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32);0<t||127<e;)this.buffer_.push(127&e|128),e=(e>>>7|t<<25)>>>0,t>>>=7;this.buffer_.push(e)},jspb.BinaryEncoder.prototype.writeSplitFixed64=function(e,t){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(t==Math.floor(t)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32),goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeUint32(e),this.writeUint32(t)},jspb.BinaryEncoder.prototype.writeUnsignedVarint32=function(e){for(goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32);127<e;)this.buffer_.push(127&e|128),e>>>=7;this.buffer_.push(e)},jspb.BinaryEncoder.prototype.writeSignedVarint32=function(e){if(goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),0<=e)this.writeUnsignedVarint32(e);else{for(var t=0;9>t;t++)this.buffer_.push(127&e|128),e>>=7;this.buffer_.push(1)}},jspb.BinaryEncoder.prototype.writeUnsignedVarint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_64),jspb.utils.splitInt64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeSignedVarint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_63&&e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitInt64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeZigzagVarint32=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),this.writeUnsignedVarint32((e<<1^e>>31)>>>0)},jspb.BinaryEncoder.prototype.writeZigzagVarint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_63&&e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitZigzag64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeZigzagVarint64String=function(e){this.writeZigzagVarint64(parseInt(e,10))},jspb.BinaryEncoder.prototype.writeUint8=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&256>e),this.buffer_.push(e>>>0&255)},jspb.BinaryEncoder.prototype.writeUint16=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&65536>e),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255)},jspb.BinaryEncoder.prototype.writeUint32=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255),this.buffer_.push(e>>>16&255),this.buffer_.push(e>>>24&255)},jspb.BinaryEncoder.prototype.writeUint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_64),jspb.utils.splitUint64(e),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeInt8=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(-128<=e&&128>e),this.buffer_.push(e>>>0&255)},jspb.BinaryEncoder.prototype.writeInt16=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(-32768<=e&&32768>e),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255)},jspb.BinaryEncoder.prototype.writeInt32=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255),this.buffer_.push(e>>>16&255),this.buffer_.push(e>>>24&255)},jspb.BinaryEncoder.prototype.writeInt64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_63&&e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitInt64(e),this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeInt64String=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(+e>=-jspb.BinaryConstants.TWO_TO_63&&+e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(e)),this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeFloat=function(e){goog.asserts.assert(e>=-jspb.BinaryConstants.FLOAT32_MAX&&e<=jspb.BinaryConstants.FLOAT32_MAX),jspb.utils.splitFloat32(e),this.writeUint32(jspb.utils.split64Low)},jspb.BinaryEncoder.prototype.writeDouble=function(e){goog.asserts.assert(e>=-jspb.BinaryConstants.FLOAT64_MAX&&e<=jspb.BinaryConstants.FLOAT64_MAX),jspb.utils.splitFloat64(e),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeBool=function(e){goog.asserts.assert(goog.isBoolean(e)||goog.isNumber(e)),this.buffer_.push(e?1:0)},jspb.BinaryEncoder.prototype.writeEnum=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32(e)},jspb.BinaryEncoder.prototype.writeBytes=function(e){this.buffer_.push.apply(this.buffer_,e)},jspb.BinaryEncoder.prototype.writeVarintHash64=function(e){jspb.utils.splitHash64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeFixedHash64=function(e){jspb.utils.splitHash64(e),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeString=function(e){for(var t=this.buffer_.length,n=0;n<e.length;n++){var l=e.charCodeAt(n);if(128>l)this.buffer_.push(l);else if(2048>l)this.buffer_.push(l>>6|192),this.buffer_.push(63&l|128);else if(65536>l)if(55296<=l&&56319>=l&&n+1<e.length){var r=e.charCodeAt(n+1);56320<=r&&57343>=r&&(l=1024*(l-55296)+r-56320+65536,this.buffer_.push(l>>18|240),this.buffer_.push(l>>12&63|128),this.buffer_.push(l>>6&63|128),this.buffer_.push(63&l|128),n++)}else this.buffer_.push(l>>12|224),this.buffer_.push(l>>6&63|128),this.buffer_.push(63&l|128)}return this.buffer_.length-t},jspb.BinaryWriter=function(){this.blocks_=[],this.totalLength_=0,this.encoder_=new jspb.BinaryEncoder,this.bookmarks_=[]},jspb.BinaryWriter.prototype.appendUint8Array_=function(e){var t=this.encoder_.end();this.blocks_.push(t),this.blocks_.push(e),this.totalLength_+=t.length+e.length},jspb.BinaryWriter.prototype.beginDelimited_=function(e){return this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),e=this.encoder_.end(),this.blocks_.push(e),this.totalLength_+=e.length,e.push(this.totalLength_),e},jspb.BinaryWriter.prototype.endDelimited_=function(e){var t=e.pop();t=this.totalLength_+this.encoder_.length()-t;for(goog.asserts.assert(0<=t);127<t;)e.push(127&t|128),t>>>=7,this.totalLength_++;e.push(t),this.totalLength_++},jspb.BinaryWriter.prototype.writeSerializedMessage=function(e,t,n){this.appendUint8Array_(e.subarray(t,n))},jspb.BinaryWriter.prototype.maybeWriteSerializedMessage=function(e,t,n){null!=e&&null!=t&&null!=n&&this.writeSerializedMessage(e,t,n)},jspb.BinaryWriter.prototype.reset=function(){this.blocks_=[],this.encoder_.end(),this.totalLength_=0,this.bookmarks_=[]},jspb.BinaryWriter.prototype.getResultBuffer=function(){goog.asserts.assert(0==this.bookmarks_.length);for(var e=new Uint8Array(this.totalLength_+this.encoder_.length()),t=this.blocks_,n=t.length,l=0,r=0;r<n;r++){var i=t[r];e.set(i,l),l+=i.length}return t=this.encoder_.end(),e.set(t,l),l+=t.length,goog.asserts.assert(l==e.length),this.blocks_=[e],e},jspb.BinaryWriter.prototype.getResultBase64String=function(e){return goog.crypt.base64.encodeByteArray(this.getResultBuffer(),e)},jspb.BinaryWriter.prototype.beginSubMessage=function(e){this.bookmarks_.push(this.beginDelimited_(e))},jspb.BinaryWriter.prototype.endSubMessage=function(){goog.asserts.assert(0<=this.bookmarks_.length),this.endDelimited_(this.bookmarks_.pop())},jspb.BinaryWriter.prototype.writeFieldHeader_=function(e,t){goog.asserts.assert(1<=e&&e==Math.floor(e)),this.encoder_.writeUnsignedVarint32(8*e+t)},jspb.BinaryWriter.prototype.writeAny=function(e,t,n){var l=jspb.BinaryConstants.FieldType;switch(e){case l.DOUBLE:this.writeDouble(t,n);break;case l.FLOAT:this.writeFloat(t,n);break;case l.INT64:this.writeInt64(t,n);break;case l.UINT64:this.writeUint64(t,n);break;case l.INT32:this.writeInt32(t,n);break;case l.FIXED64:this.writeFixed64(t,n);break;case l.FIXED32:this.writeFixed32(t,n);break;case l.BOOL:this.writeBool(t,n);break;case l.STRING:this.writeString(t,n);break;case l.GROUP:goog.asserts.fail("Group field type not supported in writeAny()");break;case l.MESSAGE:goog.asserts.fail("Message field type not supported in writeAny()");break;case l.BYTES:this.writeBytes(t,n);break;case l.UINT32:this.writeUint32(t,n);break;case l.ENUM:this.writeEnum(t,n);break;case l.SFIXED32:this.writeSfixed32(t,n);break;case l.SFIXED64:this.writeSfixed64(t,n);break;case l.SINT32:this.writeSint32(t,n);break;case l.SINT64:this.writeSint64(t,n);break;case l.FHASH64:this.writeFixedHash64(t,n);break;case l.VHASH64:this.writeVarintHash64(t,n);break;default:goog.asserts.fail("Invalid field type in writeAny()")}},jspb.BinaryWriter.prototype.writeUnsignedVarint32_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint32(t))},jspb.BinaryWriter.prototype.writeSignedVarint32_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(t))},jspb.BinaryWriter.prototype.writeUnsignedVarint64_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint64(t))},jspb.BinaryWriter.prototype.writeSignedVarint64_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint64(t))},jspb.BinaryWriter.prototype.writeZigzagVarint32_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint32(t))},jspb.BinaryWriter.prototype.writeZigzagVarint64_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64(t))},jspb.BinaryWriter.prototype.writeZigzagVarint64String_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64String(t))},jspb.BinaryWriter.prototype.writeInt32=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(e,t))},jspb.BinaryWriter.prototype.writeInt32String=function(e,t){if(null!=t){var n=parseInt(t,10);goog.asserts.assert(n>=-jspb.BinaryConstants.TWO_TO_31&&n<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(e,n)}},jspb.BinaryWriter.prototype.writeInt64=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeSignedVarint64_(e,t))},jspb.BinaryWriter.prototype.writeInt64String=function(e,t){if(null!=t){var n=jspb.arith.Int64.fromString(t);this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(n.lo,n.hi)}},jspb.BinaryWriter.prototype.writeUint32=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(e,t))},jspb.BinaryWriter.prototype.writeUint32String=function(e,t){if(null!=t){var n=parseInt(t,10);goog.asserts.assert(0<=n&&n<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(e,n)}},jspb.BinaryWriter.prototype.writeUint64=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_64),this.writeUnsignedVarint64_(e,t))},jspb.BinaryWriter.prototype.writeUint64String=function(e,t){if(null!=t){var n=jspb.arith.UInt64.fromString(t);this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(n.lo,n.hi)}},jspb.BinaryWriter.prototype.writeSint32=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeZigzagVarint32_(e,t))},jspb.BinaryWriter.prototype.writeSint64=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64_(e,t))},jspb.BinaryWriter.prototype.writeSint64String=function(e,t){null!=t&&(goog.asserts.assert(+t>=-jspb.BinaryConstants.TWO_TO_63&&+t<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64String_(e,t))},jspb.BinaryWriter.prototype.writeFixed32=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeUint32(t))},jspb.BinaryWriter.prototype.writeFixed64=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_64),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeUint64(t))},jspb.BinaryWriter.prototype.writeFixed64String=function(e,t){if(null!=t){var n=jspb.arith.UInt64.fromString(t);this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(n.lo,n.hi)}},jspb.BinaryWriter.prototype.writeSfixed32=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeInt32(t))},jspb.BinaryWriter.prototype.writeSfixed64=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeInt64(t))},jspb.BinaryWriter.prototype.writeSfixed64String=function(e,t){if(null!=t){var n=jspb.arith.Int64.fromString(t);this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(n.lo,n.hi)}},jspb.BinaryWriter.prototype.writeFloat=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeFloat(t))},jspb.BinaryWriter.prototype.writeDouble=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeDouble(t))},jspb.BinaryWriter.prototype.writeBool=function(e,t){null!=t&&(goog.asserts.assert(goog.isBoolean(t)||goog.isNumber(t)),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeBool(t))},jspb.BinaryWriter.prototype.writeEnum=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(t))},jspb.BinaryWriter.prototype.writeString=function(e,t){if(null!=t){var n=this.beginDelimited_(e);this.encoder_.writeString(t),this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writeBytes=function(e,t){if(null!=t){var n=jspb.utils.byteSourceToUint8Array(t);this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(n.length),this.appendUint8Array_(n)}},jspb.BinaryWriter.prototype.writeMessage=function(e,t,n){null!=t&&(e=this.beginDelimited_(e),n(t,this),this.endDelimited_(e))},jspb.BinaryWriter.prototype.writeGroup=function(e,t,n){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.START_GROUP),n(t,this),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.END_GROUP))},jspb.BinaryWriter.prototype.writeFixedHash64=function(e,t){null!=t&&(goog.asserts.assert(8==t.length),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeFixedHash64(t))},jspb.BinaryWriter.prototype.writeVarintHash64=function(e,t){null!=t&&(goog.asserts.assert(8==t.length),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeVarintHash64(t))},jspb.BinaryWriter.prototype.writeRepeatedInt32=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeSignedVarint32_(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedInt32String=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeInt32String(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedInt64=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeSignedVarint64_(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedInt64String=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeInt64String(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedUint32=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeUnsignedVarint32_(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedUint32String=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeUint32String(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedUint64=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeUnsignedVarint64_(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedUint64String=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeUint64String(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedSint32=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeZigzagVarint32_(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedSint64=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeZigzagVarint64_(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedSint64String=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeZigzagVarint64String_(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedFixed32=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeFixed32(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedFixed64=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeFixed64(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedFixed64String=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeFixed64String(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedSfixed32=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeSfixed32(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedSfixed64=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeSfixed64(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedSfixed64String=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeSfixed64String(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedFloat=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeFloat(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedDouble=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeDouble(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedBool=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeBool(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedEnum=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeEnum(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedString=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeString(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedBytes=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeBytes(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedMessage=function(e,t,n){if(null!=t)for(var l=0;l<t.length;l++){var r=this.beginDelimited_(e);n(t[l],this),this.endDelimited_(r)}},jspb.BinaryWriter.prototype.writeRepeatedGroup=function(e,t,n){if(null!=t)for(var l=0;l<t.length;l++)this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.START_GROUP),n(t[l],this),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.END_GROUP)},jspb.BinaryWriter.prototype.writeRepeatedFixedHash64=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeFixedHash64(e,t[n])},jspb.BinaryWriter.prototype.writeRepeatedVarintHash64=function(e,t){if(null!=t)for(var n=0;n<t.length;n++)this.writeVarintHash64(e,t[n])},jspb.BinaryWriter.prototype.writePackedInt32=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++)this.encoder_.writeSignedVarint32(t[l]);this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedInt32String=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++)this.encoder_.writeSignedVarint32(parseInt(t[l],10));this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedInt64=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++)this.encoder_.writeSignedVarint64(t[l]);this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedInt64String=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++){var r=jspb.arith.Int64.fromString(t[l]);this.encoder_.writeSplitVarint64(r.lo,r.hi)}this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedUint32=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++)this.encoder_.writeUnsignedVarint32(t[l]);this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedUint32String=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++)this.encoder_.writeUnsignedVarint32(parseInt(t[l],10));this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedUint64=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++)this.encoder_.writeUnsignedVarint64(t[l]);this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedUint64String=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++){var r=jspb.arith.UInt64.fromString(t[l]);this.encoder_.writeSplitVarint64(r.lo,r.hi)}this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedSint32=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++)this.encoder_.writeZigzagVarint32(t[l]);this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedSint64=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++)this.encoder_.writeZigzagVarint64(t[l]);this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedSint64String=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++)this.encoder_.writeZigzagVarint64(parseInt(t[l],10));this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedFixed32=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length);for(var n=0;n<t.length;n++)this.encoder_.writeUint32(t[n])}},jspb.BinaryWriter.prototype.writePackedFixed64=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var n=0;n<t.length;n++)this.encoder_.writeUint64(t[n])}},jspb.BinaryWriter.prototype.writePackedFixed64String=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var n=0;n<t.length;n++){var l=jspb.arith.UInt64.fromString(t[n]);this.encoder_.writeSplitFixed64(l.lo,l.hi)}}},jspb.BinaryWriter.prototype.writePackedSfixed32=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length);for(var n=0;n<t.length;n++)this.encoder_.writeInt32(t[n])}},jspb.BinaryWriter.prototype.writePackedSfixed64=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var n=0;n<t.length;n++)this.encoder_.writeInt64(t[n])}},jspb.BinaryWriter.prototype.writePackedSfixed64String=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var n=0;n<t.length;n++)this.encoder_.writeInt64String(t[n])}},jspb.BinaryWriter.prototype.writePackedFloat=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length);for(var n=0;n<t.length;n++)this.encoder_.writeFloat(t[n])}},jspb.BinaryWriter.prototype.writePackedDouble=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var n=0;n<t.length;n++)this.encoder_.writeDouble(t[n])}},jspb.BinaryWriter.prototype.writePackedBool=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(t.length);for(var n=0;n<t.length;n++)this.encoder_.writeBool(t[n])}},jspb.BinaryWriter.prototype.writePackedEnum=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++)this.encoder_.writeEnum(t[l]);this.endDelimited_(n)}},jspb.BinaryWriter.prototype.writePackedFixedHash64=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var n=0;n<t.length;n++)this.encoder_.writeFixedHash64(t[n])}},jspb.BinaryWriter.prototype.writePackedVarintHash64=function(e,t){if(null!=t&&t.length){for(var n=this.beginDelimited_(e),l=0;l<t.length;l++)this.encoder_.writeVarintHash64(t[l]);this.endDelimited_(n)}},jspb.BinaryIterator=function(e,t,n){this.elements_=this.nextMethod_=this.decoder_=null,this.cursor_=0,this.nextValue_=null,this.atEnd_=!0,this.init_(e,t,n)},jspb.BinaryIterator.prototype.init_=function(e,t,n){e&&t&&(this.decoder_=e,this.nextMethod_=t),this.elements_=n||null,this.cursor_=0,this.nextValue_=null,this.atEnd_=!this.decoder_&&!this.elements_,this.next()},jspb.BinaryIterator.instanceCache_=[],jspb.BinaryIterator.alloc=function(e,t,n){if(jspb.BinaryIterator.instanceCache_.length){var l=jspb.BinaryIterator.instanceCache_.pop();return l.init_(e,t,n),l}return new jspb.BinaryIterator(e,t,n)},jspb.BinaryIterator.prototype.free=function(){this.clear(),100>jspb.BinaryIterator.instanceCache_.length&&jspb.BinaryIterator.instanceCache_.push(this)},jspb.BinaryIterator.prototype.clear=function(){this.decoder_&&this.decoder_.free(),this.elements_=this.nextMethod_=this.decoder_=null,this.cursor_=0,this.nextValue_=null,this.atEnd_=!0},jspb.BinaryIterator.prototype.get=function(){return this.nextValue_},jspb.BinaryIterator.prototype.atEnd=function(){return this.atEnd_},jspb.BinaryIterator.prototype.next=function(){var e=this.nextValue_;return this.decoder_?this.decoder_.atEnd()?(this.nextValue_=null,this.atEnd_=!0):this.nextValue_=this.nextMethod_.call(this.decoder_):this.elements_&&(this.cursor_==this.elements_.length?(this.nextValue_=null,this.atEnd_=!0):this.nextValue_=this.elements_[this.cursor_++]),e},jspb.BinaryDecoder=function(e,t,n){this.bytes_=null,this.tempHigh_=this.tempLow_=this.cursor_=this.end_=this.start_=0,this.error_=!1,e&&this.setBlock(e,t,n)},jspb.BinaryDecoder.instanceCache_=[],jspb.BinaryDecoder.alloc=function(e,t,n){if(jspb.BinaryDecoder.instanceCache_.length){var l=jspb.BinaryDecoder.instanceCache_.pop();return e&&l.setBlock(e,t,n),l}return new jspb.BinaryDecoder(e,t,n)},jspb.BinaryDecoder.prototype.free=function(){this.clear(),100>jspb.BinaryDecoder.instanceCache_.length&&jspb.BinaryDecoder.instanceCache_.push(this)},jspb.BinaryDecoder.prototype.clone=function(){return jspb.BinaryDecoder.alloc(this.bytes_,this.start_,this.end_-this.start_)},jspb.BinaryDecoder.prototype.clear=function(){this.bytes_=null,this.cursor_=this.end_=this.start_=0,this.error_=!1},jspb.BinaryDecoder.prototype.getBuffer=function(){return this.bytes_},jspb.BinaryDecoder.prototype.setBlock=function(e,t,n){this.bytes_=jspb.utils.byteSourceToUint8Array(e),this.start_=goog.isDef(t)?t:0,this.end_=goog.isDef(n)?this.start_+n:this.bytes_.length,this.cursor_=this.start_},jspb.BinaryDecoder.prototype.getEnd=function(){return this.end_},jspb.BinaryDecoder.prototype.setEnd=function(e){this.end_=e},jspb.BinaryDecoder.prototype.reset=function(){this.cursor_=this.start_},jspb.BinaryDecoder.prototype.getCursor=function(){return this.cursor_},jspb.BinaryDecoder.prototype.setCursor=function(e){this.cursor_=e},jspb.BinaryDecoder.prototype.advance=function(e){this.cursor_+=e,goog.asserts.assert(this.cursor_<=this.end_)},jspb.BinaryDecoder.prototype.atEnd=function(){return this.cursor_==this.end_},jspb.BinaryDecoder.prototype.pastEnd=function(){return this.cursor_>this.end_},jspb.BinaryDecoder.prototype.getError=function(){return this.error_||0>this.cursor_||this.cursor_>this.end_},jspb.BinaryDecoder.prototype.readSplitVarint64_=function(){for(var e,t,n=0,l=0;4>l;l++)if(n|=(127&(e=this.bytes_[this.cursor_++]))<<7*l,128>e)return this.tempLow_=n>>>0,void(this.tempHigh_=0);if(n|=(127&(e=this.bytes_[this.cursor_++]))<<28,t=0|(127&e)>>4,128>e)this.tempLow_=n>>>0,this.tempHigh_=t>>>0;else{for(l=0;5>l;l++)if(t|=(127&(e=this.bytes_[this.cursor_++]))<<7*l+3,128>e)return this.tempLow_=n>>>0,void(this.tempHigh_=t>>>0);goog.asserts.fail("Failed to read varint, encoding is invalid."),this.error_=!0}},jspb.BinaryDecoder.prototype.skipVarint=function(){for(;128&this.bytes_[this.cursor_];)this.cursor_++;this.cursor_++},jspb.BinaryDecoder.prototype.unskipVarint=function(e){for(;128<e;)this.cursor_--,e>>>=7;this.cursor_--},jspb.BinaryDecoder.prototype.readUnsignedVarint32=function(){var e,t=this.bytes_,n=127&(e=t[this.cursor_+0]);return 128>e?(this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),n):(n|=(127&(e=t[this.cursor_+1]))<<7,128>e?(this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),n):(n|=(127&(e=t[this.cursor_+2]))<<14,128>e?(this.cursor_+=3,goog.asserts.assert(this.cursor_<=this.end_),n):(n|=(127&(e=t[this.cursor_+3]))<<21,128>e?(this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),n):(n|=(15&(e=t[this.cursor_+4]))<<28,128>e?(this.cursor_+=5,goog.asserts.assert(this.cursor_<=this.end_),n>>>0):(this.cursor_+=5,128<=t[this.cursor_++]&&128<=t[this.cursor_++]&&128<=t[this.cursor_++]&&128<=t[this.cursor_++]&&128<=t[this.cursor_++]&&goog.asserts.assert(!1),goog.asserts.assert(this.cursor_<=this.end_),n)))))},jspb.BinaryDecoder.prototype.readSignedVarint32=jspb.BinaryDecoder.prototype.readUnsignedVarint32,jspb.BinaryDecoder.prototype.readUnsignedVarint32String=function(){return this.readUnsignedVarint32().toString()},jspb.BinaryDecoder.prototype.readSignedVarint32String=function(){return this.readSignedVarint32().toString()},jspb.BinaryDecoder.prototype.readZigzagVarint32=function(){var e=this.readUnsignedVarint32();return e>>>1^-(1&e)},jspb.BinaryDecoder.prototype.readUnsignedVarint64=function(){return this.readSplitVarint64_(),jspb.utils.joinUint64(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readUnsignedVarint64String=function(){return this.readSplitVarint64_(),jspb.utils.joinUnsignedDecimalString(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readSignedVarint64=function(){return this.readSplitVarint64_(),jspb.utils.joinInt64(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readSignedVarint64String=function(){return this.readSplitVarint64_(),jspb.utils.joinSignedDecimalString(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readZigzagVarint64=function(){return this.readSplitVarint64_(),jspb.utils.joinZigzag64(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readZigzagVarint64String=function(){return this.readZigzagVarint64().toString()},jspb.BinaryDecoder.prototype.readUint8=function(){var e=this.bytes_[this.cursor_+0];return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),e},jspb.BinaryDecoder.prototype.readUint16=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1];return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),e<<0|t<<8},jspb.BinaryDecoder.prototype.readUint32=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1],n=this.bytes_[this.cursor_+2],l=this.bytes_[this.cursor_+3];return this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),(e<<0|t<<8|n<<16|l<<24)>>>0},jspb.BinaryDecoder.prototype.readUint64=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinUint64(e,t)},jspb.BinaryDecoder.prototype.readUint64String=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinUnsignedDecimalString(e,t)},jspb.BinaryDecoder.prototype.readInt8=function(){var e=this.bytes_[this.cursor_+0];return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),e<<24>>24},jspb.BinaryDecoder.prototype.readInt16=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1];return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),(e<<0|t<<8)<<16>>16},jspb.BinaryDecoder.prototype.readInt32=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1],n=this.bytes_[this.cursor_+2],l=this.bytes_[this.cursor_+3];return this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),e<<0|t<<8|n<<16|l<<24},jspb.BinaryDecoder.prototype.readInt64=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinInt64(e,t)},jspb.BinaryDecoder.prototype.readInt64String=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinSignedDecimalString(e,t)},jspb.BinaryDecoder.prototype.readFloat=function(){var e=this.readUint32();return jspb.utils.joinFloat32(e,0)},jspb.BinaryDecoder.prototype.readDouble=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinFloat64(e,t)},jspb.BinaryDecoder.prototype.readBool=function(){return!!this.bytes_[this.cursor_++]},jspb.BinaryDecoder.prototype.readEnum=function(){return this.readSignedVarint32()},jspb.BinaryDecoder.prototype.readString=function(e){var t=this.bytes_,n=this.cursor_;e=n+e;for(var l=[],r="";n<e;){if(128>(o=t[n++]))l.push(o);else{if(192>o)continue;if(224>o){var i=t[n++];l.push((31&o)<<6|63&i)}else if(240>o){i=t[n++];var s=t[n++];l.push((15&o)<<12|(63&i)<<6|63&s)}else if(248>o){var o=(o=(7&o)<<18|(63&(i=t[n++]))<<12|(63&(s=t[n++]))<<6|63&t[n++])-65536;l.push(55296+(o>>10&1023),56320+(1023&o))}}8192<=l.length&&(r+=String.fromCharCode.apply(null,l),l.length=0)}return r+=goog.crypt.byteArrayToString(l),this.cursor_=n,r},jspb.BinaryDecoder.prototype.readStringWithLength=function(){var e=this.readUnsignedVarint32();return this.readString(e)},jspb.BinaryDecoder.prototype.readBytes=function(e){if(0>e||this.cursor_+e>this.bytes_.length)return this.error_=!0,goog.asserts.fail("Invalid byte length!"),new Uint8Array(0);var t=this.bytes_.subarray(this.cursor_,this.cursor_+e);return this.cursor_+=e,goog.asserts.assert(this.cursor_<=this.end_),t},jspb.BinaryDecoder.prototype.readVarintHash64=function(){return this.readSplitVarint64_(),jspb.utils.joinHash64(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readFixedHash64=function(){var e=this.bytes_,t=this.cursor_,n=e[t+0],l=e[t+1],r=e[t+2],i=e[t+3],s=e[t+4],o=e[t+5],a=e[t+6];e=e[t+7];return this.cursor_+=8,String.fromCharCode(n,l,r,i,s,o,a,e)},jspb.BinaryReader=function(e,t,n){this.decoder_=jspb.BinaryDecoder.alloc(e,t,n),this.fieldCursor_=this.decoder_.getCursor(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID,this.error_=!1,this.readCallbacks_=null},jspb.BinaryReader.instanceCache_=[],jspb.BinaryReader.alloc=function(e,t,n){if(jspb.BinaryReader.instanceCache_.length){var l=jspb.BinaryReader.instanceCache_.pop();return e&&l.decoder_.setBlock(e,t,n),l}return new jspb.BinaryReader(e,t,n)},jspb.BinaryReader.prototype.alloc=jspb.BinaryReader.alloc,jspb.BinaryReader.prototype.free=function(){this.decoder_.clear(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID,this.error_=!1,this.readCallbacks_=null,100>jspb.BinaryReader.instanceCache_.length&&jspb.BinaryReader.instanceCache_.push(this)},jspb.BinaryReader.prototype.getFieldCursor=function(){return this.fieldCursor_},jspb.BinaryReader.prototype.getCursor=function(){return this.decoder_.getCursor()},jspb.BinaryReader.prototype.getBuffer=function(){return this.decoder_.getBuffer()},jspb.BinaryReader.prototype.getFieldNumber=function(){return this.nextField_},jspb.BinaryReader.prototype.getWireType=function(){return this.nextWireType_},jspb.BinaryReader.prototype.isEndGroup=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP},jspb.BinaryReader.prototype.getError=function(){return this.error_||this.decoder_.getError()},jspb.BinaryReader.prototype.setBlock=function(e,t,n){this.decoder_.setBlock(e,t,n),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID},jspb.BinaryReader.prototype.reset=function(){this.decoder_.reset(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID},jspb.BinaryReader.prototype.advance=function(e){this.decoder_.advance(e)},jspb.BinaryReader.prototype.nextField=function(){if(this.decoder_.atEnd())return!1;if(this.getError())return goog.asserts.fail("Decoder hit an error"),!1;this.fieldCursor_=this.decoder_.getCursor();var e,t=(e=this.decoder_.readUnsignedVarint32())>>>3;return(e=7&e)!=jspb.BinaryConstants.WireType.VARINT&&e!=jspb.BinaryConstants.WireType.FIXED32&&e!=jspb.BinaryConstants.WireType.FIXED64&&e!=jspb.BinaryConstants.WireType.DELIMITED&&e!=jspb.BinaryConstants.WireType.START_GROUP&&e!=jspb.BinaryConstants.WireType.END_GROUP?(goog.asserts.fail("Invalid wire type"),this.error_=!0,!1):(this.nextField_=t,this.nextWireType_=e,!0)},jspb.BinaryReader.prototype.unskipHeader=function(){this.decoder_.unskipVarint(this.nextField_<<3|this.nextWireType_)},jspb.BinaryReader.prototype.skipMatchingFields=function(){var e=this.nextField_;for(this.unskipHeader();this.nextField()&&this.getFieldNumber()==e;)this.skipField();this.decoder_.atEnd()||this.unskipHeader()},jspb.BinaryReader.prototype.skipVarintField=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.VARINT?(goog.asserts.fail("Invalid wire type for skipVarintField"),this.skipField()):this.decoder_.skipVarint()},jspb.BinaryReader.prototype.skipDelimitedField=function(){if(this.nextWireType_!=jspb.BinaryConstants.WireType.DELIMITED)goog.asserts.fail("Invalid wire type for skipDelimitedField"),this.skipField();else{var e=this.decoder_.readUnsignedVarint32();this.decoder_.advance(e)}},jspb.BinaryReader.prototype.skipFixed32Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED32?(goog.asserts.fail("Invalid wire type for skipFixed32Field"),this.skipField()):this.decoder_.advance(4)},jspb.BinaryReader.prototype.skipFixed64Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED64?(goog.asserts.fail("Invalid wire type for skipFixed64Field"),this.skipField()):this.decoder_.advance(8)},jspb.BinaryReader.prototype.skipGroup=function(){var e=[this.nextField_];do{if(!this.nextField()){goog.asserts.fail("Unmatched start-group tag: stream EOF"),this.error_=!0;break}if(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP)e.push(this.nextField_);else if(this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP&&this.nextField_!=e.pop()){goog.asserts.fail("Unmatched end-group tag"),this.error_=!0;break}}while(0<e.length)},jspb.BinaryReader.prototype.skipField=function(){switch(this.nextWireType_){case jspb.BinaryConstants.WireType.VARINT:this.skipVarintField();break;case jspb.BinaryConstants.WireType.FIXED64:this.skipFixed64Field();break;case jspb.BinaryConstants.WireType.DELIMITED:this.skipDelimitedField();break;case jspb.BinaryConstants.WireType.FIXED32:this.skipFixed32Field();break;case jspb.BinaryConstants.WireType.START_GROUP:this.skipGroup();break;default:goog.asserts.fail("Invalid wire encoding for field.")}},jspb.BinaryReader.prototype.registerReadCallback=function(e,t){goog.isNull(this.readCallbacks_)&&(this.readCallbacks_={}),goog.asserts.assert(!this.readCallbacks_[e]),this.readCallbacks_[e]=t},jspb.BinaryReader.prototype.runReadCallback=function(e){return goog.asserts.assert(!goog.isNull(this.readCallbacks_)),e=this.readCallbacks_[e],goog.asserts.assert(e),e(this)},jspb.BinaryReader.prototype.readAny=function(e){this.nextWireType_=jspb.BinaryConstants.FieldTypeToWireType(e);var t=jspb.BinaryConstants.FieldType;switch(e){case t.DOUBLE:return this.readDouble();case t.FLOAT:return this.readFloat();case t.INT64:return this.readInt64();case t.UINT64:return this.readUint64();case t.INT32:return this.readInt32();case t.FIXED64:return this.readFixed64();case t.FIXED32:return this.readFixed32();case t.BOOL:return this.readBool();case t.STRING:return this.readString();case t.GROUP:goog.asserts.fail("Group field type not supported in readAny()");case t.MESSAGE:goog.asserts.fail("Message field type not supported in readAny()");case t.BYTES:return this.readBytes();case t.UINT32:return this.readUint32();case t.ENUM:return this.readEnum();case t.SFIXED32:return this.readSfixed32();case t.SFIXED64:return this.readSfixed64();case t.SINT32:return this.readSint32();case t.SINT64:return this.readSint64();case t.FHASH64:return this.readFixedHash64();case t.VHASH64:return this.readVarintHash64();default:goog.asserts.fail("Invalid field type in readAny()")}return 0},jspb.BinaryReader.prototype.readMessage=function(e,t){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var n=this.decoder_.getEnd(),l=this.decoder_.readUnsignedVarint32();l=this.decoder_.getCursor()+l;this.decoder_.setEnd(l),t(e,this),this.decoder_.setCursor(l),this.decoder_.setEnd(n)},jspb.BinaryReader.prototype.readGroup=function(e,t,n){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP),goog.asserts.assert(this.nextField_==e),n(t,this),this.error_||this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP||(goog.asserts.fail("Group submessage did not end with an END_GROUP tag"),this.error_=!0)},jspb.BinaryReader.prototype.getFieldDecoder=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var e=this.decoder_.readUnsignedVarint32(),t=this.decoder_.getCursor(),n=t+e;e=jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(),t,e);return this.decoder_.setCursor(n),e},jspb.BinaryReader.prototype.readInt32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint32()},jspb.BinaryReader.prototype.readInt32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint32String()},jspb.BinaryReader.prototype.readInt64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64()},jspb.BinaryReader.prototype.readInt64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64String()},jspb.BinaryReader.prototype.readUint32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint32()},jspb.BinaryReader.prototype.readUint32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint32String()},jspb.BinaryReader.prototype.readUint64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint64()},jspb.BinaryReader.prototype.readUint64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint64String()},jspb.BinaryReader.prototype.readSint32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint32()},jspb.BinaryReader.prototype.readSint64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint64()},jspb.BinaryReader.prototype.readSint64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint64String()},jspb.BinaryReader.prototype.readFixed32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readUint32()},jspb.BinaryReader.prototype.readFixed64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readUint64()},jspb.BinaryReader.prototype.readFixed64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readUint64String()},jspb.BinaryReader.prototype.readSfixed32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readInt32()},jspb.BinaryReader.prototype.readSfixed32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readInt32().toString()},jspb.BinaryReader.prototype.readSfixed64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readInt64()},jspb.BinaryReader.prototype.readSfixed64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readInt64String()},jspb.BinaryReader.prototype.readFloat=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readFloat()},jspb.BinaryReader.prototype.readDouble=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readDouble()},jspb.BinaryReader.prototype.readBool=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),!!this.decoder_.readUnsignedVarint32()},jspb.BinaryReader.prototype.readEnum=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64()},jspb.BinaryReader.prototype.readString=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var e=this.decoder_.readUnsignedVarint32();return this.decoder_.readString(e)},jspb.BinaryReader.prototype.readBytes=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var e=this.decoder_.readUnsignedVarint32();return this.decoder_.readBytes(e)},jspb.BinaryReader.prototype.readVarintHash64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readVarintHash64()},jspb.BinaryReader.prototype.readFixedHash64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readFixedHash64()},jspb.BinaryReader.prototype.readPackedField_=function(e){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);for(var t=this.decoder_.readUnsignedVarint32(),n=(t=this.decoder_.getCursor()+t,[]);this.decoder_.getCursor()<t;)n.push(e.call(this.decoder_));return n},jspb.BinaryReader.prototype.readPackedInt32=function(){return this.readPackedField_(this.decoder_.readSignedVarint32)},jspb.BinaryReader.prototype.readPackedInt32String=function(){return this.readPackedField_(this.decoder_.readSignedVarint32String)},jspb.BinaryReader.prototype.readPackedInt64=function(){return this.readPackedField_(this.decoder_.readSignedVarint64)},jspb.BinaryReader.prototype.readPackedInt64String=function(){return this.readPackedField_(this.decoder_.readSignedVarint64String)},jspb.BinaryReader.prototype.readPackedUint32=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32)},jspb.BinaryReader.prototype.readPackedUint32String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32String)},jspb.BinaryReader.prototype.readPackedUint64=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64)},jspb.BinaryReader.prototype.readPackedUint64String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64String)},jspb.BinaryReader.prototype.readPackedSint32=function(){return this.readPackedField_(this.decoder_.readZigzagVarint32)},jspb.BinaryReader.prototype.readPackedSint64=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64)},jspb.BinaryReader.prototype.readPackedSint64String=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64String)},jspb.BinaryReader.prototype.readPackedFixed32=function(){return this.readPackedField_(this.decoder_.readUint32)},jspb.BinaryReader.prototype.readPackedFixed64=function(){return this.readPackedField_(this.decoder_.readUint64)},jspb.BinaryReader.prototype.readPackedFixed64String=function(){return this.readPackedField_(this.decoder_.readUint64String)},jspb.BinaryReader.prototype.readPackedSfixed32=function(){return this.readPackedField_(this.decoder_.readInt32)},jspb.BinaryReader.prototype.readPackedSfixed64=function(){return this.readPackedField_(this.decoder_.readInt64)},jspb.BinaryReader.prototype.readPackedSfixed64String=function(){return this.readPackedField_(this.decoder_.readInt64String)},jspb.BinaryReader.prototype.readPackedFloat=function(){return this.readPackedField_(this.decoder_.readFloat)},jspb.BinaryReader.prototype.readPackedDouble=function(){return this.readPackedField_(this.decoder_.readDouble)},jspb.BinaryReader.prototype.readPackedBool=function(){return this.readPackedField_(this.decoder_.readBool)},jspb.BinaryReader.prototype.readPackedEnum=function(){return this.readPackedField_(this.decoder_.readEnum)},jspb.BinaryReader.prototype.readPackedVarintHash64=function(){return this.readPackedField_(this.decoder_.readVarintHash64)},jspb.BinaryReader.prototype.readPackedFixedHash64=function(){return this.readPackedField_(this.decoder_.readFixedHash64)},jspb.Export={},exports.Map=jspb.Map,exports.Message=jspb.Message,exports.BinaryReader=jspb.BinaryReader,exports.BinaryWriter=jspb.BinaryWriter,exports.ExtensionFieldInfo=jspb.ExtensionFieldInfo,exports.ExtensionFieldBinaryInfo=jspb.ExtensionFieldBinaryInfo,exports.exportSymbol=goog.exportSymbol,exports.inherits=goog.inherits,exports.object={extend:goog.object.extend},exports.typeOf=goog.typeOf}).call(this,__webpack_require__(33),__webpack_require__(52).Buffer)},function(e,t,n){"use strict";n.r(t);var l=n(1),r=n(9),i=n(3),s=n(0),o=n(43),a=n(4),u=n(6),c=n.n(u);class d{constructor(e,t){this.regId=e,this.getPublicKeysFunction=t,this.profileKeys={},this.chatKeys=new Map,this.publicKeys=new Map,this.publicKeyRequests=new Map,this.logPrefix=`BaseKeyManager[${this.regId}]`,this.publicSigningKey,this.publicEncryptionKey}generateProfileKeys(){return Object(s.default)(s.default.INFO,"%s: Generating new profile keys",this.logPrefix),Promise.all([a.generateEncryptionKeyPair(),a.generateSigningKeyPair()]).then(e=>(g(this.logPrefix,"generatedProfileKeys result",e[0]),g(this.logPrefix,"generatedProfileKeys result",e[1]),{privateEncryptionKey:e[0].privateKey,privateSigningKey:e[1].privateKey,publicEncryptionKey:e[0].publicKey,publicSigningKey:e[1].publicKey}))}setProfileKeys(e){this.publicSigningKey=e.publicSigningKey,this.publicEncryptionKey=e.publicEncryptionKey;let t=new Uint8Array(e.publicEncryptionKey.length+e.publicSigningKey.length);return t.set(e.publicEncryptionKey),t.set(e.publicSigningKey,e.publicEncryptionKey.length),Promise.all([a.importPrivateEncryptionKey(e.privateEncryptionKey,e.publicEncryptionKey),a.importPrivateSigningKey(e.privateSigningKey,e.publicSigningKey),a.importPublicEncryptionKey(e.publicEncryptionKey),a.importPublicSigningKey(e.publicSigningKey),c.a.digest(c.a.DigestAlgorithm.SHA512,t)]).then(e=>(this.profileKeys={private:{encrypt:e[0],sign:e[1]},public:{encrypt:e[2],sign:e[3],hash:e[4]}},Promise.resolve()))}getPrivateEncryptionKey(){return new Promise(e=>{if(void 0===this.profileKeys.private||void 0===this.profileKeys.private.encrypt)throw new l.NotFoundError("No private encryption key");return h(this.logPrefix,"getPrivateEncryptionKey dispensing",this.profileKeys.private.encrypt),e(this.profileKeys.private.encrypt)})}getPrivateSigningKey(){return new Promise(e=>{if(void 0===this.profileKeys.private||void 0===this.profileKeys.private.sign)throw new l.NotFoundError("No private signing key");return h(this.logPrefix,"getPrivateSigningKey dispensing",this.profileKeys.private.sign),e(this.profileKeys.private.sign)})}getPublicKeys(e,t){if(e===this.regId)return new Promise(t=>(h(this.logPrefix,"getPublicKeys["+e+"] dispensing cached",this.profileKeys.public),t(this.profileKeys.public)));if(!t){const t=this.publicKeys.get(e);if(t)return f(this.logPrefix,"getPublicKeys["+e+"] dispensing cached",t),Promise.resolve(t)}const n=this.publicKeyRequests.get(e);if(n)return n;const r=this.getPublicKeysFunction(e).then(t=>{if(!t||!t.encryptionKey||!t.signingKey)throw new l.NotFoundError("No public keys for regId="+e);g(this.logPrefix,"getPublicKeysFunction["+e+"] result",t);let n=new Uint8Array(t.encryptionKey.length+t.signingKey.length);return n.set(t.encryptionKey),n.set(t.signingKey,t.encryptionKey.length),Promise.all([a.importPublicEncryptionKey(t.encryptionKey),a.importPublicSigningKey(t.signingKey),c.a.digest(c.a.DigestAlgorithm.SHA512,n)])}).then(t=>{let n={encrypt:t[0],sign:t[1],hash:t[2]};return f(this.logPrefix,"getPublicKeysFunction["+e+"] dispensing",n),this.publicKeys.set(e,n),this.publicKeyRequests.delete(e),n}).catch(t=>{throw this.publicKeyRequests.delete(e),t});return this.publicKeyRequests.set(e,r),r}removePublicKeys(e){this.publicKeys.delete(e),s.default.debug(s.default.DEBUG2,"%s: Removed public keys for regId=%s",this.logPrefix,e)}getChatKey(e){return new Promise(t=>{const n=this.chatKeys.get(e);if(n)return p(this.logPrefix,"getChatKey["+e+"] dispensing",n),t(n);throw new l.NotFoundError("No chat key for chatId="+e)})}getCachedChatKey(e){return this.chatKeys.get(e)}setChatKey(e,t){this.chatKeys.set(e,t),p(this.logPrefix,"setChatKey["+e+"]",t)}removeChatKey(e){this.chatKeys.delete(e),s.default.debug(s.default.DEBUG2,"%s: Removed chat key for chatId=%s",this.logPrefix,e)}}function p(e,t,n){s.default.debug(s.default.DEBUG2,"%s: Key from %s: %s",e,t,i.array2hex(n))}function g(e,t,n){for(const l in n)p(e,t+" "+l,n[l])}function h(e,t,n){s.default.debug(s.default.DEBUG2,"%s: CryptoKey from %s: {t=%s e=%s a=%s u=%s}",e,t,n.type,n.extractable,JSON.stringify(n.algorithm),n.usages)}function f(e,t,n){for(const l in n)h(e,t+" "+l,n[l])}class m extends d{constructor(e,t){super(e,e=>t.getPublicKeys(e)),this.keyProvider=t,this.logPrefix=`AppKeyManager[${this.regId}]`}setup(){let e=null,t=()=>super.generateProfileKeys().then(t=>(e=t,super.setProfileKeys(t))).catch(e=>{throw Object(s.default)(s.default.ERROR,"%s: Failed to import generated profile keys: %s",this.logPrefix,e),s.default.logErrorForDebugging(e),e}).then(()=>{try{return this.keyProvider.saveProfileKeys(e)}catch(e){Object(s.default)(s.default.ERROR,"%s: Failed to save profile keys: %s",this.logPrefix,e),s.default.logErrorForDebugging(e)}});var n=()=>{let l;return new Promise((e,n)=>{try{this.keyProvider.getProfileKeys().then(n=>{n&&0===Object.keys(n).length?(Object(s.default)(s.default.INFO,"%s: Empty profile keys, will generate keys",this.logPrefix),e(t())):e(n)}).catch(e=>{Object(s.default)(s.default.INFO,"%s: Caught error from key provider, error: %s",this.logPrefix,e),l=e,n(e)})}catch(e){l=e,n(e)}}).then(t=>e?t:(b(this.logPrefix,`keyProvider.getProfileKeys[regId=${this.regId}] result`,t),super.setProfileKeys(t))).then(()=>e?Promise.resolve():new Promise((e,t)=>{this.keyProvider.getChatKeys().then(e,t)}).then(e=>(Object.keys(e).forEach(t=>{this.chatKeys.set(t,e[t])}),b(this.logPrefix,"keyProvider.getChatKeys result",this.chatKeys),Promise.resolve())).catch(e=>{Object(s.default)(s.default.INFO,"%s: Failed to get chat keys: %s",this.logPrefix,e),s.default.logErrorForDebugging(e)})).catch(e=>(Object(s.default)(s.default.ERROR,"%s: Failed to import profile keys, error: %s",this.logPrefix,e),s.default.logErrorForDebugging(e),"function"==typeof this.keyProvider.profileKeysImportFailed?this.keyProvider.profileKeysImportFailed(l).then(e=>(Object(s.default)(s.default.INFO,"%s: keyProvider failureChoice=%s",this.logPrefix,e),e===o.default.FailureChoice.GetProfileKeys?new Promise((e,t)=>{setTimeout(function(){n().then(function(t){e(t)}).catch(function(e){t(e)})},0)}):e===o.default.FailureChoice.GenerateNewKeys?t():(Object(s.default)(s.default.ERROR,"%s: Abandoning setup, failureChoice=%s",this.logPrefix,e),Promise.reject(new r.RegistrationChanged({regId:this.regId,reason:r.RegistrationChanged.Failure.FailedToImportProfileKeys}))))):(Object(s.default)(s.default.ERROR,"%s: Abandoning setup; KeyProvider.profileKeysImportFailed is not defined as a function",this.logPrefix),Promise.reject(new r.RegistrationChanged({regId:this.regId,reason:r.RegistrationChanged.Failure.FailedToImportProfileKeys})))))};return n().then(()=>null!==e).catch(e=>{throw Object(s.default)(s.default.ERROR,"%s: Failed to setup profile keys: %s",this.logPrefix,e),s.default.logErrorForDebugging(e),e})}getChatKey(e){return super.getChatKey(e).catch(t=>{if(t instanceof l.NotFoundError)return this.keyProvider.getChatKey(e).then(t=>{if(t instanceof Uint8Array&&0!==t.length)return y(this.logPrefix,"getChatKey["+e+"] dispensing",t),super.setChatKey(e,t),t;throw new l.NotFoundError("Chat key for chatId="+e+" is not useable")});throw t})}setChatKey(e,t){super.setChatKey(e,t);try{this.keyProvider.saveChatKey(e,t)}catch(t){Object(s.default)(s.default.ERROR,"%s: Failed to save chat key for chatId=%s: %s",this.logPrefix,e,t),s.default.logErrorForDebugging(t)}}removeChatKey(e){super.removeChatKey(e);try{this.keyProvider.removeChatKey(e)}catch(t){Object(s.default)(s.default.ERROR,"%s: Failed to remove chat key for chatId=%s: %s",this.logPrefix,e,t),s.default.logErrorForDebugging(t)}}}function y(e,t,n){void 0}function b(e,t,n){void 0}var v=n(5);class E extends d{constructor(e,t,n){super(t.regId,e=>this.getUserKeys(e)),this.requestManager=e,this.kmsClient=t,this.wasmUrl=n,this.mgmtKey=void 0}restoreProfileKeys(e,t){return new Promise((n,l)=>{const r=v.c(i.b2array(e.private.manage));return a.decryptMgmtKey({content:r.payload,tag:r.mac},r.nonce,r.salt,t,this.kmsClient.regId,this.kmsClient.domain,this.wasmUrl).then(n,l)}).then(t=>{const n=v.c(i.b2array(e.private.encrypt)),l=v.c(i.b2array(e.private.sign));return Promise.all([a.authDecrypt({content:n.payload,tag:n.mac},n.nonce,t),a.authDecrypt({content:l.payload,tag:l.mac},l.nonce,t)]).then(n=>(this.mgmtKey=t,super.setProfileKeys({privateEncryptionKey:n[0],privateSigningKey:n[1],publicEncryptionKey:v.c(i.b2array(e.public.encrypt)).key,publicSigningKey:v.c(i.b2array(e.public.sign)).key})))})}createProfileKeys(e){let t,n;return Promise.all([super.generateProfileKeys(),a.generateManagementKey()]).then(l=>{t=l[0],n=l[1];const r=a.generateBytes(12),s=a.generateBytes(12),o=a.generateBytes(12),u=a.generateBytes(16);return Promise.all([a.authEncrypt(t.privateEncryptionKey,r,n),a.authEncrypt(t.privateSigningKey,s,n),a.encryptMgmtKey(n,o,u,e,this.kmsClient.regId,this.kmsClient.domain,this.wasmUrl)]).then(e=>this.requestManager.retryableRequest(()=>this.kmsClient.setProfileKeys(i.array2b(v.d({key:t.publicEncryptionKey})),i.array2b(v.d({key:t.publicSigningKey})),i.array2b(v.d({payload:e[0].content,mac:e[0].tag,nonce:r})),i.array2b(v.d({payload:e[1].content,mac:e[1].tag,nonce:s})),i.array2b(v.d({payload:e[2].content,mac:e[2].tag,nonce:o,salt:u})))))}).then(()=>(this.mgmtKey=n,super.setProfileKeys(t)))}setMgmtKeyPasscode(e){if(void 0===this.mgmtKey)return Promise.reject(new l.NotFoundError("No mgmt key to set a passcode for"));const t=a.generateBytes(12),n=a.generateBytes(16);return a.encryptMgmtKey(this.mgmtKey,t,n,e,this.kmsClient.regId,this.kmsClient.domain,this.wasmUrl).then(e=>{const l=i.array2b(v.d({payload:e.content,mac:e.tag,nonce:t,salt:n}));return this.requestManager.retryableRequest(()=>this.kmsClient.setMgmtKey(l))})}getUserKeys(e){return this.requestManager.retryableRequest(()=>this.kmsClient.getPublicKeys(e).then(t=>{if(void 0===t)throw new l.PermanentFailure("No keys exist for regId="+e);return{encryptionKey:v.c(i.b2array(t.public.encrypt)).key,signingKey:v.c(i.b2array(t.public.sign)).key}}))}}var I=n(26),S=n.n(I);function _(e,t,n){var l=new T(e,t,n);Object.defineProperty(this,"_private",{enumerable:!1,get:function(){if(!T.isAccessAllowed)throw new TypeError("Illegal access of private data");return l}}),Object.defineProperty(this,"media",{enumerable:!0,value:l.media}),Object.defineProperty(this,"state",{enumerable:!0,get:function(){return l.state}}),Object.defineProperty(this,"requestCount",{enumerable:!0,get:function(){return l.requests.size}})}function T(e,t,n){this.name="Transport",this.state={connected:!1},this.callbacks=n,this.requests=new Set,this.hadAuthFailure=!1,this.hadTemporarySipFailure=!1,this.sipTransport=new I.SIPTransport(e),this.registeredCallback=T.prototype.onSipRegistered.bind(this),this.regFailedCallback=T.prototype.onSipRegFailure.bind(this),this.disconnectedCallback=T.prototype.disconnected.bind(this),this.receiveCallback=T.prototype.onMcpOnlineMessage.bind(this),this.sipTransport.on("registered",this.registeredCallback),this.sipTransport.on("registration_failed",this.regFailedCallback),this.sipTransport.on("disconnected",this.disconnectedCallback),this.sipTransport.on("McpOnlineMessage",this.receiveCallback);try{this.media=new I.VVoip(this,t)}catch(e){this.media=null}}_.prototype.mcpPost=function(e,t){return T.getPrivateData(this).sendMcpRequest({name:"mcpPost",mailboxId:e},e,t)},_.prototype.mcpPull=function(e,t){return T.getPrivateData(this).sendMcpRequest({name:"mcpPull",mailboxId:e},e,t)},_.prototype.mcpSync=function(e){return T.getPrivateData(this).sendMcpRequest({name:"mcpSync",mailboxId:"sync"},e)},_.prototype.shutdown=function(){var e=T.getPrivateData(this),t=e.sipTransport;t.removeListener("registered",e.registeredCallback),t.removeListener("registration_failed",e.regFailedCallback),t.removeListener("disconnected",e.disconnectedCallback),t.removeListener("McpOnlineMessage",e.receiveCallback),t.stop(),e.disconnected()},T.isAccessAllowed=!1,T.getPrivateData=function(e){T.isAccessAllowed=!0;var t=e._private;return T.isAccessAllowed=!1,t},T.prototype.onSipRegistered=function(){this.hadAuthFailure&&(Object(s.default)(s.default.INFO,"%s: Recovered from SIP auth failure",this.name),this.hadAuthFailure=!1),this.hadTemporarySipFailure&&(Object(s.default)(s.default.INFO,"%s: Recovered from SIP temporary failure",this.name),this.hadTemporarySipFailure=!1),this.state.connected||(Object(s.default)(s.default.INFO,"%s: Connected",this.name),this.state={connected:!0},this.callCallback("connected"))},T.prototype.onSipRegFailure=function(e){var t=e.status_code;if(this.disconnected(),401===t||403===t){if(!this.hadAuthFailure)return Object(s.default)(s.default.INFO,"%s: Ignoring SIP auth failure: code=%d",this.name,t),void(this.hadAuthFailure=!0)}else if(t>=500&&t<600)return Object(s.default)(s.default.INFO,"%s: Ignoring SIP temporary failure: code=%d",this.name,t),void(this.hadTemporarySipFailure=!0);Object(s.default)(s.default.ERROR,"%s: Failed SIP registration: cause=%s code=%d",this.name,e.cause,t),this.state.reason=410===t?r.RegistrationChanged.Failure.RegistrationRevoked:401===t||403===t?r.RegistrationChanged.Failure.Forbidden:r.RegistrationChanged.Failure.GeneralFailure,this.callCallback("registrationFailed",this.state.reason)},T.prototype.onMcpOnlineMessage=function(e){this.state.connected?this.callCallback("receive",e):Object(s.default)(s.default.ERROR,"%s: Discarding online message received while disconnected",this.name)},T.prototype.callCallback=function(e,...t){try{this.callbacks[e](...t)}catch(t){Object(s.default)(s.default.ERROR,"%s: Failed to call %s callback: %s",this.name,e,t),s.default.logErrorForDebugging(t)}},T.prototype.sendMcpRequest=function(e,...t){var n=this;return n.state.connected?new Promise(function(l,r){function i(){n.requests.delete(e)}e.reject=r,n.requests.add(e);try{n.sipTransport[e.name](...t).then(function(e){l(e),i()}).catch(function(t){r(n.convertSipError(e.mailboxId,t)),i()})}catch(t){r(n.convertSipError(e.mailboxId,t)),i()}}):Promise.reject({mbx_id:e.mailboxId,status_code:480,cause:"Transport disconnected"})},T.prototype.disconnected=function(){if(this.state.connected){Object(s.default)(s.default.INFO,"%s: Disconnected",this.name),this.state={connected:!1},this.callCallback("disconnected");for(let e of this.requests)Object(s.default)(s.default.DEBUG2,"%s: Failing outstanding %s request with a temporary failure",this.name,e.name),e.reject({mbx_id:e.mailboxId,status_code:480,cause:"Transport disconnected"});this.requests.clear()}else Object(s.default)(s.default.DEBUG2,"%s: Ignoring disconnected event; already disconnected",this.name)},T.prototype.convertSipError=function(e,t){if(t instanceof Error){if("TIMEOUT_ERROR"===t.name)return Object(s.default)(s.default.DEBUG2,"%s: Converting TimeoutError to MCPResponse; code=408",this.name),{mbx_id:e,status_code:408,cause:t.message};if("STATE_ERROR"===t.name)return Object(s.default)(s.default.DEBUG2,"%s: Converting InvalidStateError to MCPResponse; code=480",this.name),{mbx_id:e,status_code:480,cause:t.message}}return t};var w=n(24),R=n(18),A=n(48);const O=R.default.Method,C=R.default.Server.Kms;class M{constructor(e,t,n,l){this.busClient=e,this.keysUrl=`/domains/${t}/user/keys`,this.userKeysUrl=`${this.keysUrl}/${n}`,this.setKeysUrl=`${this.userKeysUrl}?endpointId=${l}`,this.regId=n,this.domain=t}getAllKeys(){return this.busClient.request(this.userKeysUrl,this.busClient.requestOptions(O.GET,C))}getPublicKeys(e){return this.busClient.request(this.keysUrl+"/"+e,this.busClient.requestOptions(O.GET,C))}setProfileKeys(e,t,n,l,r){return this.busClient.request(this.setKeysUrl+"&replace=true",this.busClient.requestOptions(O.PUT,C),{public:{encrypt:e,sign:t},private:{encrypt:n,sign:l,manage:r}})}setMgmtKey(e){return this.busClient.request(this.setKeysUrl,this.busClient.requestOptions(O.PUT,C),{private:{manage:e}})}}var P=n(49),j=n(2);n.d(t,"busRegisterEndpoint",function(){return x}),n.d(t,"getBbmToken",function(){return N}),n.d(t,"createEndpointManagementInterface",function(){return U}),n.d(t,"sipRegisterEndpoint",function(){return F}),n.d(t,"setupKeyManagerWithKeyProvider",function(){return k}),n.d(t,"setupKeyManagerWithKms",function(){return B}),n.d(t,"preMessengerSetup",function(){return L}),n.d(t,"messengerSetup",function(){return $});const D="BBMEnterprise";function x(e,t){return e.messengerData.busClient=new R.default(t.profile.host,t.mailbox.host,t.kms.host,t.profile.port,t.mailbox.port,t.kms.port,e.configuration.domain,e.configuration.userId,e.configuration.getToken),e.persistentData.requestManager.retryableRequest(()=>e.messengerData.busClient.register(e.configuration.userId,e.persistentData.endpointId,2560..toString(),e.version,"1247904",e.configuration.description,e.configuration.nickname)).then(t=>{const n={regId:t.registrationId.toString(),registrationToken:t.registrationToken,pin:t.pin};if("SwitchNotSupported"===t.accountStatus||"SwitchRequired"===t.accountStatus){n.reason=r.RegistrationChanged.Failure.DeviceSwitchRequired;const e=new r.RegistrationChanged(n);throw Object(s.default)(s.default.ERROR,"%s: An SPoP client is already registered for this account; regId=%s pin=%s",D,e.regId,e.pin),e}if("Restored"!==t.accountStatus&&"EndpointAdded"!==t.accountStatus&&"Created"!==t.accountStatus&&"Switched"!==t.accountStatus){n.reason=r.RegistrationChanged.Failure.GeneralFailure;const e=new r.RegistrationChanged(n);throw Object(s.default)(s.default.ERROR,"%s: Unexpected registration accountStatus=%s in registration response; regId=%s pin=%s",D,t.accountStatus,n.regId,n.pin),e}if(e.messengerData.registrationInfo=new r.RegistrationChanged(n),Object.freeze(e.messengerData.registrationInfo),void 0!==t.kms&&"boolean"!=typeof t.kms)throw Object(s.default)(s.default.ERROR,"%s: Unexpected kms=%s value in registration response with type=%s",D,t.kms,typeof t.kms),n.reason=r.RegistrationChanged.Failure.GeneralFailure,new r.RegistrationChanged(n);if(!0===t.kms!==e.persistentData.kmsMode)throw e.persistentData.kmsMode?Object(s.default)(s.default.ERROR,"%s: The SDK is configured to use KMS for key storage, however the domain is configured for cloud key storage",D):Object(s.default)(s.default.ERROR,"%s: The SDK is configured to use cloud key storage, however the domain is configured to use KMS for key storage",D),n.reason=r.RegistrationChanged.Failure.DomainConfigurationMismatch,new r.RegistrationChanged(n);return e})}function N(e){return e.persistentData.requestManager.retryableRequest(()=>e.messengerData.busClient.bbmToken.get()).then(t=>(e.bbmToken=t,e))}function U(e,t){const n=new A.default(t.messengerData.busClient,t.configuration.domain,t.messengerData.registrationInfo.regId);return e.getAllEndpoints=((...e)=>n.getAllEndpoints(...e)),e.deleteEndpoint=((...e)=>n.deleteEndpoint(...e)),Promise.resolve(t)}function F(e,t){const n=new Promise((e,n)=>{const l=()=>{};t.messengerData.transportCallbacks={connected:()=>{e(),t.messengerData.transportCallbacks.connected=t.persistentData.retryServerRequests,t.messengerData.transportCallbacks.registrationFailed=l},registrationFailed:e=>{n(new r.RegistrationChanged(Object.assign({},t.messengerData.registrationInfo,{reason:e})))},disconnected:l,receive:l}});function i(e,t){return e+(t&&t.length?":"+t:"")}return t.discoveryClient.getDiscoveryInfo().then(n=>{t.messengerData.transport=new _({server_addr:n.sip.host,server_port:n.sip.port?n.sip.port:443,id_provider:t.configuration.domain,id_provider_user:t.configuration.userId,regId:t.messengerData.registrationInfo.regId,pin:t.messengerData.registrationInfo.pin,endpoint_id:t.persistentData.endpointId,getPins:e=>t.messengerData.busClient.getPins(e),bbm_token:{bbmToken:t.bbmToken.token,bbmTokenMin:t.bbmToken.tokenMin,secret:t.bbmToken.secret},bbmuser:{refreshBBMToken:(e,n)=>{t.messengerData.busClient.bbmToken.refresh().then(t=>{e({bbmToken:t.token,bbmTokenMin:t.tokenMin,secret:t.secret})}).catch(e=>n(e))}},caManager:t.caManager,logLevel:t.configuration.logLevel,version:t.version},!0===S.a.VVoip.disabled?{}:{protect:(e,n)=>t.messengerData.rim_im.protectUser(n,e),unprotect:(e,n)=>{try{return t.messengerData.rim_im.unprotectUser(n,v.c(e).protected)}catch(e){return Object(s.default)(s.default.ERROR,"%s: Error while unprotecting data blob; error=%s",D,e),Promise.reject(new l.Error("Failed to unprotect data blob"))}},stunServers:["stun:"+i(n.stun.host,n.stun.port)],turnServers:[new S.a.VVoip.TurnServerConfig("udp",i(n["turn-udp"].host,n["turn-udp"].port)),new S.a.VVoip.TurnServerConfig("tcp",i(n["turn-tcp"].host,n["turn-tcp"].port))]},t.messengerData.transportCallbacks),Object.defineProperty(e,"media",{enumerable:!0,configurable:!0,value:t.messengerData.transport.media})}).then(()=>n)}function k(e,t){return new Promise((n,l)=>{t.configuration.getKeyProvider(t.messengerData.registrationInfo.regId,t.messengerData.busClient.bbmToken.oauthToken).then(e=>(t.messengerData.keyManager=new m(t.messengerData.registrationInfo.regId,e),t.messengerData.keyManager.setup())).then(n=>n?e.getAllEndpoints().then(n=>Promise.all(n.endpoints.filter(e=>e.endpointId!==t.persistentData.endpointId).map(t=>e.deleteEndpoint(t.endpointId)))):Promise.resolve()).then(n).catch(e=>l(e))})}function B(e,t){return t.messengerData.kmsClient=new M(t.messengerData.busClient,t.configuration.domain,t.messengerData.registrationInfo.regId,t.persistentData.endpointId),t.messengerData.keyManager=new E(t.persistentData.requestManager,t.messengerData.kmsClient,t.configuration.kmsArgonWasmUrl),Object(j.default)(void 0===t.persistentData.kmsKeys),t.persistentData.requestManager.retryableRequest(()=>t.messengerData.kmsClient.getAllKeys()).then(e=>{const n=t.persistentData,l=t.BBMEnterprise.SetupState,r=t.BBMEnterprise.SyncPasscodeState;n.setupState.get()===l.Ongoing?(void 0===e?(n.kmsKeys=null,n.syncPasscodeState.set(r.New)):(n.kmsKeys=e,n.syncPasscodeState.set(r.Existing)),n.setupState.set(l.SyncRequired)):Object(s.default)(s.default.ERROR,"%s: Setup state has unexpected value=%s; expected=%s",D,n.setupState.get(),l.Ongoing)})}function L(e,t,n,l){return Object(s.default)(s.default.INFO,"%s: Starting setup; version=%s",D,"1.4.0-rc6"),t.messengerData=n(),t.messengerData.throwIfSipRegistrationFailed=function(){const e=this.transport.state;if(!e.connected&&e.reason)throw new r.RegistrationChanged(void 0===this.registrationInfo?void 0:Object.assign({},this.registrationInfo,{reason:e.reason}))},t.discoveryClient.getDiscoveryInfo().then(e=>x(t,e)).then(N).then(t=>U(e,t)).then(t=>Promise.all([F(e,t),l(e,t)]).then(()=>t))}function $(e,t,n){return t.messengerData.throwIfSipRegistrationFailed(),t.messengerData.rim_im=new w.a(t.messengerData.registrationInfo.regId,t.messengerData.keyManager),P.setup(e.messenger,t).then(t=>(t.messengerData.throwIfSipRegistrationFailed(),n(),delete t.messengerData.throwIfSipRegistrationFailed,Object(s.default)(s.default.INFO,"%s: Setup complete; version=%s",D,"1.4.0-rc6"),{messenger:e.messenger,media:e.media}))}},function(e,t,n){"use strict";n.r(t);var l=n(46),r=n(25),i=n.n(r);function s(){i.a.apply(this);const e=e=>{const t=[];return t.splice=((n,l,...r)=>{const i=Array.prototype.splice.call(t,n,l,...r);this.emit(e,{storage:t,index:n,removed:i,added:r.length})}),t};this.allocate=function(t){return{storageArray:e(t),newMessage:e=>e,getMessage:e=>e,getMessages:e=>e}}}s.prototype=Object.create(i.a.prototype);t.default={Immutable:l.a,SpliceWatcher:s}}]);